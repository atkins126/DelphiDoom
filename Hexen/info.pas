//------------------------------------------------------------------------------
//
//  DelphiHexen: A modified and improved Hexen port for Windows
//  based on original Linux Doom as published by "id Software", on
//  Hexen source as published by "Raven" software and DelphiDoom
//  as published by Jim Valavanis.
//  Copyright (C) 2004-2021 by Jim Valavanis
//
//  This program is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public License
//  as published by the Free Software Foundation; either version 2
//  of the License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
//  02111-1307, USA.
//
//  DESCRIPTION:
//   Thing frame/state LUT
//
//------------------------------------------------------------------------------
//  Site  : http://sourceforge.net/projects/delphidoom/
//------------------------------------------------------------------------------

{$I Doom32.inc}

unit info;

interface

uses
  d_delphi,
  d_think,
  m_fixed,
  info_h;

type
  statesArray_t = packed array[0..$FFFF] of state_t;
  PstatesArray_t = ^statesArray_t;

  sprnamesArray_t = packed array[0..Ord(DO_NUMSPRITES) - 1] of string[4];
  PsprnamesArray_t = ^sprnamesArray_t;

  mobjinfoArray_t = packed array[0..Ord(DO_NUMMOBJTYPES) - 1] of mobjinfo_t;
  PmobjinfoArray_t = ^mobjinfoArray_t;

var
  states: PstatesArray_t = nil;
  numstates: integer = Ord(DO_NUMSTATES);
  sprnames: PIntegerArray = nil;
  numsprites: integer = Ord(DO_NUMSPRITES);
  mobjinfo: PmobjinfoArray_t = nil;
  nummobjtypes: integer = Ord(DO_NUMMOBJTYPES);

procedure Info_Init(const usethinkers: boolean);

const
  DEFPUSHFACTOR = FRACUNIT div 4;

implementation

uses
  doomdef,
  i_system,
  a_action,
  p_enemy,
  p_pspr,
  p_mobj_h,
  p_inter,
  p_extra,
  p_user,
  info_common,
  r_renderstyle,
  sounds;

const
  DO_states: array[0..Ord(DO_NUMSTATES) - 1] of state_t = (
   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_NULL

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 4;                     // frame
    tics: 1050;                   // tics
    action: (acp1: nil);          // action (A_FreeTargMobj), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FREETARGMOBJ

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAPSPOT

   (
    sprite: Ord(SPR_FBL1);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_1

   (
    sprite: Ord(SPR_FBL1);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_2

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_X2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_X1

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_X3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_X2

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_X4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_X3

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_X5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_X4

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBALL1_X6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_X5

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBALL1_X6

   (
    sprite: Ord(SPR_ARRW);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARROW_1

   (
    sprite: Ord(SPR_ARRW);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARROW_X1

   (
    sprite: Ord(SPR_DART);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DART_1

   (
    sprite: Ord(SPR_DART);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DART_X1

   (
    sprite: Ord(SPR_DART);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONDART_1

   (
    sprite: Ord(SPR_DART);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONDART_X1

   (
    sprite: Ord(SPR_RIPP);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_1

   (
    sprite: Ord(SPR_RIPP);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_2

   (
    sprite: Ord(SPR_RIPP);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_3

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32784;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X1

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32785;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X2

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32786;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X3

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32787;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X4

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32788;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X5

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32789;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X6

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32790;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X7

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32791;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X8

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32792;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_RIPPERBALL_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X9

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32793;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_RIPPERBALL_X10

   (
    sprite: Ord(SPR_BLAD);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PRJ_BLADE1

   (
    sprite: Ord(SPR_BLAD);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PRJ_BLADE_X1

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICESHARD2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICESHARD1

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICESHARD3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICESHARD2

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICESHARD1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICESHARD3

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TSMALL2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TSMALL1

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TSMALL3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TSMALL2

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TSMALL4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TSMALL3

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TSMALL5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TSMALL4

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TSMALL6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TSMALL5

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TSMALL1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TSMALL6

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE1

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE2

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE3

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE4

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE5

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE6

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE7

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE8

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE9

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE10

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE11

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE12

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE13

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE14

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_TLARGE16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE15

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FlameCheck), will be set after
    nextstate: S_FLAME_TLARGE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_TLARGE16

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SDORM2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SDORM1

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_FLAME_SDORM3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SDORM2

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 2;                     // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SDORM3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SDORM3

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SMALL2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL1

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_FLAME_SMALL3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL2

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SMALL4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL3

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SMALL5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL4

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SMALL6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL5

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SMALL7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL6

   (
    sprite: Ord(SPR_FFSM);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_SMALL3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_SMALL7

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LDORM2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LDORM1

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LDORM3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LDORM2

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LDORM4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LDORM3

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_FLAME_LDORM5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LDORM4

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 0;                     // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LDORM5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LDORM5

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE1

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_FLAME_LARGE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE2

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE3

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE4

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE5

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE6

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE7

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE8

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE9

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE10

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE11

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE12

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE13

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE14

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE15

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE16

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE17

   (
    sprite: Ord(SPR_FFLG);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAME_LARGE7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAME_LARGE18

   (
    sprite: Ord(SPR_PTN1);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ITEM_PTN1_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ITEM_PTN1_1

   (
    sprite: Ord(SPR_PTN1);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ITEM_PTN1_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ITEM_PTN1_2

   (
    sprite: Ord(SPR_PTN1);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ITEM_PTN1_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ITEM_PTN1_3

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 4;                     // frame
    tics: 1400;                   // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL1

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_RestoreSpecialThing1), will be set after
    nextstate: S_HIDESPECIAL3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL2

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL3

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL4

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL5

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL6

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL7

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL9

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HIDESPECIAL11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL10

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_RestoreSpecialThing2), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HIDESPECIAL11

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_1

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_2

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_3

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_4

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_5

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_6

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_7

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_9

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_10

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 1400;                   // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_DORMANTARTI1_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_11

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_DORMANTARTI1_13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_12

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_13

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_14

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_15

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_16

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_17

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_19;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_18

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_20;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_19

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI1_21;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_20

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_RestoreArtifact), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI1_21

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_1

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_2

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_3

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_4

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_5

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_6

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_7

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_9

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_10

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 4200;                   // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_DORMANTARTI2_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_11

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_DORMANTARTI2_13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_12

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_13

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_14

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_15

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_16

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_17

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_19;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_18

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_20;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_19

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI2_21;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_20

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_RestoreArtifact), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI2_21

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_1

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_2

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_3

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_4

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_5

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_6

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_7

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_9

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_10

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 21000;                  // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_DORMANTARTI3_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_11

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_DORMANTARTI3_13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_12

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_13

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_14

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_15

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_16

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_17

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_19;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_18

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_20;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_19

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DORMANTARTI3_21;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_20

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_RestoreArtifact), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DORMANTARTI3_21

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI1

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI2

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI3

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI4

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI5

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI7;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI6

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI8;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI7

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI9;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEADARTI10;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI9

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEADARTI10

   (
    sprite: Ord(SPR_PTN2);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_PTN2_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_PTN2_1

   (
    sprite: Ord(SPR_PTN2);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_PTN2_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_PTN2_2

   (
    sprite: Ord(SPR_PTN2);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_PTN2_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_PTN2_3

   (
    sprite: Ord(SPR_SOAR);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_SOAR2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_SOAR1

   (
    sprite: Ord(SPR_SOAR);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_SOAR3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_SOAR2

   (
    sprite: Ord(SPR_SOAR);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_SOAR4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_SOAR3

   (
    sprite: Ord(SPR_SOAR);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_SOAR1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_SOAR4

   (
    sprite: Ord(SPR_INVU);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_INVU2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_INVU1

   (
    sprite: Ord(SPR_INVU);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_INVU3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_INVU2

   (
    sprite: Ord(SPR_INVU);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_INVU4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_INVU3

   (
    sprite: Ord(SPR_INVU);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_INVU1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_INVU4

   (
    sprite: Ord(SPR_SUMN);        // sprite
    frame: 0;                     // frame
    tics: 350;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_SUMMON;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_SUMMON

   (
    sprite: Ord(SPR_SUMN);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SUMMON_FX1_1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SUMMON_FX1_1

   (
    sprite: Ord(SPR_SUMN);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SUMMON_FX2_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SUMMON_FX2_1

   (
    sprite: Ord(SPR_SUMN);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SUMMON_FX2_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SUMMON_FX2_2

   (
    sprite: Ord(SPR_SUMN);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Summon), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SUMMON_FX2_3

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THRUSTINIT2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTINIT2_1

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_ThrustInitUp), will be set after
    nextstate: S_THRUSTBLOCK;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTINIT2_2

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BTHRUSTINIT2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTINIT2_1

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_ThrustInitUp), will be set after
    nextstate: S_BTHRUSTBLOCK;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTINIT2_2

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THRUSTINIT1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTINIT1_1

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_ThrustInitDn), will be set after
    nextstate: S_THRUSTSTAY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTINIT1_2

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BTHRUSTINIT1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTINIT1_1

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_ThrustInitDn), will be set after
    nextstate: S_BTHRUSTSTAY;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTINIT1_2

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_THRUSTRAISE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTRAISE1

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_THRUSTRAISE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTRAISE2

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_THRUSTRAISE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTRAISE3

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ThrustBlock), will be set after
    nextstate: S_THRUSTIMPALE;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTRAISE4

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_BTHRUSTRAISE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTRAISE1

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_BTHRUSTRAISE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTRAISE2

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_BTHRUSTRAISE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTRAISE3

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ThrustBlock), will be set after
    nextstate: S_BTHRUSTIMPALE;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTRAISE4

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ThrustImpale), will be set after
    nextstate: S_THRUSTRAISE;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTIMPALE

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ThrustImpale), will be set after
    nextstate: S_BTHRUSTRAISE;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTIMPALE

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_THRUSTRAISE;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTRAISE

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ThrustRaise), will be set after
    nextstate: S_BTHRUSTRAISE;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTRAISE

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THRUSTBLOCK;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTBLOCK

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BTHRUSTBLOCK;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTBLOCK

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ThrustLower), will be set after
    nextstate: S_THRUSTLOWER;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTLOWER

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ThrustLower), will be set after
    nextstate: S_BTHRUSTLOWER;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTLOWER

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THRUSTSTAY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THRUSTSTAY

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 1;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BTHRUSTSTAY;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BTHRUSTSTAY

   (
    sprite: Ord(SPR_TELO);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TELOTHER2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TELOTHER1

   (
    sprite: Ord(SPR_TELO);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TELOTHER3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TELOTHER2

   (
    sprite: Ord(SPR_TELO);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TELOTHER4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TELOTHER3

   (
    sprite: Ord(SPR_TELO);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TELOTHER1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TELOTHER4

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX1

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX3;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_TeloSpawnC), will be set after
    nextstate: S_TELO_FX4;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_TeloSpawnB), will be set after
    nextstate: S_TELO_FX5;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_TeloSpawnA), will be set after
    nextstate: S_TELO_FX6;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_TeloSpawnB), will be set after
    nextstate: S_TELO_FX7;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX6

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_TeloSpawnC), will be set after
    nextstate: S_TELO_FX8;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX7

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_TeloSpawnD), will be set after
    nextstate: S_TELO_FX3;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX8

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX9

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX2_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2_1

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX2_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2_2

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX2_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2_3

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX2_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2_4

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX2_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2_5

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckTeleRing), will be set after
    nextstate: S_TELO_FX2_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX2_6

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX3_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3_1

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX3_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3_2

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX3_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3_3

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX3_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3_4

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX3_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3_5

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckTeleRing), will be set after
    nextstate: S_TELO_FX3_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX3_6

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX4_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4_1

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX4_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4_2

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX4_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4_3

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX4_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4_4

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX4_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4_5

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckTeleRing), will be set after
    nextstate: S_TELO_FX4_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX4_6

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX5_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5_1

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX5_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5_2

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX5_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5_3

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX5_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5_4

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELO_FX5_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5_5

   (
    sprite: Ord(SPR_TRNG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckTeleRing), will be set after
    nextstate: S_TELO_FX5_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELO_FX5_6

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 3;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRT1_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT1_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 3;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT1_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 4;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRT2_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT2_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 4;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT2_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 5;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRT3_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT3_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 5;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT3_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 6;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRT4_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT4_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 6;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT4_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 7;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRT5_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT5_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 7;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT5_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 8;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRT6_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT6_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 8;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRT6_D

   (
    sprite: Ord(SPR_TSPK);        // sprite
    frame: 2;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DIRTCLUMP1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DIRTCLUMP1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ROCK1_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ROCK1_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ROCK1_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 1;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ROCK2_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ROCK2_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 1;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ROCK2_D

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 2;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ROCK3_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ROCK3_1

   (
    sprite: Ord(SPR_ROCK);        // sprite
    frame: 2;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ROCK3_D

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (A_FogSpawn), will be set after
    nextstate: S_SPAWNFOG1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPAWNFOG1

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 0;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHS2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHS1

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 1;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHS3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHS2

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 2;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHS4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHS3

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 3;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHS5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHS4

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 4;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHS1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHS5

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHS0

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 0;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHM2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHM1

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 1;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHM3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHM2

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 2;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHM4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHM3

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 3;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHM5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHM4

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 4;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHM1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHM5

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHMA;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHM0

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHMB;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHMA

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHMC;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHMB

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHMD;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHMC

   (
    sprite: Ord(SPR_FOGS);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHS0;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHMD

   (
    sprite: Ord(SPR_FOGL);        // sprite
    frame: 0;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHL2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHL1

   (
    sprite: Ord(SPR_FOGL);        // sprite
    frame: 1;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHL3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHL2

   (
    sprite: Ord(SPR_FOGL);        // sprite
    frame: 2;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHL4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHL3

   (
    sprite: Ord(SPR_FOGL);        // sprite
    frame: 3;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHL5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHL4

   (
    sprite: Ord(SPR_FOGL);        // sprite
    frame: 4;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FogMove), will be set after
    nextstate: S_FOGPATCHL1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHL5

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHLA;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHL0

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHLB;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHLA

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHLC;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHLB

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHLD;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHLC

   (
    sprite: Ord(SPR_FOGM);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FOGPATCHM0;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FOGPATCHLD

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE1

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_ContMobjSound), will be set after
    nextstate: S_QUAKE_ACTIVE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE2

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE3

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE4

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE5

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE6

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE7

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE8

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE0;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE9

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEA;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVE0

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEB;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEA

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEC;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEB

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVED;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEC

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEE;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVED

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEF;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEE

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEG;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEF

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEH;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEG

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEI;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEH

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEJ;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEI

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEK;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEJ

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEL;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEK

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEM;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEL

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEN;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEM

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEO;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEN

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEP;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEO

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEQ;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEP

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVER;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEQ

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVES;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVER

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVET;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVES

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEU;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVET

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEV;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEU

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEW;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEV

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEX;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEW

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEY;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEX

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVEZ;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEY

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACTIVEZ

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT1

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT2

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT3

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT4

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT5

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT6

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT7

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT8

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACT0;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT9

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Quake), will be set after
    nextstate: S_QUAKE_ACTIVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_QUAKE_ACT0

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD1_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD1_1

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD1_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD1_2

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD1_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD1_3

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD1_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD1_4

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD1_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD1_5

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 4;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD1_D

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD2_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD2_1

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD2_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD2_2

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD2_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD2_3

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD2_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD2_4

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD2_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD2_5

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 9;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD2_D

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD3_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD3_1

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 11;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD3_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD3_2

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 12;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD3_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD3_3

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD3_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD3_4

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD3_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD3_5

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 14;                    // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD3_D

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 15;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD4_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD4_1

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 16;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD4_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD4_2

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 17;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD4_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD4_3

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD4_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD4_4

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD4_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD4_5

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 19;                    // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD4_D

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD5_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD5_1

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD5_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD5_2

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD5_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD5_3

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 23;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD5_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD5_4

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 24;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD5_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD5_5

   (
    sprite: Ord(SPR_SGSA);        // sprite
    frame: 24;                    // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD5_D

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD6_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD6_1

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 0;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD6_D

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD7_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD7_1

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 1;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD7_D

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD8_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD8_1

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 2;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD8_D

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD9_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD9_1

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 3;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD9_D

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SGSHARD0_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD0_1

   (
    sprite: Ord(SPR_SGSB);        // sprite
    frame: 4;                     // frame
    tics: 30;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SGSHARD0_D

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC1

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC2

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC3

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC4

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC5

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC6

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC7

   (
    sprite: Ord(SPR_PORK);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_EGGC1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_EGGC8

   (
    sprite: Ord(SPR_EGGM);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFX2;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFX1

   (
    sprite: Ord(SPR_EGGM);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFX3;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFX2

   (
    sprite: Ord(SPR_EGGM);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFX4;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFX3

   (
    sprite: Ord(SPR_EGGM);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFX5;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFX4

   (
    sprite: Ord(SPR_EGGM);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFX1;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFX5

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFXI1_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFXI1_1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32777;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFXI1_3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFXI1_2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_EGGFXI1_4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFXI1_3

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_EGGFXI1_4

   (
    sprite: Ord(SPR_SPHL);        // sprite
    frame: 0;                     // frame
    tics: 350;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_SPHL1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_SPHL1

   (
    sprite: Ord(SPR_STWN);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWINGEDSTATUENOSKULL

   (
    sprite: Ord(SPR_STWN);        // sprite
    frame: 1;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWINGEDSTATUENOSKULL2

   (
    sprite: Ord(SPR_GMPD);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZGEMPEDESTAL1

   (
    sprite: Ord(SPR_GMPD);        // sprite
    frame: 1;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZGEMPEDESTAL2

   (
    sprite: Ord(SPR_ASKU);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZSKULL

   (
    sprite: Ord(SPR_ABGM);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEMBIG

   (
    sprite: Ord(SPR_AGMR);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEMRED

   (
    sprite: Ord(SPR_AGMG);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEMGREEN1

   (
    sprite: Ord(SPR_AGG2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEMGREEN2

   (
    sprite: Ord(SPR_AGMB);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEMBLUE1

   (
    sprite: Ord(SPR_AGB2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEMBLUE2

   (
    sprite: Ord(SPR_ABK1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZBOOK1

   (
    sprite: Ord(SPR_ABK2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZBOOK2

   (
    sprite: Ord(SPR_ASK2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZSKULL2

   (
    sprite: Ord(SPR_AFWP);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZFWEAPON

   (
    sprite: Ord(SPR_ACWP);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZCWEAPON

   (
    sprite: Ord(SPR_AMWP);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZMWEAPON

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_1

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_2

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_3

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_4

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_5

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_6

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_7

   (
    sprite: Ord(SPR_AGER);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR_1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR_8

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_1

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_2

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_3

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_4

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_5

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_6

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_7

   (
    sprite: Ord(SPR_AGR2);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR2_1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR2_8

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_1

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_2

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_3

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_4

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_5

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_6

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_7

   (
    sprite: Ord(SPR_AGR3);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR3_1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR3_8

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_1

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_2

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_3

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_4

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_5

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_6

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_7

   (
    sprite: Ord(SPR_AGR4);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTIPUZZGEAR4_1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTIPUZZGEAR4_8

   (
    sprite: Ord(SPR_TRCH);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TRCH2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TRCH1

   (
    sprite: Ord(SPR_TRCH);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TRCH3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TRCH2

   (
    sprite: Ord(SPR_TRCH);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_TRCH1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_TRCH3

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB1

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB2

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB3

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB4

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_FIREBOMB6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB5

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_FIREBOMB7;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB6

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB8;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB7

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB9;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB8

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB10;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB9

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIREBOMB11;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB10

   (
    sprite: Ord(SPR_XPL1);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIREBOMB11

   (
    sprite: Ord(SPR_ATLP);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ATLP2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ATLP1

   (
    sprite: Ord(SPR_ATLP);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ATLP3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ATLP2

   (
    sprite: Ord(SPR_ATLP);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ATLP4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ATLP3

   (
    sprite: Ord(SPR_ATLP);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ATLP1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ATLP4

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_PSBG1

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 32768;                 // frame
    tics: 18;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONBAG2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONBAG1

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONBAG3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONBAG2

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONBAG4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONBAG3

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagInit), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONBAG4

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONCLOUD2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD1

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_POISONCLOUD3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD2

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD3

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD4

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD5

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD6

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD7

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD8

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD9

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD10

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD11

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD12

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD13

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD14

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD15

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD16

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 8;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagDamage), will be set after
    nextstate: S_POISONCLOUD18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD17

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 8;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagCheck), will be set after
    nextstate: S_POISONCLOUD4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD18

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 7;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONCLOUD_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD_X1

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 6;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONCLOUD_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD_X2

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POISONCLOUD_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD_X3

   (
    sprite: Ord(SPR_PSBG);        // sprite
    frame: 3;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POISONCLOUD_X4

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB1

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB2

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB3

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB4

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB5

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB6

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB7

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB8

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB9

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB10

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB11

   (
    sprite: Ord(SPR_THRW);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckThrowBomb), will be set after
    nextstate: S_THROWINGBOMB12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB12

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32784;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoGravity), will be set after
    nextstate: S_THROWINGBOMB_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X1

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32785;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_THROWINGBOMB_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X2

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32786;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_THROWINGBOMB_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X3

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32787;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THROWINGBOMB_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X4

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32788;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THROWINGBOMB_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X5

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32790;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THROWINGBOMB_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X6

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32791;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_THROWINGBOMB_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X7

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32793;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_THROWINGBOMB_X8

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS1

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS2

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS3

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS4

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS5

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32773;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS6

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS7

   (
    sprite: Ord(SPR_SPED);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BOOTS1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BOOTS8

   (
    sprite: Ord(SPR_BMAN);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_MANA

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR1

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR2

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR3

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR4

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR5

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR6

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR7

   (
    sprite: Ord(SPR_BRAC);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_ARMOR1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_ARMOR8

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST1

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST2

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST3

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST4

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST5

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST6

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST7

   (
    sprite: Ord(SPR_BLST);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_BLAST1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_BLAST8

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD1

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD2

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD3

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD4

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD5

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD6

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD7

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD8

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD0;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD9

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRADA;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRAD0

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRADB;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRADA

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRADC;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRADB

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRADD;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRADC

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRADE;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRADD

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRADF;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRADE

   (
    sprite: Ord(SPR_HRAD);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ARTI_HEALRAD1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARTI_HEALRADF

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASH2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASH1

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASH3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASH2

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 2;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASH4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASH3

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 3;                     // frame
    tics: 16;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASH4

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 3;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHX

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASHBASE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE1

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASHBASE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE2

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASHBASE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE3

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASHBASE5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE4

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 8;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASHBASE6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE5

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 9;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPLASHBASE7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE6

   (
    sprite: Ord(SPR_SPSH);        // sprite
    frame: 10;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPLASHBASE7

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASPLASH2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASPLASH1

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASPLASH3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASPLASH2

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASPLASH4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASPLASH3

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASPLASH5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASPLASH4

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASPLASH6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASPLASH5

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32773;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASPLASH6

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32774;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASMOKE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASMOKE1

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASMOKE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASMOKE2

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32776;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASMOKE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASMOKE3

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32777;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LAVASMOKE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASMOKE4

   (
    sprite: Ord(SPR_LVAS);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LAVASMOKE5

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SLUDGECHUNK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGECHUNK1

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SLUDGECHUNK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGECHUNK2

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 2;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SLUDGECHUNK4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGECHUNK3

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 3;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGECHUNK4

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 3;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGECHUNKX

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SLUDGESPLASH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGESPLASH1

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SLUDGESPLASH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGESPLASH2

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SLUDGESPLASH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGESPLASH3

   (
    sprite: Ord(SPR_SLDG);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SLUDGESPLASH4

   (
    sprite: Ord(SPR_STTW);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWINGEDSTATUE1

   (
    sprite: Ord(SPR_RCK1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCK1_1

   (
    sprite: Ord(SPR_RCK2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCK2_1

   (
    sprite: Ord(SPR_RCK3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCK3_1

   (
    sprite: Ord(SPR_RCK4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCK4_1

   (
    sprite: Ord(SPR_CDLR);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCHANDELIER2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHANDELIER1

   (
    sprite: Ord(SPR_CDLR);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCHANDELIER3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHANDELIER2

   (
    sprite: Ord(SPR_CDLR);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCHANDELIER1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHANDELIER3

   (
    sprite: Ord(SPR_CDLR);        // sprite
    frame: 3;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHANDELIER_U

   (
    sprite: Ord(SPR_TRE1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDEAD1

   (
    sprite: Ord(SPR_TRE1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREE

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDESTRUCTIBLE1

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_D2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_D1

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZTREEDES_D3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_D2

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_D4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_D3

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_D5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_D4

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_D6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_D5

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 6;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_D6

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X1

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32776;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X2

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32777;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X3

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X4

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32779;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X5

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32780;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_ZTREEDES_X7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X6

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 32781;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X7

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X8

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTREEDES_X10;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X9

   (
    sprite: Ord(SPR_TRDT);        // sprite
    frame: 16;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEDES_X10

   (
    sprite: Ord(SPR_TRE2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREESWAMP182_1

   (
    sprite: Ord(SPR_TRE3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREESWAMP172_1

   (
    sprite: Ord(SPR_STM1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTUMPBURNED1

   (
    sprite: Ord(SPR_STM2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTUMPBARE1

   (
    sprite: Ord(SPR_STM3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTUMPSWAMP1_1

   (
    sprite: Ord(SPR_STM4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTUMPSWAMP2_1

   (
    sprite: Ord(SPR_MSH1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMLARGE1_1

   (
    sprite: Ord(SPR_MSH2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMLARGE2_1

   (
    sprite: Ord(SPR_MSH3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMLARGE3_1

   (
    sprite: Ord(SPR_MSH4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMSMALL1_1

   (
    sprite: Ord(SPR_MSH5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMSMALL2_1

   (
    sprite: Ord(SPR_MSH6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMSMALL3_1

   (
    sprite: Ord(SPR_MSH7);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMSMALL4_1

   (
    sprite: Ord(SPR_MSH8);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHROOMSMALL5_1

   (
    sprite: Ord(SPR_SGMP);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITEPILLAR1

   (
    sprite: Ord(SPR_SGM1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITELARGE1

   (
    sprite: Ord(SPR_SGM2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITEMEDIUM1

   (
    sprite: Ord(SPR_SGM3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITESMALL1

   (
    sprite: Ord(SPR_SLC1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITELARGE1

   (
    sprite: Ord(SPR_SLC2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITEMEDIUM1

   (
    sprite: Ord(SPR_SLC3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITESMALL1

   (
    sprite: Ord(SPR_MSS1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZMOSSCEILING1_1

   (
    sprite: Ord(SPR_MSS2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZMOSSCEILING2_1

   (
    sprite: Ord(SPR_SWMV);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSWAMPVINE1

   (
    sprite: Ord(SPR_CPS1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCORPSEKABOB1

   (
    sprite: Ord(SPR_CPS2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCORPSESLEEPING1

   (
    sprite: Ord(SPR_TMS1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONERIP1

   (
    sprite: Ord(SPR_TMS2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONESHANE1

   (
    sprite: Ord(SPR_TMS3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONEBIGCROSS1

   (
    sprite: Ord(SPR_TMS4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONEBRIANR1

   (
    sprite: Ord(SPR_TMS5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONECROSSCIRCLE1

   (
    sprite: Ord(SPR_TMS6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONESMALLCROSS1

   (
    sprite: Ord(SPR_TMS7);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTOMBSTONEBRIANP1

   (
    sprite: Ord(SPR_CPS3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEHANGING_1

   (
    sprite: Ord(SPR_STT2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEGREENTALL_1

   (
    sprite: Ord(SPR_STT3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEBLUETALL_1

   (
    sprite: Ord(SPR_STT4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEGREENSHORT_1

   (
    sprite: Ord(SPR_STT5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEBLUESHORT_1

   (
    sprite: Ord(SPR_GAR1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLESTRIPETALL_1

   (
    sprite: Ord(SPR_GAR2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEDARKREDTALL_1

   (
    sprite: Ord(SPR_GAR3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEREDTALL_1

   (
    sprite: Ord(SPR_GAR4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLETANTALL_1

   (
    sprite: Ord(SPR_GAR5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLERUSTTALL_1

   (
    sprite: Ord(SPR_GAR6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEDARKREDSHORT_1

   (
    sprite: Ord(SPR_GAR7);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLEREDSHORT_1

   (
    sprite: Ord(SPR_GAR8);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLETANSHORT_1

   (
    sprite: Ord(SPR_GAR9);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTATUEGARGOYLERUSTSHORT_1

   (
    sprite: Ord(SPR_BNR1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBANNERTATTERED_1

   (
    sprite: Ord(SPR_TRE4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREELARGE1

   (
    sprite: Ord(SPR_TRE5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREELARGE2

   (
    sprite: Ord(SPR_TRE6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEGNARLED1

   (
    sprite: Ord(SPR_TRE7);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTREEGNARLED2

   (
    sprite: Ord(SPR_LOGG);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZLOG

   (
    sprite: Ord(SPR_ICT1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITEICELARGE

   (
    sprite: Ord(SPR_ICT2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITEICEMEDIUM

   (
    sprite: Ord(SPR_ICT3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITEICESMALL

   (
    sprite: Ord(SPR_ICT4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALACTITEICETINY

   (
    sprite: Ord(SPR_ICM1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITEICELARGE

   (
    sprite: Ord(SPR_ICM2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITEICEMEDIUM

   (
    sprite: Ord(SPR_ICM3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITEICESMALL

   (
    sprite: Ord(SPR_ICM4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSTALAGMITEICETINY

   (
    sprite: Ord(SPR_RKBL);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCKBROWN1

   (
    sprite: Ord(SPR_RKBS);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCKBROWN2

   (
    sprite: Ord(SPR_RKBK);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZROCKBLACK

   (
    sprite: Ord(SPR_RBL1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZRUBBLE1

   (
    sprite: Ord(SPR_RBL2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZRUBBLE2

   (
    sprite: Ord(SPR_RBL3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZRUBBLE3

   (
    sprite: Ord(SPR_VASE);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZVASEPILLAR

   (
    sprite: Ord(SPR_POT1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOTTERY1

   (
    sprite: Ord(SPR_POT2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOTTERY2

   (
    sprite: Ord(SPR_POT3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOTTERY3

   (
    sprite: Ord(SPR_POT1);        // sprite
    frame: 0;                     // frame
    tics: 0;                      // tics
    action: (acp1: nil);          // action (A_PotteryExplode), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOTTERY_EXPLODE

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_1

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 1;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_2

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 2;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_3

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 3;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_4

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 4;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_5

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 5;                     // frame
    tics: 0;                      // tics
    action: (acp1: nil);          // action (A_PotteryChooseBit), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX0

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 5;                     // frame
    tics: 140;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POTTERYBIT_EX1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX1

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PotteryCheck), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX1_2

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 6;                     // frame
    tics: 140;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POTTERYBIT_EX2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX2

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 6;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PotteryCheck), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX2_2

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 7;                     // frame
    tics: 140;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POTTERYBIT_EX3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX3

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 7;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PotteryCheck), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX3_2

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 8;                     // frame
    tics: 140;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POTTERYBIT_EX4_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX4

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 8;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PotteryCheck), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX4_2

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 9;                     // frame
    tics: 140;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_POTTERYBIT_EX5_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX5

   (
    sprite: Ord(SPR_PBIT);        // sprite
    frame: 9;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_PotteryCheck), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_POTTERYBIT_EX5_2

   (
    sprite: Ord(SPR_CPS4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCORPSELYNCHED1

   (
    sprite: Ord(SPR_CPS5);        // sprite
    frame: 0;                     // frame
    tics: 140;                    // tics
    action: (acp1: nil);          // action (A_CorpseBloodDrip), will be set after
    nextstate: S_ZCORPSELYNCHED2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCORPSELYNCHED2

   (
    sprite: Ord(SPR_CPS6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCORPSESITTING

   (
    sprite: Ord(SPR_CPS6);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CorpseExplode), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCORPSESITTING_X

   (
    sprite: Ord(SPR_CPB1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBIT_1

   (
    sprite: Ord(SPR_CPB2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBIT_2

   (
    sprite: Ord(SPR_CPB3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBIT_3

   (
    sprite: Ord(SPR_CPB4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBIT_4

   (
    sprite: Ord(SPR_BDRP);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBLOODDRIP

   (
    sprite: Ord(SPR_BDSH);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CORPSEBLOODDRIP_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBLOODDRIP_X1

   (
    sprite: Ord(SPR_BDSH);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CORPSEBLOODDRIP_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBLOODDRIP_X2

   (
    sprite: Ord(SPR_BDSH);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CORPSEBLOODDRIP_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBLOODDRIP_X3

   (
    sprite: Ord(SPR_BDSH);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CORPSEBLOODDRIP_X4

   (
    sprite: Ord(SPR_BDPL);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODPOOL

   (
    sprite: Ord(SPR_CNDL);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCANDLE2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCANDLE1

   (
    sprite: Ord(SPR_CNDL);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCANDLE3;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCANDLE2

   (
    sprite: Ord(SPR_CNDL);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCANDLE1;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCANDLE3

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (A_LeafSpawn), will be set after
    nextstate: S_ZLEAFSPAWNER;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZLEAFSPAWNER

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_1

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_2

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_3

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF1_5;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_4

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_6;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_5

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_7;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_6

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_8;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_7

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF1_9;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_8

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_10;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_9

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_11;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_10

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_12;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_11

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF1_13;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_12

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_14;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_13

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_15;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_14

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_16;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_15

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF1_17;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_16

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF1_18;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_17

   (
    sprite: Ord(SPR_LEF1);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF1_18

   (
    sprite: Ord(SPR_LEF3);        // sprite
    frame: 3;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_LeafCheck), will be set after
    nextstate: S_LEAF_X1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF_X1

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_1

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_2

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_3

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF2_5;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_4

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_6;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_5

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_7;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_6

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_8;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_7

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF2_9;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_8

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_10;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_9

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_11;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_10

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_12;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_11

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF2_13;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_12

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_14;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_13

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_15;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_14

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_16;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_15

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LeafThrust), will be set after
    nextstate: S_LEAF2_17;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_16

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LEAF2_18;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_17

   (
    sprite: Ord(SPR_LEF2);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LEAF2_18

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_1

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_2

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_3

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_4

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_5

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_6

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_7

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZTWINEDTORCH_1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_8

   (
    sprite: Ord(SPR_TWTR);        // sprite
    frame: 8;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZTWINEDTORCH_UNLIT

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BRIDGE2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BRIDGE1

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BridgeInit), will be set after
    nextstate: S_BRIDGE3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BRIDGE2

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BRIDGE3

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FREE_BRIDGE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FREE_BRIDGE1

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 300;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FREE_BRIDGE2

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BBALL2;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BBALL1

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_BridgeOrbit), will be set after
    nextstate: S_BBALL2;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BBALL2

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH1

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH2

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH3

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH4

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH5

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32773;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH6

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32774;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH7

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZWALLTORCH1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH8

   (
    sprite: Ord(SPR_WLTR);        // sprite
    frame: 8;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZWALLTORCH_U

   (
    sprite: Ord(SPR_BARL);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBARREL1

   (
    sprite: Ord(SPR_SHB1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB1

   (
    sprite: Ord(SPR_SHB1);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_TreeDeath), will be set after
    nextstate: S_ZSHRUB1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB1_DIE

   (
    sprite: Ord(SPR_SHB1);        // sprite
    frame: 32769;                 // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZSHRUB1_X2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB1_X1

   (
    sprite: Ord(SPR_SHB1);        // sprite
    frame: 32770;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZSHRUB1_X3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB1_X2

   (
    sprite: Ord(SPR_SHB1);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB1_X3

   (
    sprite: Ord(SPR_SHB2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB2

   (
    sprite: Ord(SPR_SHB2);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_TreeDeath), will be set after
    nextstate: S_ZSHRUB2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB2_DIE

   (
    sprite: Ord(SPR_SHB2);        // sprite
    frame: 32769;                 // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZSHRUB2_X2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB2_X1

   (
    sprite: Ord(SPR_SHB2);        // sprite
    frame: 32770;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZSHRUB2_X3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB2_X2

   (
    sprite: Ord(SPR_SHB2);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_ZSHRUB2_X4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB2_X3

   (
    sprite: Ord(SPR_SHB2);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSHRUB2_X4

   (
    sprite: Ord(SPR_BCKT);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBUCKET1

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_PoisonShroom), will be set after
    nextstate: S_ZPOISONSHROOM_P2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM1

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 0;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZPOISONSHROOM_P2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM_P1

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_ZPOISONSHROOM1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM_P2

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZPOISONSHROOM_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM_X1

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZPOISONSHROOM_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM_X2

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_PoisonBagInit), will be set after
    nextstate: S_ZPOISONSHROOM_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM_X3

   (
    sprite: Ord(SPR_SHRM);        // sprite
    frame: 5;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZPOISONSHROOM_X4

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL1

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL2

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL3

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL4

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL5

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL6

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL7

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL_DEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL_DEATH

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL_U;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL_DEATH2

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 7;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL_U

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL_BIRTH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL_BIRTH

   (
    sprite: Ord(SPR_FBUL);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIREBULL1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIREBULL_BIRTH2

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING1

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING2

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING3

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING4

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING5

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32773;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING6

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING7

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING8

   (
    sprite: Ord(SPR_FSKL);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZFIRETHING1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZFIRETHING9

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH1

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH2

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH3

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH4

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH5

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH6

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH7

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH8

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH9

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH10

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH11

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH12

   (
    sprite: Ord(SPR_BRTR);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBRASSTORCH1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBRASSTORCH13

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSUITOFARMOR

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_SoAExplode), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZSUITOFARMOR_X1

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 1;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK1

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 2;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK2

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 3;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK3

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 4;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK4

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 5;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK5

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 6;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK6

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 7;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK7

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 8;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK8

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 9;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK9

   (
    sprite: Ord(SPR_SUIT);        // sprite
    frame: 10;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZARMORCHUNK10

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_BellReset1), will be set after
    nextstate: S_ZBELL_X2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X1

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X3;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X2

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X4;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X3

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZBELL_X5;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X4

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X6;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X5

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X7;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X6

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X8;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X7

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X9;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X8

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X10;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X9

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZBELL_X11;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X10

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X12;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X11

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X13;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X12

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X14;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X13

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X15;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X14

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X16;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X15

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 3;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZBELL_X17;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X16

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X18;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X17

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X19;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X18

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X20;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X19

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X21;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X20

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X22;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X21

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 6;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZBELL_X23;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X22

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X24;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X23

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X25;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X24

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X26;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X25

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X27;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X26

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X28;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X27

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 3;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZBELL_X29;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X28

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X30;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X29

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X31;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X30

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X32;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X31

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X33;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X32

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X34;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X33

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 6;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZBELL_X35;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X34

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X36;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X35

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X37;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X36

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X38;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X37

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X39;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X38

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X40;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X39

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X41;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X40

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X42;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X41

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X43;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X42

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X44;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X43

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 1;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X45;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X44

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X46;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X45

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 4;                     // frame
    tics: 14;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBELL_X47;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X46

   (
    sprite: Ord(SPR_BBLL);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_BellReset2), will be set after
    nextstate: S_ZBELL;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBELL_X47

   (
    sprite: Ord(SPR_CAND);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBLUE_CANDLE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBLUE_CANDLE1

   (
    sprite: Ord(SPR_CAND);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBLUE_CANDLE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBLUE_CANDLE2

   (
    sprite: Ord(SPR_CAND);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBLUE_CANDLE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBLUE_CANDLE3

   (
    sprite: Ord(SPR_CAND);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBLUE_CANDLE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBLUE_CANDLE4

   (
    sprite: Ord(SPR_CAND);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZBLUE_CANDLE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZBLUE_CANDLE5

   (
    sprite: Ord(SPR_IRON);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZIRON_MAIDEN

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_TreeDeath), will be set after
    nextstate: S_ZXMAS_TREE;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_DIE

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 32769;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZXMAS_TREE_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X1

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 32770;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ZXMAS_TREE_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X2

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZXMAS_TREE_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X3

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_ZXMAS_TREE_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X4

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 32773;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZXMAS_TREE_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X5

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZXMAS_TREE_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X6

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZXMAS_TREE_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X7

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_ZXMAS_TREE_X9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X8

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZXMAS_TREE_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X9

   (
    sprite: Ord(SPR_XMAS);        // sprite
    frame: 10;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZXMAS_TREE_X10

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON1

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON2

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON3

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON4

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON5

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON6

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ZCAULDRON1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON7

   (
    sprite: Ord(SPR_CDRN);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCAULDRON_U

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINBIT32

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 1;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINBIT64

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 2;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINEND_HEART

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 3;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINEND_HOOK1

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 4;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINEND_HOOK2

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 5;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINEND_SPIKE

   (
    sprite: Ord(SPR_CHNS);        // sprite
    frame: 6;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ZCHAINEND_SKULL

   (
    sprite: Ord(SPR_TST1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT1

   (
    sprite: Ord(SPR_TST2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT2

   (
    sprite: Ord(SPR_TST3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT3

   (
    sprite: Ord(SPR_TST4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT4

   (
    sprite: Ord(SPR_TST5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT5

   (
    sprite: Ord(SPR_TST6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT6

   (
    sprite: Ord(SPR_TST7);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT7

   (
    sprite: Ord(SPR_TST8);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT8

   (
    sprite: Ord(SPR_TST9);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT9

   (
    sprite: Ord(SPR_TST0);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TABLE_SHIT10

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32768;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG2;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG1

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32769;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG3;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG2

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32770;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG4;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG3

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32771;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG5;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG4

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32772;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG6;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG5

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG7;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG6

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32774;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG8;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG7

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32775;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG9;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG8

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32774;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG10;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG9

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG11;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG10

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32772;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG12;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG11

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32771;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TFOG13;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG12

   (
    sprite: Ord(SPR_TELE);        // sprite
    frame: 32770;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TFOG13

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE1

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE2

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE3

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE4

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE5

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE6

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE7

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE8

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE10;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE9

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE11;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE10

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE12;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE11

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 11;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE13;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE12

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 12;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE14;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE13

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 13;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE15;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE14

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE16;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE15

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 15;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE17;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE16

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 16;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE18;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE17

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 17;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE19;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE18

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE20;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE19

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 19;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE21;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE20

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE22;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE21

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 21;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE23;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE22

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE24;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE23

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 23;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE25;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE24

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 24;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE26;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE25

   (
    sprite: Ord(SPR_TSMK);        // sprite
    frame: 25;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_TELESMOKE1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_TELESMOKE26

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 0;                     // frame
    tics: 0;                      // tics
    action: (acp1: nil);          // action (A_Light0), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTDONE

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_PUNCHREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHREADY

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_PUNCHDOWN;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHDOWN

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_PUNCHUP;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHUP

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK1_2;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK1_1

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK1_3;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK1_2

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FPunchAttack), will be set after
    nextstate: S_PUNCHATK1_4;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK1_3

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK1_5;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK1_4

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_ReFire), will be set after
    nextstate: S_PUNCHREADY;      // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK1_5

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_2;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_1

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_3;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_2

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_4;     // nextstate
    misc1: 15;                    // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_3

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_5;     // nextstate
    misc1: 25;                    // misc1
    misc2: 60;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_4

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_6;     // nextstate
    misc1: 35;                    // misc1
    misc2: 70;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_5

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_7;     // nextstate
    misc1: 45;                    // misc1
    misc2: 80;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_6

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_8;     // nextstate
    misc1: 55;                    // misc1
    misc2: 90;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_7

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHATK2_9;     // nextstate
    misc1: 65;                    // misc1
    misc2: 100;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_8

   (
    sprite: Ord(SPR_FPCH);        // sprite
    frame: 4;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 150;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHATK2_9

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHPUFF2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHPUFF1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHPUFF3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHPUFF2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHPUFF4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHPUFF3

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PUNCHPUFF5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHPUFF4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PUNCHPUFF5

   (
    sprite: Ord(SPR_WFAX);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXE

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_FAXEDOWN;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEDOWN

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_FAXEUP;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEUP

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_2;       // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_1

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_3;       // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_2

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_4;       // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_3

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FAxeAttack), will be set after
    nextstate: S_FAXEATK_5;       // nextstate
    misc1: -5;                    // misc1
    misc2: 70;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_4

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_6;       // nextstate
    misc1: -25;                   // misc1
    misc2: 90;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_5

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_7;       // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_6

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_8;       // nextstate
    misc1: 10;                    // misc1
    misc2: 54;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_7

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 4;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_9;       // nextstate
    misc1: 10;                    // misc1
    misc2: 150;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_8

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_ReFire), will be set after
    nextstate: S_FAXEATK_10;      // nextstate
    misc1: 0;                     // misc1
    misc2: 60;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_9

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_11;      // nextstate
    misc1: 0;                     // misc1
    misc2: 52;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_10

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_12;      // nextstate
    misc1: 0;                     // misc1
    misc2: 44;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_11

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_13;      // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_12

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEREADY;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_13

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 11;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY_G1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY_G

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 11;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY_G2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY_G1

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 11;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY_G3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY_G2

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 12;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY_G4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY_G3

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 12;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY_G5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY_G4

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 12;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FAXEREADY_G;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEREADY_G5

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 11;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_FAXEDOWN_G;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEDOWN_G

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 11;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_FAXEUP_G;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEUP_G

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G2;      // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G1

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 14;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G3;      // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G2

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 15;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G4;      // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G3

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 15;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FAxeAttack), will be set after
    nextstate: S_FAXEATK_G5;      // nextstate
    misc1: -5;                    // misc1
    misc2: 70;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G4

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 15;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G6;      // nextstate
    misc1: -25;                   // misc1
    misc2: 90;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G5

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 16;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G7;      // nextstate
    misc1: 15;                    // misc1
    misc2: 32;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G6

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 16;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G8;      // nextstate
    misc1: 10;                    // misc1
    misc2: 54;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G7

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 16;                    // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G9;      // nextstate
    misc1: 10;                    // misc1
    misc2: 150;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G8

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_ReFire), will be set after
    nextstate: S_FAXEATK_G10;     // nextstate
    misc1: 0;                     // misc1
    misc2: 60;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G9

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G11;     // nextstate
    misc1: 0;                     // misc1
    misc2: 52;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G10

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G12;     // nextstate
    misc1: 0;                     // misc1
    misc2: 44;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G11

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEATK_G13;     // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G12

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FAXEREADY_G;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FAXEATK_G13

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32785;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEPUFF_GLOW2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW1

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32786;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEPUFF_GLOW3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW2

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32787;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEPUFF_GLOW4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW3

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32788;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEPUFF_GLOW5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW4

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32789;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEPUFF_GLOW6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW5

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32790;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEPUFF_GLOW7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW6

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 32791;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEPUFF_GLOW7

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEBLOOD2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEBLOOD1

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEBLOOD3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEBLOOD2

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEBLOOD4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEBLOOD3

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEBLOOD5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEBLOOD4

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_AXEBLOOD6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEBLOOD5

   (
    sprite: Ord(SPR_FAXE);        // sprite
    frame: 10;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_AXEBLOOD6

   (
    sprite: Ord(SPR_WFHM);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMM

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FHAMMERREADY;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERREADY

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_FHAMMERDOWN;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERDOWN

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_FHAMMERUP;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERUP

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 1;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_2;    // nextstate
    misc1: 5;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_1

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FHammerAttack), will be set after
    nextstate: S_FHAMMERATK_3;    // nextstate
    misc1: 5;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_2

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_4;    // nextstate
    misc1: 5;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_3

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_5;    // nextstate
    misc1: 5;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_4

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 4;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_FHammerThrow), will be set after
    nextstate: S_FHAMMERATK_6;    // nextstate
    misc1: 5;                     // misc1
    misc2: 150;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_5

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 60;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_6

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 55;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_7

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_8

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_9

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_10

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERATK_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 35;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_11

   (
    sprite: Ord(SPR_FHMR);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FHAMMERREADY;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FHAMMERATK_12

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ContMobjSound), will be set after
    nextstate: S_HAMMER_MISSILE_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_3

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32771;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_5

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_6

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_7

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_8

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32777;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_HAMMER_MISSILE_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X3

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X5

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 13;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X6

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X7

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X8

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32784;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMER_MISSILE_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X9

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32785;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMER_MISSILE_X10

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMERPUFF2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMERPUFF1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMERPUFF3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMERPUFF2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMERPUFF4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMERPUFF3

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HAMMERPUFF5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMERPUFF4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HAMMERPUFF5

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY1

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY2

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY3

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY4

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY5

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY6

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY7

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY8

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY9

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY10

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_FSWORDREADY;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDREADY11

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_FSWORDDOWN;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDDOWN

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_FSWORDUP;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDUP

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_2;     // nextstate
    misc1: 5;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_1

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_3;     // nextstate
    misc1: 5;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_2

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_4;     // nextstate
    misc1: 5;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_3

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FSwordAttack), will be set after
    nextstate: S_FSWORDATK_5;     // nextstate
    misc1: 5;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_4

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_6;     // nextstate
    misc1: 5;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_5

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32776;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_7;     // nextstate
    misc1: 5;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_6

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32776;                 // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_8;     // nextstate
    misc1: 5;                     // misc1
    misc2: 150;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_7

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_9;     // nextstate
    misc1: 5;                     // misc1
    misc2: 60;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_8

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_10;    // nextstate
    misc1: 5;                     // misc1
    misc2: 55;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_9

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_11;    // nextstate
    misc1: 5;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_10

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDATK_12;    // nextstate
    misc1: 5;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_11

   (
    sprite: Ord(SPR_FSRD);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORDREADY;     // nextstate
    misc1: 5;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORDATK_12

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE1

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE2

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE3

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X1

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FSwordFlames), will be set after
    nextstate: S_FSWORD_MISSILE_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X2

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_FSWORD_MISSILE_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X3

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X4

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X5

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X6

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X7

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X8

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_MISSILE_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X9

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_MISSILE_X10

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32781;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME1

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME2

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME3

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32784;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME4

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32785;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME5

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32786;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME6

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32787;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME7

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32788;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME8

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32789;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FSWORD_FLAME10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME9

   (
    sprite: Ord(SPR_FSFX);        // sprite
    frame: 32790;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD_FLAME10

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CMACEREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEREADY

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_CMACEDOWN;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEDOWN

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_CMACEUP;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEUP

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_2;      // nextstate
    misc1: 60;                    // misc1
    misc2: 20;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_1

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_3;      // nextstate
    misc1: 30;                    // misc1
    misc2: 33;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_2

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_4;      // nextstate
    misc1: 8;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_3

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_5;      // nextstate
    misc1: 8;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_4

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_6;      // nextstate
    misc1: 8;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_5

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_7;      // nextstate
    misc1: 8;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_6

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CMaceAttack), will be set after
    nextstate: S_CMACEATK_8;      // nextstate
    misc1: -11;                   // misc1
    misc2: 58;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_7

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_9;      // nextstate
    misc1: 8;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_8

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_10;     // nextstate
    misc1: -8;                    // misc1
    misc2: 74;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_9

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_11;     // nextstate
    misc1: -20;                   // misc1
    misc2: 96;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_10

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 5;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_12;     // nextstate
    misc1: -33;                   // misc1
    misc2: 160;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_11

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ReFire), will be set after
    nextstate: S_CMACEATK_13;     // nextstate
    misc1: 8;                     // misc1
    misc2: 75;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_12

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_14;     // nextstate
    misc1: 8;                     // misc1
    misc2: 65;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_13

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_15;     // nextstate
    misc1: 8;                     // misc1
    misc2: 60;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_14

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_16;     // nextstate
    misc1: 8;                     // misc1
    misc2: 55;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_15

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEATK_17;     // nextstate
    misc1: 8;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_16

   (
    sprite: Ord(SPR_CMCE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CMACEREADY;      // nextstate
    misc1: 8;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CMACEATK_17

   (
    sprite: Ord(SPR_WCSS);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFREADY1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CStaffInitBlink), will be set after
    nextstate: S_CSTAFFREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY1

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY2

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY3

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY4

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY5

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY6

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY7

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY8

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffCheckBlink), will be set after
    nextstate: S_CSTAFFREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFREADY9

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK1

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK2

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK3

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK4

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK5

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK6

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK7

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK8

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK9

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFBLINK11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK10

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CSTAFFREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFBLINK11

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFDOWN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFDOWN

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFDOWN3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFDOWN2

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_CSTAFFDOWN3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFDOWN3

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_CSTAFFUP;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFUP

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffCheck), will be set after
    nextstate: S_CSTAFFATK_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK_1

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 9;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffAttack), will be set after
    nextstate: S_CSTAFFATK_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK_2

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 9;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFATK_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK_3

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 9;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFATK_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK_4

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFATK_6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK_5

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK_6

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 10;                    // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFATK2_1

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32771;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffMissileSlither), will be set after
    nextstate: S_CSTAFF_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE1

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32771;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffMissileSlither), will be set after
    nextstate: S_CSTAFF_MISSILE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE2

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32772;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffMissileSlither), will be set after
    nextstate: S_CSTAFF_MISSILE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE3

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32772;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CStaffMissileSlither), will be set after
    nextstate: S_CSTAFF_MISSILE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE4

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFF_MISSILE_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE_X1

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFF_MISSILE_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE_X2

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFF_MISSILE_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE_X3

   (
    sprite: Ord(SPR_CSSF);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFF_MISSILE_X4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFPUFF2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFPUFF1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFPUFF3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFPUFF2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFPUFF4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFPUFF3

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CSTAFFPUFF5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFPUFF4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CSTAFFPUFF5

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME1

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME2

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME3

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME5;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME4

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME6;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME5

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME7;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME6

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME8;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME7

   (
    sprite: Ord(SPR_WCFM);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME8

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY1

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY2

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY3

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY4

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY5

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY6

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY7

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY8

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY9

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY10

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY11

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CFLAMEREADY1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEREADY12

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_CFLAMEDOWN;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEDOWN

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_CFLAMEUP;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEUP

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEATK_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_1

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEATK_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_2

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEATK_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_3

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEATK_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_4

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CFlameAttack), will be set after
    nextstate: S_CFLAMEATK_6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_5

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEATK_7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_6

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEATK_8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_7

   (
    sprite: Ord(SPR_CFLM);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEREADY1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEATK_8

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32781;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEFLOOR2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEFLOOR1

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAMEFLOOR3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEFLOOR2

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAMEFLOOR3

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF1

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF3

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF4

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF5

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF6

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF7

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF8

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF10;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF9

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF11;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF10

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF12;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF11

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF13;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF12

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF13

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_1

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_2

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_3

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_4

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_5

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_6

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_7

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_8

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_9

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_10

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_11

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_12

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_13

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_14

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_15

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_16

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_17

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_19;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_18

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FLAMEPUFF2_20;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_19

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FLAMEPUFF2_20

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME1

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CFlameRotate), will be set after
    nextstate: S_CIRCLE_FLAME3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME2

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME3

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32771;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME4

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME5

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CFlameRotate), will be set after
    nextstate: S_CIRCLE_FLAME7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME6

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32774;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME7

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME8

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32776;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME9

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32777;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CFlameRotate), will be set after
    nextstate: S_CIRCLE_FLAME11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME10

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32778;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME11

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME12

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME13

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32781;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CFlameRotate), will be set after
    nextstate: S_CIRCLE_FLAME15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME14

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME15

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32783;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME16

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32784;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X1

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32785;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X2

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32786;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_CIRCLE_FLAME_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X3

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32787;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X4

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32788;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X5

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32789;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X6

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32790;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X7

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32791;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X8

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32792;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CIRCLE_FLAME_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X9

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32793;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CIRCLE_FLAME_X10

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CFLAME_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME_MISSILE1

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CFlamePuff), will be set after
    nextstate: S_FLAMEPUFF1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME_MISSILE2

   (
    sprite: Ord(SPR_CFFX);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CFlameMissile), will be set after
    nextstate: S_FLAMEPUFF1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CFLAME_MISSILE_X

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CHOLYREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYREADY

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_CHOLYDOWN;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYDOWN

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_CHOLYUP;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYUP

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CHOLYATK_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_1

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CHOLYATK_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_2

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CHOLYATK_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 43;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_3

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32771;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CHOLYATK_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 43;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_4

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CHOLYATK_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_5

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_CHolyAttack), will be set after
    nextstate: S_CHOLYATK_7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 48;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_6

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolyPalette), will be set after
    nextstate: S_CHOLYATK_8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_7

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolyPalette), will be set after
    nextstate: S_CHOLYATK_9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_8

   (
    sprite: Ord(SPR_CHLY);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolyPalette), will be set after
    nextstate: S_CHOLYREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLYATK_9

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolySeek), will be set after
    nextstate: S_HOLY_FX2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolySeek), will be set after
    nextstate: S_HOLY_FX3;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolySeek), will be set after
    nextstate: S_HOLY_FX4;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX3

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_CHolyCheckScream), will be set after
    nextstate: S_HOLY_FX1;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX4

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_FX_X2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX_X1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_HOLY_FX_X3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX_X2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_FX_X4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX_X3

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_FX_X5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX_X4

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_FX_X6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX_X5

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_FX_X6

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CHolyTail), will be set after
    nextstate: S_HOLY_TAIL1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_TAIL1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 3;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_TAIL2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 10;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_PUFF2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_PUFF1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 11;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_PUFF3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_PUFF2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 12;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_PUFF4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_PUFF3

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 13;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_PUFF5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_PUFF4

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 14;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_PUFF5

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CHolySpawnPuff), will be set after
    nextstate: S_HOLY_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CHolySpawnPuff), will be set after
    nextstate: S_HOLY_MISSILE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CHolySpawnPuff), will be set after
    nextstate: S_HOLY_MISSILE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE3

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CHolySpawnPuff), will be set after
    nextstate: S_HOLY_MISSILE_X;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE4

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 32783;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_CHolyAttack2), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE_X

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 16;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_MISSILE_P2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE_P1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 17;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_MISSILE_P3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE_P2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 18;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_MISSILE_P4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE_P3

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 19;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_HOLY_MISSILE_P5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE_P4

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 20;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_HOLY_MISSILE_P5

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MWANDREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDREADY

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_MWANDDOWN;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDDOWN

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_MWANDUP;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDUP

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 0;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDATK_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDATK_1

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32769;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_MWandAttack), will be set after
    nextstate: S_MWANDATK_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 48;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDATK_2

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDATK_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDATK_3

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ReFire), will be set after
    nextstate: S_MWANDREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDATK_4

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDPUFF2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDPUFF1

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32773;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDPUFF3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDPUFF2

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDPUFF4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDPUFF3

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDPUFF5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDPUFF4

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDPUFF5

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDSMOKE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDSMOKE1

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDSMOKE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDSMOKE2

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWANDSMOKE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDSMOKE3

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWANDSMOKE4

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWAND_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWAND_MISSILE1

   (
    sprite: Ord(SPR_MWND);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MWAND_MISSILE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MWAND_MISSILE2

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING1

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING2

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING3

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING4

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING5

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING6

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING7

   (
    sprite: Ord(SPR_WMLG);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MW_LIGHTNING1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MW_LIGHTNING8

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY2

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY3

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY4

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY5

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_LightningReady), will be set after
    nextstate: S_MLIGHTNINGREADY7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY6

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY7

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY8

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY9

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY10

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY11

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY12

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY13

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY14

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY15

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY16

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY17

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_LightningReady), will be set after
    nextstate: S_MLIGHTNINGREADY19;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY18

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY20;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY19

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY21;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY20

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY22;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY21

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY23;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY22

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY24;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY23

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MLIGHTNINGREADY;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGREADY24

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_MLIGHTNINGDOWN;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGDOWN

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_MLIGHTNINGUP;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGUP

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_1

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_2

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_MLightningAttack), will be set after
    nextstate: S_MLIGHTNINGATK_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_3

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_4

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_5

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_6

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32776;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 199;                   // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_7

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 55;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_8

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 50;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_9

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGATK_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 45;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_10

   (
    sprite: Ord(SPR_MLNG);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MLIGHTNINGREADY;   // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MLIGHTNINGATK_11

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningZap), will be set after
    nextstate: S_LIGHTNING_CEILING2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_CEILING1

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningClip), will be set after
    nextstate: S_LIGHTNING_CEILING3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_CEILING2

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningClip), will be set after
    nextstate: S_LIGHTNING_CEILING4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_CEILING3

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32771;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningClip), will be set after
    nextstate: S_LIGHTNING_CEILING1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_CEILING4

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningRemove), will be set after
    nextstate: S_LIGHTNING_C_X2;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X1

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X2

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X4;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X3

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X5;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X4

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X6;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X5

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X7;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X6

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X8;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X7

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X9;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 4;                     // frame
    tics: 35;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X10; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X9

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32781;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X11; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X10

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X12; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X11

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X13; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X12

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32784;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X14; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X13

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X15; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X14

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32784;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X16; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X15

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X17; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X16

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X18; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X17

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_C_X19; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X18

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_FREETARGMOBJ;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_C_X19

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningZap), will be set after
    nextstate: S_LIGHTNING_FLOOR2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_FLOOR1

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningClip), will be set after
    nextstate: S_LIGHTNING_FLOOR3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_FLOOR2

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningClip), will be set after
    nextstate: S_LIGHTNING_FLOOR4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_FLOOR3

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningClip), will be set after
    nextstate: S_LIGHTNING_FLOOR1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_FLOOR4

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_LightningRemove), will be set after
    nextstate: S_LIGHTNING_F_X2;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X1

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X3;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X2

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X4;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X3

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X5;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X4

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32777;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X6;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X5

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X7;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X6

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X8;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X7

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32780;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X9;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X8

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 4;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X10; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X9

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32781;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X11; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X10

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X12; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X11

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X13; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X12

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32784;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X14; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X13

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X15; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X14

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32784;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_LastZap), will be set after
    nextstate: S_LIGHTNING_F_X16; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X15

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X17; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X16

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X18; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X17

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_F_X19; // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X18

   (
    sprite: Ord(SPR_MLF2);        // sprite
    frame: 32783;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_HideThing), will be set after
    nextstate: S_FREETARGMOBJ;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_F_X19

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32776;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ZapMimic), will be set after
    nextstate: S_LIGHTNING_ZAP2;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP1

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32777;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ZapMimic), will be set after
    nextstate: S_LIGHTNING_ZAP3;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP2

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32778;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ZapMimic), will be set after
    nextstate: S_LIGHTNING_ZAP4;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP3

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32779;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ZapMimic), will be set after
    nextstate: S_LIGHTNING_ZAP5;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP4

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32780;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_ZapMimic), will be set after
    nextstate: S_LIGHTNING_ZAP1;  // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP5

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32781;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X1

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32782;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X2

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32783;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X3

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32784;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X4

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32785;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X5

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32786;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X6

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32787;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_LIGHTNING_ZAP_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X7

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32788;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_LIGHTNING_ZAP_X8

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY2

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY3

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY4

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY5

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY6

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY7

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY8

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY9

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY10

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY11

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 1;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY12

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY13

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY14

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY16;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY15

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY17;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY16

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY18;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY17

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 2;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY19;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY18

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY20;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY19

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY21;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY20

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY22;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY21

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY23;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY22

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY24;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY23

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 3;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY25;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY24

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY26;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY25

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY27;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY26

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY28;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY27

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY29;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY28

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY30;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY29

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY31;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY30

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY32;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY31

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY33;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY32

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY34;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY33

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY35;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY34

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 5;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_MSTAFFREADY;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFREADY35

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_MSTAFFDOWN;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFDOWN

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_MSTAFFUP;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFUP

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFFATK_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_1

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_MStaffAttack), will be set after
    nextstate: S_MSTAFFATK_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 48;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_2

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffPalette), will be set after
    nextstate: S_MSTAFFATK_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 48;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_3

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffPalette), will be set after
    nextstate: S_MSTAFFATK_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 48;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_4

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffPalette), will be set after
    nextstate: S_MSTAFFATK_6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 48;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_5

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 8;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFFATK_7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 40;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_6

   (
    sprite: Ord(SPR_MSTF);        // sprite
    frame: 9;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFFREADY;     // nextstate
    misc1: 0;                     // misc1
    misc2: 36;                    // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFFATK_7

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MStaffWeave), will be set after
    nextstate: S_MSTAFF_FX1_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX1_1

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MStaffWeave), will be set after
    nextstate: S_MSTAFF_FX1_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX1_2

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MStaffWeave), will be set after
    nextstate: S_MSTAFF_FX1_4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX1_3

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MStaffWeave), will be set after
    nextstate: S_MSTAFF_FX1_5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX1_4

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MStaffWeave), will be set after
    nextstate: S_MSTAFF_FX1_6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX1_5

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32773;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MStaffWeave), will be set after
    nextstate: S_MSTAFF_FX1_1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX1_6

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X1

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_MSTAFF_FX_X3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X2

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X3

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32777;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X4

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X5

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32779;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X6

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X7

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32781;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X8

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X9

   (
    sprite: Ord(SPR_MSP1);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX_X10

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffTrack), will be set after
    nextstate: S_MSTAFF_FX2_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_1

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffTrack), will be set after
    nextstate: S_MSTAFF_FX2_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_2

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffTrack), will be set after
    nextstate: S_MSTAFF_FX2_4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_3

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32771;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MStaffTrack), will be set after
    nextstate: S_MSTAFF_FX2_1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_4

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX2_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_X1

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32773;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_MSTAFF_FX2_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_X2

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32774;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX2_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_X3

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MSTAFF_FX2_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_X4

   (
    sprite: Ord(SPR_MSP2);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF_FX2_X5

   (
    sprite: Ord(SPR_WFR1);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD1

   (
    sprite: Ord(SPR_WFR2);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD2

   (
    sprite: Ord(SPR_WFR3);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FSWORD3

   (
    sprite: Ord(SPR_WCH1);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLY1

   (
    sprite: Ord(SPR_WCH2);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLY2

   (
    sprite: Ord(SPR_WCH3);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CHOLY3

   (
    sprite: Ord(SPR_WMS1);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF1

   (
    sprite: Ord(SPR_WMS2);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF2

   (
    sprite: Ord(SPR_WMS3);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MSTAFF3

   (
    sprite: Ord(SPR_WPIG);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_SNOUTREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SNOUTREADY

   (
    sprite: Ord(SPR_WPIG);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_SNOUTDOWN;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SNOUTDOWN

   (
    sprite: Ord(SPR_WPIG);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_SNOUTUP;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SNOUTUP

   (
    sprite: Ord(SPR_WPIG);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SnoutAttack), will be set after
    nextstate: S_SNOUTATK2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SNOUTATK1

   (
    sprite: Ord(SPR_WPIG);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SnoutAttack), will be set after
    nextstate: S_SNOUTREADY;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SNOUTATK2

   (
    sprite: Ord(SPR_WMCS);        // sprite
    frame: 32768;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_COS2;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_COS1

   (
    sprite: Ord(SPR_WMCS);        // sprite
    frame: 32769;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_COS3;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_COS2

   (
    sprite: Ord(SPR_WMCS);        // sprite
    frame: 32770;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_COS1;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_COS3

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_WeaponReady), will be set after
    nextstate: S_CONEREADY;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEREADY

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Lower), will be set after
    nextstate: S_CONEDOWN;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEDOWN

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Raise), will be set after
    nextstate: S_CONEUP;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEUP

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CONEATK1_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_1

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CONEATK1_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_2

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CONEATK1_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_3

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CONEATK1_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_4

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FireConePL1), will be set after
    nextstate: S_CONEATK1_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_5

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CONEATK1_7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_6

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 0;                     // frame
    tics: 9;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CONEATK1_8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_7

   (
    sprite: Ord(SPR_CONE);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_ReFire), will be set after
    nextstate: S_CONEREADY;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CONEATK1_8

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFX1_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFX1_1

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ShedShard), will be set after
    nextstate: S_SHARDFX1_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFX1_2

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFX1_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFX1_3

   (
    sprite: Ord(SPR_SHRD);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFX1_1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFX1_4

   (
    sprite: Ord(SPR_SHEX);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFXE1_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFXE1_1

   (
    sprite: Ord(SPR_SHEX);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFXE1_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFXE1_2

   (
    sprite: Ord(SPR_SHEX);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFXE1_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFXE1_3

   (
    sprite: Ord(SPR_SHEX);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SHARDFXE1_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFXE1_4

   (
    sprite: Ord(SPR_SHEX);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SHARDFXE1_5

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 2;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLOOD2;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOOD1

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLOOD3;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOOD2

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOOD3

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 2;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLOODSPLATTER2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODSPLATTER1

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 1;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLOODSPLATTER3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODSPLATTER2

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODSPLATTER3

   (
    sprite: Ord(SPR_BLOD);        // sprite
    frame: 0;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODSPLATTERX

   (
    sprite: Ord(SPR_GIBS);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_GIBS1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_RUN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_RUN1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_RUN3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_RUN2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_RUN4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_RUN3

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_RUN1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_RUN4

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_ATK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_ATK1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 5;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_ATK2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_PAIN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_PAIN

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_FPLAY;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_PAIN2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_DIE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_FPLAY_DIE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_DIE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE3

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_DIE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE4

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_FPLAY_DIE6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE5

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_DIE7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE6

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 13;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (A_AddPlayerCorpse), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_DIE7

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_FPLAY_XDIE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SkullPop), will be set after
    nextstate: S_FPLAY_XDIE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_FPLAY_XDIE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE3

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_XDIE5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE4

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_XDIE6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE5

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_XDIE7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE6

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FPLAY_XDIE8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE7

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 22;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (A_AddPlayerCorpse), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_XDIE8

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 23;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_FPLAY_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_ICE

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 23;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_FPLAY_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FPLAY_ICE2

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_F_FDTH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_F_FDTH1

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_F_FDTH2

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_C_FDTH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_C_FDTH1

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_C_FDTH2

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_M_FDTH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_M_FDTH1

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_M_FDTH2

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32774;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH3

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_PLAY_FDTH5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH4

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32776;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH5

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH6

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH7

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH8

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32780;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH10;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH9

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH11;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH10

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32782;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH12;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH11

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH13;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH12

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32784;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH14;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH13

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32785;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH15;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH14

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32786;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_PLAY_FDTH16;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH15

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32787;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH17;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH16

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32788;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH18;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH17

   (
    sprite: Ord(SPR_FDTH);        // sprite
    frame: 32789;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAY_FDTH19;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH18

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 4;                     // frame
    tics: 35;                     // tics
    action: (acp1: nil);          // action (A_CheckBurnGone), will be set after
    nextstate: S_PLAY_FDTH19;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH19

   (
    sprite: Ord(SPR_ACLO);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAY_FDTH20

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL1

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL2

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL3

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL4

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL5

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL6

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckSkullFloor), will be set after
    nextstate: S_BLOODYSKULL1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULL7

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 8;                     // frame
    tics: 16;                     // tics
    action: (acp1: nil);          // action (A_CheckSkullDone), will be set after
    nextstate: S_BLOODYSKULLX1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULLX1

   (
    sprite: Ord(SPR_BSKL);        // sprite
    frame: 8;                     // frame
    tics: 1050;                   // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLOODYSKULLX2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PLAYER_SPEED2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAYER_SPEED1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SpeedFade), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PLAYER_SPEED2

   (
    sprite: Ord(SPR_ICEC);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICECHUNK2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICECHUNK1

   (
    sprite: Ord(SPR_ICEC);        // sprite
    frame: 1;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_IceSetTics), will be set after
    nextstate: S_ICECHUNK3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICECHUNK2

   (
    sprite: Ord(SPR_ICEC);        // sprite
    frame: 2;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_IceSetTics), will be set after
    nextstate: S_ICECHUNK4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICECHUNK3

   (
    sprite: Ord(SPR_ICEC);        // sprite
    frame: 3;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_IceSetTics), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICECHUNK4

   (
    sprite: Ord(SPR_ICEC);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_IceCheckHeadDone), will be set after
    nextstate: S_ICECHUNK_HEAD;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICECHUNK_HEAD

   (
    sprite: Ord(SPR_ICEC);        // sprite
    frame: 0;                     // frame
    tics: 1050;                   // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICECHUNK_HEAD2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_RUN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_RUN1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_RUN3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_RUN2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_RUN4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_RUN3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_RUN1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_RUN4

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_ATK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_ATK1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_ATK3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_ATK2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_ATK3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_PAIN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_PAIN

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_CPLAY;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_PAIN2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_DIE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_CPLAY_DIE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_DIE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_DIE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE4

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_CPLAY_DIE6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE5

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 13;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_DIE7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE6

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 14;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_DIE8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE7

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 15;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_DIE9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE8

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 16;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (A_AddPlayerCorpse), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_DIE9

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_CPLAY_XDIE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_CPLAY_XDIE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE4

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE5

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 22;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE6

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 23;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE7

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 24;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE8

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 25;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CPLAY_XDIE10;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE9

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 26;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (A_AddPlayerCorpse), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_XDIE10

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 27;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_CPLAY_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_ICE

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 27;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_CPLAY_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CPLAY_ICE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_RUN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_RUN1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_RUN3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_RUN2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_RUN4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_RUN3

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_RUN1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_RUN4

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_ATK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_ATK1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 32773;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_ATK2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_PAIN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_PAIN

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_MPLAY;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_PAIN2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_DIE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_MPLAY_DIE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_DIE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE3

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_DIE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE4

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_MPLAY_DIE6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE5

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_DIE7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE6

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 13;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (A_AddPlayerCorpse), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_DIE7

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_MPLAY_XDIE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_XDIE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_MPLAY_XDIE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE3

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_XDIE5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE4

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_XDIE6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE5

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_XDIE7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE6

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_XDIE8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE7

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 22;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MPLAY_XDIE9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE8

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 23;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (A_AddPlayerCorpse), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_XDIE9

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 24;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_MPLAY_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_ICE

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 24;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_MPLAY_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MPLAY_ICE2

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIGPLAY_RUN2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY_RUN1

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIGPLAY_RUN3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY_RUN2

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIGPLAY_RUN4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY_RUN3

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIGPLAY_RUN1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY_RUN4

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 0;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIGPLAY;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY_ATK1

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_PigPain), will be set after
    nextstate: S_PIGPLAY;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIGPLAY_PAIN

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 1;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_PigLook), will be set after
    nextstate: S_PIG_LOOK1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_LOOK1

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_PigChase), will be set after
    nextstate: S_PIG_WALK2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_WALK1

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_PigChase), will be set after
    nextstate: S_PIG_WALK3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_WALK2

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_PigChase), will be set after
    nextstate: S_PIG_WALK4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_WALK3

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_PigChase), will be set after
    nextstate: S_PIG_WALK1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_WALK4

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_PigPain), will be set after
    nextstate: S_PIG_WALK1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_PAIN

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_PIG_ATK2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_ATK1

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_PigAttack), will be set after
    nextstate: S_PIG_WALK1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_ATK2

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_PIG_DIE2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE1

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_PIG_DIE3;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE2

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_PIG_DIE4;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE3

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIG_DIE5;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE4

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIG_DIE6;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE5

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIG_DIE7;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE6

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_PIG_DIE8;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE7

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 11;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_DIE8

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 12;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_PIG_ICE2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_ICE

   (
    sprite: Ord(SPR_PIGY);        // sprite
    frame: 12;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_PIG_ICE2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_PIG_ICE2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_CENTAUR_LOOK2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_LOOK1

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 1;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_CENTAUR_LOOK1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_LOOK2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_CENTAUR_WALK2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_WALK1

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_CENTAUR_WALK3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_WALK2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_CENTAUR_WALK4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_WALK3

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_CENTAUR_WALK1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_WALK4

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_CENTAUR_ATK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_ATK1

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_CENTAUR_ATK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_ATK2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 9;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_CentaurAttack), will be set after
    nextstate: S_CENTAUR_WALK1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_ATK3

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 4;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_CENTAUR_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_MISSILE1

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 32773;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_CentaurAttack2), will be set after
    nextstate: S_CENTAUR_MISSILE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_MISSILE2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 4;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_CENTAUR_MISSILE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_MISSILE3

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 32773;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_CentaurAttack2), will be set after
    nextstate: S_CENTAUR_WALK1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_MISSILE4

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_CENTAUR_PAIN2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_PAIN1

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_SetReflective), will be set after
    nextstate: S_CENTAUR_PAIN3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_PAIN2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 4;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_CentaurDefend), will be set after
    nextstate: S_CENTAUR_PAIN4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_PAIN3

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 4;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_CentaurDefend), will be set after
    nextstate: S_CENTAUR_PAIN5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_PAIN4

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 4;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_CentaurDefend), will be set after
    nextstate: S_CENTAUR_PAIN6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_PAIN5

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 4;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_UnSetReflective), will be set after
    nextstate: S_CENTAUR_WALK1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_PAIN6

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH1

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 11;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_CENTAUR_DEATH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH2

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 12;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH3

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH4

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_CENTAUR_DEATH6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH5

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 15;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH6

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 16;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH7

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 17;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_CENTAUR_DEATH9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH8

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH0;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH9

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 19;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH0

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X1

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_CENTAUR_DEATH_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X2

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_CentaurDropStuff), will be set after
    nextstate: S_CENTAUR_DEATH_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X3

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_CENTAUR_DEATH_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X4

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_CENTAUR_DEATH_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X5

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH_X7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X6

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH_X8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X7

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH_X9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X8

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH_X10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X9

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_DEATH_X11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X10

   (
    sprite: Ord(SPR_CTXD);        // sprite
    frame: 10;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_DEATH_X11

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_CENTAUR_ICE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_ICE

   (
    sprite: Ord(SPR_CENT);        // sprite
    frame: 20;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_CENTAUR_ICE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_ICE2

   (
    sprite: Ord(SPR_CTFX);        // sprite
    frame: 32768;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_FX1

   (
    sprite: Ord(SPR_CTFX);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_FX_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_FX_X1

   (
    sprite: Ord(SPR_CTFX);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_FX_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_FX_X2

   (
    sprite: Ord(SPR_CTFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_FX_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_FX_X3

   (
    sprite: Ord(SPR_CTFX);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_FX_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_FX_X4

   (
    sprite: Ord(SPR_CTFX);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_FX_X5

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SHIELD2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD1

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SHIELD3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD2

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SHIELD4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD3

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SHIELD5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD4

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SHIELD6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD5

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SHIELD3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD6

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_SHIELD_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD_X1

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_CENTAUR_SHIELD_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD_X2

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_SHIELD_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD_X3

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 9;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SHIELD_X4

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 10;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD1

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 11;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD2

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 12;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD3

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 13;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD4

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 14;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD5

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 15;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD6

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 16;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_CENTAUR_SWORD3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD7

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 17;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CENTAUR_SWORD_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD_X1

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_CENTAUR_SWORD_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD_X2

   (
    sprite: Ord(SPR_CTDP);        // sprite
    frame: 19;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CENTAUR_SWORD_X3

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_DEMN_LOOK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_LOOK1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_DEMN_LOOK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_LOOK2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN_CHASE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_CHASE1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN_CHASE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_CHASE2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN_CHASE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_CHASE3

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN_CHASE1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_CHASE4

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN_ATK1_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_ATK1_1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 5;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN_ATK1_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_ATK1_2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_DemonAttack1), will be set after
    nextstate: S_DEMN_CHASE1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_ATK1_3

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN_ATK2_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_ATK2_1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN_ATK2_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_ATK2_2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_DemonAttack2), will be set after
    nextstate: S_DEMN_CHASE1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_ATK2_3

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_PAIN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_PAIN1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_DEMN_CHASE1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_PAIN2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_DEATH2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_DEATH3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_DEMN_DEATH4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH3

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_DEMN_DEATH5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH4

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMN_DEATH6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH5

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_DEATH7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH6

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 13;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_DEATH8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH7

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 14;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_DEATH9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH8

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 15;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_DEATH9

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_XDEATH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH1

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_DemonDeath), will be set after
    nextstate: S_DEMN_XDEATH3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH2

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_DEMN_XDEATH4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH3

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_DEMN_XDEATH5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH4

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMN_XDEATH6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH5

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_XDEATH7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH6

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 13;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_XDEATH8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH7

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 14;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN_XDEATH9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH8

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 15;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN_XDEATH9

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 16;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_DEMON_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON_ICE

   (
    sprite: Ord(SPR_DEMN);        // sprite
    frame: 16;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_DEMON_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON_ICE2

   (
    sprite: Ord(SPR_DEMA);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK1_1

   (
    sprite: Ord(SPR_DEMA);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMONCHUNK1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK1_2

   (
    sprite: Ord(SPR_DEMA);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK1_3

   (
    sprite: Ord(SPR_DEMA);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK1_4

   (
    sprite: Ord(SPR_DEMB);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK2_1

   (
    sprite: Ord(SPR_DEMB);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMONCHUNK2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK2_2

   (
    sprite: Ord(SPR_DEMB);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK2_3

   (
    sprite: Ord(SPR_DEMB);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK2_4

   (
    sprite: Ord(SPR_DEMC);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK3_1

   (
    sprite: Ord(SPR_DEMC);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMONCHUNK3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK3_2

   (
    sprite: Ord(SPR_DEMC);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK3_3

   (
    sprite: Ord(SPR_DEMC);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK3_4

   (
    sprite: Ord(SPR_DEMD);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK4_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK4_1

   (
    sprite: Ord(SPR_DEMD);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMONCHUNK4_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK4_2

   (
    sprite: Ord(SPR_DEMD);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK4_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK4_3

   (
    sprite: Ord(SPR_DEMD);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK4_4

   (
    sprite: Ord(SPR_DEME);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK5_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK5_1

   (
    sprite: Ord(SPR_DEME);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMONCHUNK5_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK5_2

   (
    sprite: Ord(SPR_DEME);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONCHUNK5_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK5_3

   (
    sprite: Ord(SPR_DEME);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONCHUNK5_4

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_MOVE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_MOVE1

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_MOVE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_MOVE2

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_MOVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_MOVE3

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_BOOM2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_BOOM1

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_BOOM3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_BOOM2

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32773;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_BOOM4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_BOOM3

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMONFX_BOOM5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_BOOM4

   (
    sprite: Ord(SPR_DMFX);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMONFX_BOOM5

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_DEMN2_LOOK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_LOOK1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_DEMN2_LOOK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_LOOK2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN2_CHASE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_CHASE1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN2_CHASE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_CHASE2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN2_CHASE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_CHASE3

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_DEMN2_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_CHASE4

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN2_ATK1_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_ATK1_1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 5;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN2_ATK1_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_ATK1_2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_DemonAttack1), will be set after
    nextstate: S_DEMN2_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_ATK1_3

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN2_ATK2_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_ATK2_1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_DEMN2_ATK2_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_ATK2_2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_DemonAttack2), will be set after
    nextstate: S_DEMN2_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_ATK2_3

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_PAIN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_PAIN1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_DEMN2_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_PAIN2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_DEATH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_DEATH3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_DEMN2_DEATH4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH3

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_DEMN2_DEATH5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH4

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMN2_DEATH6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH5

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_DEATH7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH6

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 13;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_DEATH8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH7

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 14;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_DEATH9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH8

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 15;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_DEATH9

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_XDEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH1

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Demon2Death), will be set after
    nextstate: S_DEMN2_XDEATH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH2

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_DEMN2_XDEATH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH3

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_DEMN2_XDEATH5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH4

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMN2_XDEATH6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH5

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_XDEATH7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH6

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 13;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_XDEATH8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH7

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 14;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMN2_XDEATH9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH8

   (
    sprite: Ord(SPR_DEM2);        // sprite
    frame: 15;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMN2_XDEATH9

   (
    sprite: Ord(SPR_DMBA);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK1_1

   (
    sprite: Ord(SPR_DMBA);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMON2CHUNK1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK1_2

   (
    sprite: Ord(SPR_DMBA);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK1_3

   (
    sprite: Ord(SPR_DMBA);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK1_4

   (
    sprite: Ord(SPR_DMBB);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK2_1

   (
    sprite: Ord(SPR_DMBB);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMON2CHUNK2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK2_2

   (
    sprite: Ord(SPR_DMBB);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK2_3

   (
    sprite: Ord(SPR_DMBB);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK2_4

   (
    sprite: Ord(SPR_DMBC);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK3_1

   (
    sprite: Ord(SPR_DMBC);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMON2CHUNK3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK3_2

   (
    sprite: Ord(SPR_DMBC);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK3_3

   (
    sprite: Ord(SPR_DMBC);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK3_4

   (
    sprite: Ord(SPR_DMBD);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK4_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK4_1

   (
    sprite: Ord(SPR_DMBD);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_DEMON2CHUNK4_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK4_2

   (
    sprite: Ord(SPR_DMBD);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK4_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK4_3

   (
    sprite: Ord(SPR_DMBD);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK4_4

   (
    sprite: Ord(SPR_DMBE);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK5_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK5_1

   (
    sprite: Ord(SPR_DMBE);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK5_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK5_2

   (
    sprite: Ord(SPR_DMBE);        // sprite
    frame: 0;                     // frame
    tics: 20;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2CHUNK5_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK5_3

   (
    sprite: Ord(SPR_DMBE);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2CHUNK5_4

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_MOVE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_MOVE1

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_MOVE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_MOVE2

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_MOVE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_MOVE3

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_MOVE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_MOVE4

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_MOVE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_MOVE5

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_MOVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_MOVE6

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_BOOM2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_BOOM1

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_BOOM3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_BOOM2

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_BOOM4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_BOOM3

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_BOOM5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_BOOM4

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DEMON2FX_BOOM6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_BOOM5

   (
    sprite: Ord(SPR_D2FX);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DEMON2FX_BOOM6

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_WraithRaiseInit), will be set after
    nextstate: S_WRAITH_RAISE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_RAISE1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_WraithRaise), will be set after
    nextstate: S_WRAITH_RAISE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_RAISE2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_WRAITH_RAISE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_RAISE3

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_WraithRaise), will be set after
    nextstate: S_WRAITH_RAISE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_RAISE4

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_WraithRaise), will be set after
    nextstate: S_WRAITH_RAISE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_RAISE5

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_INIT2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_INIT1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_WraithInit), will be set after
    nextstate: S_WRAITH_LOOK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_INIT2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_WraithLook), will be set after
    nextstate: S_WRAITH_LOOK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_LOOK1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 1;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_WraithLook), will be set after
    nextstate: S_WRAITH_LOOK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_LOOK2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_WraithChase), will be set after
    nextstate: S_WRAITH_CHASE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_CHASE1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_WraithChase), will be set after
    nextstate: S_WRAITH_CHASE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_CHASE2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_WraithChase), will be set after
    nextstate: S_WRAITH_CHASE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_CHASE3

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_WraithChase), will be set after
    nextstate: S_WRAITH_CHASE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_CHASE4

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_WRAITH_ATK1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ATK1_1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_WraithFX3), will be set after
    nextstate: S_WRAITH_ATK1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ATK1_2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_WraithMelee), will be set after
    nextstate: S_WRAITH_CHASE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ATK1_3

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_WRAITH_ATK2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ATK2_1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_ATK2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ATK2_2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_WraithMissile), will be set after
    nextstate: S_WRAITH_CHASE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ATK2_3

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_PAIN2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_PAIN1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_WRAITH_CHASE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_PAIN2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_1

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_WRAITH_DEATH1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_2

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH1_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_3

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 11;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH1_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_4

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 12;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_WRAITH_DEATH1_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_5

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_WRAITH_DEATH1_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_6

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH1_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_7

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH1_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_8

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 16;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH1_0;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_9

   (
    sprite: Ord(SPR_WRTH);        // sprite
    frame: 17;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH1_0

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_1

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_WRAITH_DEATH2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_2

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH2_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_3

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH2_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_4

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_WRAITH_DEATH2_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_5

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_WRAITH_DEATH2_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_6

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRAITH_DEATH2_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_7

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 7;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_DEATH2_8

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 8;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_WRAITH_ICE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ICE

   (
    sprite: Ord(SPR_WRT2);        // sprite
    frame: 8;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_WRAITH_ICE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRAITH_ICE2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_MOVE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_MOVE1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_WraithFX2), will be set after
    nextstate: S_WRTHFX_MOVE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_MOVE2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_MOVE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_MOVE3

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_BOOM2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BOOM1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_WraithFX2), will be set after
    nextstate: S_WRTHFX_BOOM3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BOOM2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_BOOM4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BOOM3

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_WraithFX2), will be set after
    nextstate: S_WRTHFX_BOOM5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BOOM4

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_WraithFX2), will be set after
    nextstate: S_WRTHFX_BOOM6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BOOM5

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32776;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BOOM6

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_SIZZLE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_SIZZLE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_SIZZLE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE3

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_SIZZLE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE4

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_SIZZLE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE5

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_SIZZLE7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE6

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_SIZZLE7

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32784;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_DROP2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_DROP1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32785;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_DROP3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_DROP2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32786;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_DROP1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_DROP3

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 32786;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_DEAD1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_ADROP2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_ADROP1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_ADROP3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_ADROP2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_ADROP4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_ADROP3

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_ADROP1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_ADROP4

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 22;                    // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_ADEAD1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 23;                    // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_BDROP2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BDROP1

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 24;                    // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_BDROP3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BDROP2

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 25;                    // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WRTHFX_BDROP1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BDROP3

   (
    sprite: Ord(SPR_WRBL);        // sprite
    frame: 25;                    // frame
    tics: 35;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WRTHFX_BDEAD1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 0;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTR_SPAWN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_SPAWN1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 0;                     // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_MinotaurFade1), will be set after
    nextstate: S_MNTR_SPAWN3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_SPAWN2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_MinotaurFade2), will be set after
    nextstate: S_MNTR_LOOK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_SPAWN3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_MinotaurLook), will be set after
    nextstate: S_MNTR_LOOK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_LOOK1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 1;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_MinotaurLook), will be set after
    nextstate: S_MNTR_LOOK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_LOOK2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurChase), will be set after
    nextstate: S_MNTR_WALK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_WALK1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurChase), will be set after
    nextstate: S_MNTR_WALK3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_WALK2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurChase), will be set after
    nextstate: S_MNTR_WALK4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_WALK3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurChase), will be set after
    nextstate: S_MNTR_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_WALK4

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurRoam), will be set after
    nextstate: S_MNTR_ROAM2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ROAM1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurRoam), will be set after
    nextstate: S_MNTR_ROAM3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ROAM2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurRoam), will be set after
    nextstate: S_MNTR_ROAM4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ROAM3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurRoam), will be set after
    nextstate: S_MNTR_ROAM1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ROAM4

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 6;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_MNTR_ATK1_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK1_1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 7;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_MNTR_ATK1_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK1_2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 8;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_MinotaurAtk1), will be set after
    nextstate: S_MNTR_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK1_3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 6;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_MinotaurDecide), will be set after
    nextstate: S_MNTR_ATK2_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK2_1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_MNTR_ATK2_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK2_2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 10;                    // frame
    tics: 9;                      // tics
    action: (acp1: nil);          // action (A_MinotaurAtk2), will be set after
    nextstate: S_MNTR_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK2_3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 6;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_MNTR_ATK3_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK3_1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 7;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_MNTR_ATK3_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK3_2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 8;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_MinotaurAtk3), will be set after
    nextstate: S_MNTR_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK3_3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 8;                     // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTR_ATK3_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK3_4

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MinotaurCharge), will be set after
    nextstate: S_MNTR_ATK4_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_ATK4_1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTR_PAIN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_PAIN1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_MNTR_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_PAIN2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTR_DIE2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE1

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_MNTR_DIE3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE2

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SmokePuffExit), will be set after
    nextstate: S_MNTR_DIE4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE3

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTR_DIE5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE4

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_MNTR_DIE6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE5

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTR_DIE7;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE6

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurFade1), will be set after
    nextstate: S_MNTR_DIE8;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE7

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_MinotaurFade0), will be set after
    nextstate: S_MNTR_DIE9;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE8

   (
    sprite: Ord(SPR_MNTR);        // sprite
    frame: 4;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTR_DIE9

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32768;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX1_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX1_1

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32769;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX1_1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX1_2

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI1_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI1_1

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI1_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI1_2

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI1_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI1_3

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32773;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI1_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI1_4

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32774;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI1_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI1_5

   (
    sprite: Ord(SPR_FX12);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI1_6

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_MntrFloorFire), will be set after
    nextstate: S_MNTRFX2_1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX2_1

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_MNTRFXI2_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI2_1

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI2_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI2_2

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI2_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI2_3

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFXI2_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI2_4

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFXI2_5

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_1

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_2

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_3

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_4

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_5

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_7;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_6

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_8;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_7

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MNTRFX3_9;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_8

   (
    sprite: Ord(SPR_FX13);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MNTRFX3_9

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE1

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE2

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE3

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE4

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE5

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE6

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE7

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE8

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKE0;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE9

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEA;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKE0

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 10;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEB;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEA

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 11;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEC;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEB

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 12;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKED;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEC

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 13;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEE;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKED

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 14;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEF;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEE

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 15;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEG;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEF

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 16;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEG

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX1

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX2

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX3

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX4

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX5

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX6

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX7

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX8

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEX0;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX9

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXA;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEX0

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXB;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXA

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXC;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXB

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXD;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXC

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXE;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXD

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXF;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXE

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXG;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXF

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXH;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXG

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MINOSMOKEXI;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXH

   (
    sprite: Ord(SPR_MNSM);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MINOSMOKEXI

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 7;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_SERPENT_LOOK1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_LOOK1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 7;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_SerpentChase), will be set after
    nextstate: S_SERPENT_SWIM2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SWIM1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 7;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_SerpentChase), will be set after
    nextstate: S_SERPENT_SWIM3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SWIM2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SerpentHumpDecide), will be set after
    nextstate: S_SERPENT_SWIM1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SWIM3

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentUnHide), will be set after
    nextstate: S_SERPENT_HUMP2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentRaiseHump), will be set after
    nextstate: S_SERPENT_HUMP3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentRaiseHump), will be set after
    nextstate: S_SERPENT_HUMP4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP3

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentRaiseHump), will be set after
    nextstate: S_SERPENT_HUMP5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP4

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentRaiseHump), will be set after
    nextstate: S_SERPENT_HUMP6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP5

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentRaiseHump), will be set after
    nextstate: S_SERPENT_HUMP7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP6

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_HUMP8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP7

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_HUMP9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP8

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_HUMP10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP9

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentLowerHump), will be set after
    nextstate: S_SERPENT_HUMP11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP10

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentLowerHump), will be set after
    nextstate: S_SERPENT_HUMP12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP11

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentLowerHump), will be set after
    nextstate: S_SERPENT_HUMP13;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP12

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentLowerHump), will be set after
    nextstate: S_SERPENT_HUMP14;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP13

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentLowerHump), will be set after
    nextstate: S_SERPENT_HUMP15;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP14

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentHide), will be set after
    nextstate: S_SERPENT_SWIM1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HUMP15

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_SERPENT_SURFACE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SURFACE1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_SerpentBirthScream), will be set after
    nextstate: S_SERPENT_SURFACE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SURFACE2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SetShootable), will be set after
    nextstate: S_SERPENT_SURFACE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SURFACE3

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_SURFACE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SURFACE4

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentCheckForAttack), will be set after
    nextstate: S_SERPENT_DIVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_SURFACE5

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE1

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE2

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE3

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_UnSetShootable), will be set after
    nextstate: S_SERPENT_DIVE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE4

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentDiveSound), will be set after
    nextstate: S_SERPENT_DIVE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE5

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE6

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE7

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE8

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIVE10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE9

   (
    sprite: Ord(SPR_SSDV);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentHide), will be set after
    nextstate: S_SERPENT_SWIM1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIVE10

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 8;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentWalk), will be set after
    nextstate: S_SERPENT_WALK2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_WALK1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 9;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentWalk), will be set after
    nextstate: S_SERPENT_WALK3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_WALK2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 8;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentWalk), will be set after
    nextstate: S_SERPENT_WALK4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_WALK3

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 9;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentCheckForAttack), will be set after
    nextstate: S_SERPENT_DIVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_WALK4

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 11;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_PAIN2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_PAIN1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 11;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_SERPENT_DIVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_PAIN2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_SERPENT_ATK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_ATK1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 11;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentChooseAttack), will be set after
    nextstate: S_SERPENT_MELEE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_ATK2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 13;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentMeleeAttack), will be set after
    nextstate: S_SERPENT_DIVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_MELEE1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 13;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SerpentMissileAttack), will be set after
    nextstate: S_SERPENT_DIVE1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_MISSILE1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE1

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 15;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_SERPENT_DIE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE2

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 16;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_SERPENT_DIE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE3

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 17;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE4

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE5

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE6

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE7

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE8

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE9

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 23;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE10

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 24;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_DIE12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE11

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 25;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_DIE12

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_XDIE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE1

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadPop), will be set after
    nextstate: S_SERPENT_XDIE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE2

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_SERPENT_XDIE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE3

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_XDIE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE4

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_XDIE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE5

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_XDIE7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE6

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_XDIE8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE7

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SerpentSpawnGibs), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_XDIE8

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 26;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_SERPENT_ICE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_ICE

   (
    sprite: Ord(SPR_SSPT);        // sprite
    frame: 26;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_SERPENT_ICE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_ICE2

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ContMobjSound), will be set after
    nextstate: S_SERPENT_FX2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX1

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX2

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX3

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX4

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX_X1

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX_X2

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX_X3

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX_X4

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_FX_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX_X5

   (
    sprite: Ord(SPR_SSFX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_FX_X6

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD1

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD2

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD3

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 11;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD4

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 12;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD5

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD6

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD7

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 15;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SerpentHeadCheck), will be set after
    nextstate: S_SERPENT_HEAD1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD8

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 18;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_HEAD_X1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_HEAD_X1

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_GIB1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_1

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_2

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB1_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_3

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB1_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_4

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB1_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_5

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB1_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_6

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 232;                    // tics
    action: (acp1: nil);          // action (A_DelayGib), will be set after
    nextstate: S_SERPENT_GIB1_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_7

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB1_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_8

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB1_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_9

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB1_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_10

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB1_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_11

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 16;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB1_12

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_GIB2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_1

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_2

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB2_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_3

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB2_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_4

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB2_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_5

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB2_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_6

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 232;                    // tics
    action: (acp1: nil);          // action (A_DelayGib), will be set after
    nextstate: S_SERPENT_GIB2_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_7

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB2_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_8

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB2_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_9

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB2_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_10

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB2_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_11

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 17;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB2_12

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SERPENT_GIB3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_1

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB3_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_2

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB3_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_3

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB3_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_4

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB3_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_5

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_FloatGib), will be set after
    nextstate: S_SERPENT_GIB3_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_6

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 232;                    // tics
    action: (acp1: nil);          // action (A_DelayGib), will be set after
    nextstate: S_SERPENT_GIB3_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_7

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB3_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_8

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 12;                     // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB3_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_9

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB3_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_10

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_SERPENT_GIB3_12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_11

   (
    sprite: Ord(SPR_SSXD);        // sprite
    frame: 19;                    // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SinkGib), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SERPENT_GIB3_12

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_BISHOP_LOOK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_LOOK1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_BishopDecide), will be set after
    nextstate: S_BISHOP_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DECIDE

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BishopDoBlur), will be set after
    nextstate: S_BISHOP_BLUR2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_BLUR1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_BishopSpawnBlur), will be set after
    nextstate: S_BISHOP_BLUR2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_BLUR2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_BISHOP_WALK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_WALK1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BishopChase), will be set after
    nextstate: S_BISHOP_WALK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_WALK2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_WALK4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_WALK3

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BishopChase), will be set after
    nextstate: S_BISHOP_WALK5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_WALK4

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_BISHOP_WALK6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_WALK5

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BishopChase), will be set after
    nextstate: S_BISHOP_DECIDE;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_WALK6

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_BISHOP_ATK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ATK1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_BISHOP_ATK3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ATK2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32772;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_BISHOP_ATK4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ATK3

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32773;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_BishopAttack), will be set after
    nextstate: S_BISHOP_ATK5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ATK4

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32773;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_BishopAttack2), will be set after
    nextstate: S_BISHOP_ATK5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ATK5

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_BISHOP_PAIN2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PAIN1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_BishopPainBlur), will be set after
    nextstate: S_BISHOP_PAIN3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PAIN2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_BishopPainBlur), will be set after
    nextstate: S_BISHOP_PAIN4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PAIN3

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 2;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_BishopPainBlur), will be set after
    nextstate: S_BISHOP_PAIN5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PAIN4

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 2;                     // frame
    tics: 0;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PAIN5

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_DEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32775;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_BISHOP_DEATH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32776;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_BISHOP_DEATH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH3

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32777;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_BISHOP_DEATH5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH4

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_DEATH6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH5

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_DEATH7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH6

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_DEATH8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH7

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_BishopPuff), will be set after
    nextstate: S_BISHOP_DEATH9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH8

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_BISHOP_DEATH10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH9

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 15;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_DEATH10

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 23;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_BISHOP_ICE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ICE

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 23;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_BISHOP_ICE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_ICE2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 16;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_PUFF2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_PUFF3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_PUFF4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF3

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_PUFF5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF4

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 20;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_PUFF6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF5

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 21;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOP_PUFF7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF6

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 22;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOP_PUFF7

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 16;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHOPBLUR2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOPBLUR1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 0;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_SetAltShadow), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOPBLUR2

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 2;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHOPPAINBLUR1

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_BishopMissileWeave), will be set after
    nextstate: S_BISHFX1_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFX1_1

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_BishopMissileWeave), will be set after
    nextstate: S_BISHFX1_3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFX1_2

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32768;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_BishopMissileWeave), will be set after
    nextstate: S_BISHFX1_4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFX1_3

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32769;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_BishopMissileWeave), will be set after
    nextstate: S_BISHFX1_5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFX1_4

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32769;                 // frame
    tics: 0;                      // tics
    action: (acp1: nil);          // action (A_BishopMissileSeek), will be set after
    nextstate: S_BISHFX1_1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFX1_5

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHFXI1_2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFXI1_1

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHFXI1_3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFXI1_2

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHFXI1_4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFXI1_3

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHFXI1_5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFXI1_4

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32774;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHFXI1_6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFXI1_5

   (
    sprite: Ord(SPR_BPFX);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHFXI1_6

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 3;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_DRAGON_LOOK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_LOOK1

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_INIT2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_INIT

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_INIT3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_INIT2

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_DragonInitFlight), will be set after
    nextstate: S_DRAGON_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_INIT3

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlap), will be set after
    nextstate: S_DRAGON_WALK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK1

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK2

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK3

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK4

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK5

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK6

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK7

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK8

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK9

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK10

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK12;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK11

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_DragonFlight), will be set after
    nextstate: S_DRAGON_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_WALK12

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_DragonAttack), will be set after
    nextstate: S_DRAGON_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_ATK1

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 5;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_DragonPain), will be set after
    nextstate: S_DRAGON_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_PAIN1

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_DRAGON_DEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_DEATH1

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_DRAGON_DEATH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_DEATH2

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_DEATH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_DEATH3

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_DragonCheckCrash), will be set after
    nextstate: S_DRAGON_DEATH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_DEATH4

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 10;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_CRASH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_CRASH1

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 11;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_CRASH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_CRASH2

   (
    sprite: Ord(SPR_DRAG);        // sprite
    frame: 12;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_CRASH3

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_1

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_2

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_3

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_4

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_5

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_6

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_X2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_X1

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_X3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_X2

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_X4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_X3

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_DragonFX2), will be set after
    nextstate: S_DRAGON_FX1_X5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_X4

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX1_X6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_X5

   (
    sprite: Ord(SPR_DRFX);        // sprite
    frame: 32779;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX1_X6

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32784;                 // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_1

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32784;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_UnHideThing), will be set after
    nextstate: S_DRAGON_FX2_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_2

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32785;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_DRAGON_FX2_4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_3

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32786;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_4

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32787;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_DRAGON_FX2_6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_5

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32788;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_6

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32789;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_7

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32790;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_8

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32791;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_9

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32792;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_DRAGON_FX2_11;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_10

   (
    sprite: Ord(SPR_CFCF);        // sprite
    frame: 32793;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_DRAGON_FX2_11

   (
    sprite: Ord(SPR_ARM1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARMOR_1

   (
    sprite: Ord(SPR_ARM2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARMOR_2

   (
    sprite: Ord(SPR_ARM3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARMOR_3

   (
    sprite: Ord(SPR_ARM4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ARMOR_4

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_1

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_2

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_3

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_5;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_4

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_6;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_5

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_7;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_6

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_8;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_7

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_9;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_8

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA1_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA1_9

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_1

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_2

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_3

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_5;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_4

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_6;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_5

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_7;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_6

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_8;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_7

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_9;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_8

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_10;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_9

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_11;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_10

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_12;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_11

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_13;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_12

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_14;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_13

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_15;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_14

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_16;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_15

   (
    sprite: Ord(SPR_MAN2);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA2_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA2_16

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_1

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_3;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_2

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_4;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_3

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_5;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_4

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_6;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_5

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_7;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_6

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_8;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_7

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32775;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_9;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_8

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32776;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_10;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_9

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32777;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_11;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_10

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32778;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_12;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_11

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_13;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_12

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32780;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_14;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_13

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32781;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_15;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_14

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32782;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_16;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_15

   (
    sprite: Ord(SPR_MAN3);        // sprite
    frame: 32783;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MANA3_1;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MANA3_16

   (
    sprite: Ord(SPR_KEY1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY1

   (
    sprite: Ord(SPR_KEY2);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY2

   (
    sprite: Ord(SPR_KEY3);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY3

   (
    sprite: Ord(SPR_KEY4);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY4

   (
    sprite: Ord(SPR_KEY5);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY5

   (
    sprite: Ord(SPR_KEY6);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY6

   (
    sprite: Ord(SPR_KEY7);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY7

   (
    sprite: Ord(SPR_KEY8);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY8

   (
    sprite: Ord(SPR_KEY9);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEY9

   (
    sprite: Ord(SPR_KEYA);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEYA

   (
    sprite: Ord(SPR_KEYB);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KEYB

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SND_WIND2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SND_WIND1

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (A_ESound), will be set after
    nextstate: S_SND_WIND2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SND_WIND2

   (
    sprite: Ord(SPR_TLGL);        // sprite
    frame: 0;                     // frame
    tics: 85;                     // tics
    action: (acp1: nil);          // action (A_ESound), will be set after
    nextstate: S_SND_WATERFALL;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SND_WATERFALL

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_ETTIN_LOOK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_LOOK1

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_ETTIN_LOOK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_LOOK2

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ETTIN_CHASE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_CHASE1

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ETTIN_CHASE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_CHASE2

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ETTIN_CHASE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_CHASE3

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ETTIN_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_CHASE4

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 7;                     // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_ETTIN_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_PAIN1

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 4;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_ETTIN_ATK1_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_ATK1_1

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_ETTIN_ATK1_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_ATK1_2

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 6;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_EttinAttack), will be set after
    nextstate: S_ETTIN_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_ATK1_3

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_1

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_2

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ETTIN_DEATH1_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_3

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 11;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_ETTIN_DEATH1_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_4

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 12;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_ETTIN_DEATH1_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_5

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH1_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_6

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH1_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_7

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 15;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH1_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_8

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 16;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH1_9

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_1

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_ETTIN_DEATH2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_2

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_DropMace), will be set after
    nextstate: S_ETTIN_DEATH2_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_3

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_ETTIN_DEATH2_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_4

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_ETTIN_DEATH2_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_5

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_6

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_7

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_8

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_0;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_9

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 9;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_A;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_0

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 10;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_DEATH2_B;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_A

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 11;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_DEATH2_B

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_ETTIN_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_ICE1

   (
    sprite: Ord(SPR_ETTN);        // sprite
    frame: 17;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_ETTIN_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_ICE2

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 12;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_ETTIN_MACE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE1

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 13;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_ETTIN_MACE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE2

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_ETTIN_MACE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE3

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_CheckFloor), will be set after
    nextstate: S_ETTIN_MACE1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE4

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 16;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ETTIN_MACE6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE5

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_ETTIN_MACE7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE6

   (
    sprite: Ord(SPR_ETTB);        // sprite
    frame: 18;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ETTIN_MACE7

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32791;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_SPAWN1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32772;                 // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_FIRED_LOOK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32773;                 // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_FIRED_LOOK3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32774;                 // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_FIRED_LOOK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32772;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOK5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK4

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOK6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK5

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32774;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOK7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK6

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32773;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOK8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK7

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32772;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOK9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK8

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32773;                 // frame
    tics: 7;                      // tics
    action: (acp1: nil);          // action (A_FiredRocks), will be set after
    nextstate: S_FIRED_LOOK0;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK9

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOKA;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOK0

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32776;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_LOOKB;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOKA

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32777;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_UnSetInvulnerable), will be set after
    nextstate: S_FIRED_WALK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_LOOKB

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredChase), will be set after
    nextstate: S_FIRED_WALK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_WALK1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredChase), will be set after
    nextstate: S_FIRED_WALK3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_WALK2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredChase), will be set after
    nextstate: S_FIRED_WALK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_WALK3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32771;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_FIRED_WALK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_PAIN1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32778;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_FIRED_ATTACK2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_ATTACK1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredAttack), will be set after
    nextstate: S_FIRED_ATTACK3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_ATTACK2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredAttack), will be set after
    nextstate: S_FIRED_ATTACK4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_ATTACK3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredAttack), will be set after
    nextstate: S_FIRED_WALK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_ATTACK4

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_FIRED_DEATH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_DEATH1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_FIRED_DEATH3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_DEATH2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32779;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_FIRED_DEATH4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_DEATH3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 32779;                 // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_DEATH4

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 12;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_FIRED_XDEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_XDEATH1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 13;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_FIRED_XDEATH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_XDEATH2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FiredSplotch), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_XDEATH3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_FIRED_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_ICE1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 17;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_FIRED_ICE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_ICE2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 15;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_CORPSE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_CORPSE1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 15;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_FIRED_CORPSE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_CORPSE2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 24;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_CORPSE3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 16;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_CORPSE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_CORPSE4

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 16;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_QueueCorpse), will be set after
    nextstate: S_FIRED_CORPSE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_CORPSE5

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 25;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_CORPSE6

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 18;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_RDROP1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDROP1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SmBounce), will be set after
    nextstate: S_FIRED_RDEAD1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD1_1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 18;                    // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD1_2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 19;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_RDROP2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDROP2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SmBounce), will be set after
    nextstate: S_FIRED_RDEAD2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD2_1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 19;                    // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD2_2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 20;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_RDROP3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDROP3

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SmBounce), will be set after
    nextstate: S_FIRED_RDEAD3_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD3_1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 20;                    // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD3_2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 21;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_RDROP4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDROP4

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SmBounce), will be set after
    nextstate: S_FIRED_RDEAD4_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD4_1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 21;                    // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD4_2

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 22;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_RDROP5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDROP5

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 22;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SmBounce), will be set after
    nextstate: S_FIRED_RDEAD5_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD5_1

   (
    sprite: Ord(SPR_FDMN);        // sprite
    frame: 22;                    // frame
    tics: 200;                    // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_RDEAD5_2

   (
    sprite: Ord(SPR_FDMB);        // sprite
    frame: 32768;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_FX6_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_FX6_1

   (
    sprite: Ord(SPR_FDMB);        // sprite
    frame: 32769;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_FX6_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_FX6_2

   (
    sprite: Ord(SPR_FDMB);        // sprite
    frame: 32770;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_FX6_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_FX6_3

   (
    sprite: Ord(SPR_FDMB);        // sprite
    frame: 32771;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIRED_FX6_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_FX6_4

   (
    sprite: Ord(SPR_FDMB);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIRED_FX6_5

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_IceGuyLook), will be set after
    nextstate: S_ICEGUY_LOOK;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_LOOK

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_LOOK;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_DORMANT

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ICEGUY_WALK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WALK1

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_IceGuyChase), will be set after
    nextstate: S_ICEGUY_WALK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WALK2

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ICEGUY_WALK4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WALK3

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_ICEGUY_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WALK4

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_ICEGUY_ATK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_ATK1

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_ICEGUY_ATK3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_ATK2

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 32774;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_IceGuyAttack), will be set after
    nextstate: S_ICEGUY_ATK4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_ATK3

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_ICEGUY_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_ATK4

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_ICEGUY_WALK1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_PAIN1

   (
    sprite: Ord(SPR_ICEY);        // sprite
    frame: 0;                     // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_IceGuyDie), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_DEATH

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_IceGuyMissilePuff), will be set after
    nextstate: S_ICEGUY_FX2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX1

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_IceGuyMissilePuff), will be set after
    nextstate: S_ICEGUY_FX3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX2

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_IceGuyMissilePuff), will be set after
    nextstate: S_ICEGUY_FX1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX3

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_FX_X2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX_X1

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_IceGuyMissileExplode), will be set after
    nextstate: S_ICEGUY_FX_X3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX_X2

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_FX_X4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX_X3

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_FX_X5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX_X4

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32775;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX_X5

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEFX_PUFF2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEFX_PUFF1

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEFX_PUFF3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEFX_PUFF2

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 10;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEFX_PUFF4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEFX_PUFF3

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 11;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEFX_PUFF5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEFX_PUFF4

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 12;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEFX_PUFF5

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32781;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_FX2_2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX2_1

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32782;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_FX2_3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX2_2

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32783;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_FX2_1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_FX2_3

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32784;                 // frame
    tics: 50;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_BIT1

   (
    sprite: Ord(SPR_ICPR);        // sprite
    frame: 32785;                 // frame
    tics: 50;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_BIT2

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_1

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_2

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_3

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_4

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_5

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_6

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_7

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP1_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_8

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP1_9

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 9;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_1

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 10;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_2

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 11;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_3

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 12;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_4

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 13;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_5

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 14;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_6

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 15;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_7

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 16;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_ICEGUY_WISP2_9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_8

   (
    sprite: Ord(SPR_ICWS);        // sprite
    frame: 17;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_ICEGUY_WISP2_9

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER2;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ClassBossHealth), will be set after
    nextstate: S_FIGHTERLOOK;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_FIGHTERLOOK;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTERLOOK

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_FIGHTER_RUN2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_RUN1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_FIGHTER_RUN3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_RUN2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_FIGHTER_RUN4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_RUN3

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_FIGHTER_RUN1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_RUN4

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_FIGHTER_ATK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_ATK1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 5;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FighterAttack), will be set after
    nextstate: S_FIGHTER_RUN1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_ATK2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_PAIN2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_PAIN

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_FIGHTER_RUN1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_PAIN2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_DIE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_FIGHTER_DIE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_DIE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE3

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_DIE5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE4

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_FIGHTER_DIE6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE5

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_DIE7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE6

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 13;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_DIE7

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_FIGHTER_XDIE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE1

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SkullPop), will be set after
    nextstate: S_FIGHTER_XDIE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE2

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_FIGHTER_XDIE4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE3

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_XDIE5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE4

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_XDIE6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE5

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_XDIE7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE6

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_FIGHTER_XDIE8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE7

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 22;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_XDIE8

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 23;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_FIGHTER_ICE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_ICE

   (
    sprite: Ord(SPR_PLAY);        // sprite
    frame: 23;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_FIGHTER_ICE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_FIGHTER_ICE2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC2;         // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ClassBossHealth), will be set after
    nextstate: S_CLERICLOOK;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_CLERICLOOK;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERICLOOK

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_CLERIC_RUN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_RUN1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_CLERIC_RUN3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_RUN2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_CLERIC_RUN4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_RUN3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_CLERIC_RUN1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_RUN4

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_CLERIC_ATK2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_ATK1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 5;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_CLERIC_ATK3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_ATK2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 6;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_ClericAttack), will be set after
    nextstate: S_CLERIC_RUN1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_ATK3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_PAIN2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_PAIN

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_CLERIC_RUN1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_PAIN2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_DIE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_CLERIC_DIE3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_DIE4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_DIE5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE4

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_CLERIC_DIE6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE5

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 13;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_DIE7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE6

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 14;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_DIE8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE7

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 15;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_DIE9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE8

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 16;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_DIE9

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_CLERIC_XDIE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE1

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE2

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_CLERIC_XDIE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE3

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE4

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE5

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 22;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE6

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 23;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE7

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 24;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE8

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 25;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_CLERIC_XDIE10;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE9

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 26;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_XDIE10

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 27;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_CLERIC_ICE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_ICE

   (
    sprite: Ord(SPR_CLER);        // sprite
    frame: 27;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_CLERIC_ICE2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_CLERIC_ICE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE2;           // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_ClassBossHealth), will be set after
    nextstate: S_MAGELOOK;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_MAGELOOK;        // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGELOOK

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_MAGE_RUN2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_RUN1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_MAGE_RUN3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_RUN2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_MAGE_RUN4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_RUN3

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FastChase), will be set after
    nextstate: S_MAGE_RUN1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_RUN4

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 4;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_MAGE_ATK2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_ATK1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 32773;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_MageAttack), will be set after
    nextstate: S_MAGE_RUN1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_ATK2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_PAIN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_PAIN

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_MAGE_RUN1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_PAIN2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_DIE2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 8;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_MAGE_DIE3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 9;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_DIE4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE3

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 10;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_DIE5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE4

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 11;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_MAGE_DIE6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE5

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 12;                    // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_DIE7;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE6

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 13;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_DIE7

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_MAGE_XDIE2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE1

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_XDIE3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE2

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_MAGE_XDIE4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE3

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_XDIE5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE4

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_XDIE6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE5

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_XDIE7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE6

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 21;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_XDIE8;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE7

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 22;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_MAGE_XDIE9;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE8

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 23;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_XDIE9

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 24;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeath), will be set after
    nextstate: S_MAGE_ICE2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_ICE

   (
    sprite: Ord(SPR_MAGE);        // sprite
    frame: 24;                    // frame
    tics: 1;                      // tics
    action: (acp1: nil);          // action (A_FreezeDeathChunks), will be set after
    nextstate: S_MAGE_ICE2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_MAGE_ICE2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_SPAWN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_SPAWN1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcSpinBalls), will be set after
    nextstate: S_SORC_LOOK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_SPAWN2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_SORC_LOOK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_LOOK1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_SORC_WALK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_WALK1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_SORC_WALK3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_WALK2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 2;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_SORC_WALK4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_WALK3

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Chase), will be set after
    nextstate: S_SORC_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_WALK4

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 6;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_PAIN2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_PAIN1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 6;                     // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_SORC_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_PAIN2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_SORC_ATK2_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATK2_1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_SpeedBalls), will be set after
    nextstate: S_SORC_ATK2_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATK2_2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32773;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_SORC_ATK2_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATK2_3

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32772;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_ATTACK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATTACK1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32772;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (A_SpawnFizzle), will be set after
    nextstate: S_SORC_ATTACK3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATTACK2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_SORC_ATTACK2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATTACK3

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_ATTACK5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATTACK4

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBossAttack), will be set after
    nextstate: S_SORC_WALK1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_ATTACK5

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32775;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE1

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32776;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_SORC_DIE3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE2

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32777;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_SORC_DIE4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE3

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32778;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE5;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE4

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32779;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE6;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE5

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32780;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE7;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE6

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32781;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE8;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE7

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32782;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE9;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE8

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32783;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIE0;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE9

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32784;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEA;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIE0

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32785;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEB;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEA

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32786;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEC;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEB

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32787;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIED;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEC

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32788;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_SORC_DIEE;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIED

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32789;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEF;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEE

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32790;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEG;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEF

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32791;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEH;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEG

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32792;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORC_DIEI;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEH

   (
    sprite: Ord(SPR_SORC);        // sprite
    frame: 32793;                 // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORC_DIEI

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_1

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_2

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_3

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_4

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_5

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_6

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_7

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_8

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_0;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_9

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 9;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_A;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_0

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 10;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_B;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_A

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 11;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_C;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_B

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 12;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_D;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_C

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 13;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_E;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 14;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_F;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_E

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 15;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL1_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_F

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SorcBallPop), will be set after
    nextstate: S_SORCBALL1_D2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D1

   (
    sprite: Ord(SPR_SBMP);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BounceCheck), will be set after
    nextstate: S_SORCBALL1_D2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D2

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_SORCBALL1_D6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D5

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL1_D7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D6

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL1_D8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D7

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL1_D9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D8

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL1_D9

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_1

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_2

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_3

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_4

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_5

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_6

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_7

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_8

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_0;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_9

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 9;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_A;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_0

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 10;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_B;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_A

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 11;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_C;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_B

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 12;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_D;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_C

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 13;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_E;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 14;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_F;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_E

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 15;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL2_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_F

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SorcBallPop), will be set after
    nextstate: S_SORCBALL2_D2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D1

   (
    sprite: Ord(SPR_SBMB);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BounceCheck), will be set after
    nextstate: S_SORCBALL2_D2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D2

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_SORCBALL2_D6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D5

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL2_D7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D6

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL2_D8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D7

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL2_D9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D8

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL2_D9

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_1

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_3;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_2

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_4;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_3

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 3;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_5;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_4

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 4;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_6;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_5

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 5;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_7;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_6

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 6;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_8;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_7

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 7;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_9;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_8

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 8;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_0;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_9

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 9;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_A;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_0

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 10;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_B;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_A

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 11;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_C;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_B

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 12;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_D;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_C

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 13;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_E;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 14;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_F;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_E

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 15;                    // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcBallOrbit), will be set after
    nextstate: S_SORCBALL3_1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_F

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_SorcBallPop), will be set after
    nextstate: S_SORCBALL3_D2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D1

   (
    sprite: Ord(SPR_SBMG);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BounceCheck), will be set after
    nextstate: S_SORCBALL3_D2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D2

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_SORCBALL3_D6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D5

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL3_D7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D6

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 5;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL3_D8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D7

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 6;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCBALL3_D9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D8

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 7;                     // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCBALL3_D9

   (
    sprite: Ord(SPR_SBS1);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX1_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_1

   (
    sprite: Ord(SPR_SBS1);        // sprite
    frame: 32769;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SorcFX1Seek), will be set after
    nextstate: S_SORCFX1_3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_2

   (
    sprite: Ord(SPR_SBS1);        // sprite
    frame: 32770;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SorcFX1Seek), will be set after
    nextstate: S_SORCFX1_4;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_3

   (
    sprite: Ord(SPR_SBS1);        // sprite
    frame: 32771;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SorcFX1Seek), will be set after
    nextstate: S_SORCFX1_1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_4

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32786;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_SORCFX1_D2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_D1

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32786;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX1_D3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_D2

   (
    sprite: Ord(SPR_FHFX);        // sprite
    frame: 32786;                 // frame
    tics: 6;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX1_D3

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32768;                 // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Split), will be set after
    nextstate: S_SORCFX2_SPLIT1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_SPLIT1

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT1

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT2

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT3

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32771;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT4

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT5

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT7;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT6

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT8;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT7

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT9;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT8

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32776;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT0;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT9

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32777;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBITA;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBIT0

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32778;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBITB;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBITA

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32779;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBITC;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBITB

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32780;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBITD;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBITC

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32781;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBITE;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBITD

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32782;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBITF;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBITE

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 32783;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX2Orbit), will be set after
    nextstate: S_SORCFX2_ORBIT1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2_ORBITF

   (
    sprite: Ord(SPR_SBS2);        // sprite
    frame: 0;                     // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX2T1

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_1

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_2

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_3

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHA;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPH1

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 15;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_SorcererBishopEntry), will be set after
    nextstate: S_BISHMORPHB;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHA

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 14;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHC;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHB

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 13;                    // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHD;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHC

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 12;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHE;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHD

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 11;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHF;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHE

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 10;                    // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHG;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHF

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 9;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHH;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHG

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 8;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHI;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHH

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BISHMORPHJ;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHI

   (
    sprite: Ord(SPR_BISH);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_SpawnBishop), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BISHMORPHJ

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_EXP2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_EXP1

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 4;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_EXP3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_EXP2

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 5;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_EXP4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_EXP3

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 6;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX3_EXP5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_EXP4

   (
    sprite: Ord(SPR_SBS3);        // sprite
    frame: 7;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX3_EXP5

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32768;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX4Check), will be set after
    nextstate: S_SORCFX4_2;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_1

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32769;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX4Check), will be set after
    nextstate: S_SORCFX4_3;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_2

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32770;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_SorcFX4Check), will be set after
    nextstate: S_SORCFX4_1;       // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_3

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32771;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX4_D2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_D1

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_Explode), will be set after
    nextstate: S_SORCFX4_D3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_D2

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32773;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX4_D4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_D3

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32774;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCFX4_D5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_D4

   (
    sprite: Ord(SPR_SBS4);        // sprite
    frame: 32775;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCFX4_D5

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32768;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCSPARK2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK1

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32769;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCSPARK3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK2

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32770;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCSPARK4;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK3

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32771;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCSPARK5;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK4

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCSPARK6;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK5

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32773;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SORCSPARK7;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK6

   (
    sprite: Ord(SPR_SBFX);        // sprite
    frame: 32774;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SORCSPARK7

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 0;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT1

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 1;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT2

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 2;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT3

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 3;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT4

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 4;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT5

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 5;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT6

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 6;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT7

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 7;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_BLASTEFFECT9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT8

   (
    sprite: Ord(SPR_RADE);        // sprite
    frame: 8;                     // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BLASTEFFECT9

   (
    sprite: Ord(SPR_WATR);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_WATERDRIP1;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_WATERDRIP1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Look), will be set after
    nextstate: S_KORAX_LOOK1;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_LOOK1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxStep2), will be set after
    nextstate: S_KORAX_CHASE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE2

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE3

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 0;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE4

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxStep), will be set after
    nextstate: S_KORAX_CHASE6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE5

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE6

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE7

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 1;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE8

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxStep2), will be set after
    nextstate: S_KORAX_CHASE0;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE9

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASEA;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASE0

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASEB;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASEA

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 2;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASEC;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASEB

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxStep), will be set after
    nextstate: S_KORAX_CHASED;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASEC

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASEE;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASED

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASEF;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASEE

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 3;                     // frame
    tics: 3;                      // tics
    action: (acp1: nil);          // action (A_KoraxChase), will be set after
    nextstate: S_KORAX_CHASE1;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_CHASEF

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Pain), will be set after
    nextstate: S_KORAX_PAIN2;     // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_PAIN1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_CHASE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_PAIN2

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32772;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_KORAX_ATTACK2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_ATTACK1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_KoraxDecide), will be set after
    nextstate: S_KORAX_ATTACK2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_ATTACK2

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32772;                 // frame
    tics: 4;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_KORAX_MISSILE2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_MISSILE1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32773;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (A_KoraxMissile), will be set after
    nextstate: S_KORAX_MISSILE3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_MISSILE2

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32772;                 // frame
    tics: 8;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_CHASE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_MISSILE3

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_KORAX_COMMAND2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_COMMAND1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32790;                 // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_KORAX_COMMAND3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_COMMAND2

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32774;                 // frame
    tics: 15;                     // tics
    action: (acp1: nil);          // action (A_KoraxCommand), will be set after
    nextstate: S_KORAX_COMMAND4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_COMMAND3

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32790;                 // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_COMMAND5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_COMMAND4

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 32772;                 // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_CHASE2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_COMMAND5

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 8;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH2;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH1

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 9;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_FaceTarget), will be set after
    nextstate: S_KORAX_DEATH3;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH2

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 10;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_Scream), will be set after
    nextstate: S_KORAX_DEATH4;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH3

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 11;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH5;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH4

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 12;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH6;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH5

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 13;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH7;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH6

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 14;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH8;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH7

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 15;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH9;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH8

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 16;                    // frame
    tics: 10;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATH0;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH9

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 17;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_KoraxBonePop), will be set after
    nextstate: S_KORAX_DEATHA;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATH0

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 18;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_NoBlocking), will be set after
    nextstate: S_KORAX_DEATHB;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATHA

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 19;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATHC;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATHB

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 20;                    // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KORAX_DEATHD;    // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATHC

   (
    sprite: Ord(SPR_KORX);        // sprite
    frame: 21;                    // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KORAX_DEATHD

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 0;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_KSpiritRoam), will be set after
    nextstate: S_KSPIRIT_ROAM2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_ROAM1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 1;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (A_KSpiritRoam), will be set after
    nextstate: S_KSPIRIT_ROAM1;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_ROAM2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 3;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KSPIRIT_DEATH2;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_DEATH1

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 4;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KSPIRIT_DEATH3;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_DEATH2

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 5;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KSPIRIT_DEATH4;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_DEATH3

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 6;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KSPIRIT_DEATH5;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_DEATH4

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 7;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KSPIRIT_DEATH6;   // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_DEATH5

   (
    sprite: Ord(SPR_SPIR);        // sprite
    frame: 8;                     // frame
    tics: 5;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KSPIRIT_DEATH6

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32776;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_KBOLT2;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT1

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32777;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_KBoltRaise), will be set after
    nextstate: S_KBOLT3;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT2

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32776;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_KBolt), will be set after
    nextstate: S_KBOLT4;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT3

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32777;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_KBolt), will be set after
    nextstate: S_KBOLT5;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT4

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32778;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_KBolt), will be set after
    nextstate: S_KBOLT6;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT5

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32779;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_KBolt), will be set after
    nextstate: S_KBOLT7;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT6

   (
    sprite: Ord(SPR_MLFX);        // sprite
    frame: 32780;                 // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_KBolt), will be set after
    nextstate: S_KBOLT3;          // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_KBOLT7

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_SPAWNBATS2;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPAWNBATS1

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BatSpawnInit), will be set after
    nextstate: S_SPAWNBATS3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPAWNBATS2

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BatSpawn), will be set after
    nextstate: S_SPAWNBATS3;      // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPAWNBATS3

   (
    sprite: Ord(SPR_MAN1);        // sprite
    frame: 0;                     // frame
    tics: -1;                     // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_SPAWNBATS_OFF

   (
    sprite: Ord(SPR_ABAT);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BatMove), will be set after
    nextstate: S_BAT2;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BAT1

   (
    sprite: Ord(SPR_ABAT);        // sprite
    frame: 1;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BatMove), will be set after
    nextstate: S_BAT3;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BAT2

   (
    sprite: Ord(SPR_ABAT);        // sprite
    frame: 2;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (A_BatMove), will be set after
    nextstate: S_BAT1;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   ), //S_BAT3

   (
    sprite: Ord(SPR_ABAT);        // sprite
    frame: 0;                     // frame
    tics: 2;                      // tics
    action: (acp1: nil);          // action (NULL), will be set after
    nextstate: S_NULL;            // nextstate
    misc1: 0;                     // misc1
    misc2: 0;                     // misc2
    flags_ex: 0;                  // flags_ex
   )  //S_BAT_DEATH
   
  );

const // Doom Original Sprite Names
  DO_sprnames: array[0..Ord(DO_NUMSPRITES)] of string[4] = (
    'MAN1', 'ACLO', 'TLGL', 'FBL1', 'XPL1', 'ARRW', 'DART', 'RIPP', 'CFCF', 'BLAD',
    'SHRD', 'FFSM', 'FFLG', 'PTN1', 'PTN2', 'SOAR', 'INVU', 'SUMN', 'TSPK', 'TELO',
    'TRNG', 'ROCK', 'FOGS', 'FOGM', 'FOGL', 'SGSA', 'SGSB', 'PORK', 'EGGM', 'FHFX',
    'SPHL', 'STWN', 'GMPD', 'ASKU', 'ABGM', 'AGMR', 'AGMG', 'AGG2', 'AGMB', 'AGB2',
    'ABK1', 'ABK2', 'ASK2', 'AFWP', 'ACWP', 'AMWP', 'AGER', 'AGR2', 'AGR3', 'AGR4',
    'TRCH', 'PSBG', 'ATLP', 'THRW', 'SPED', 'BMAN', 'BRAC', 'BLST', 'HRAD', 'SPSH',
    'LVAS', 'SLDG', 'STTW', 'RCK1', 'RCK2', 'RCK3', 'RCK4', 'CDLR', 'TRE1', 'TRDT',
    'TRE2', 'TRE3', 'STM1', 'STM2', 'STM3', 'STM4', 'MSH1', 'MSH2', 'MSH3', 'MSH4',
    'MSH5', 'MSH6', 'MSH7', 'MSH8', 'SGMP', 'SGM1', 'SGM2', 'SGM3', 'SLC1', 'SLC2',
    'SLC3', 'MSS1', 'MSS2', 'SWMV', 'CPS1', 'CPS2', 'TMS1', 'TMS2', 'TMS3', 'TMS4',
    'TMS5', 'TMS6', 'TMS7', 'CPS3', 'STT2', 'STT3', 'STT4', 'STT5', 'GAR1', 'GAR2',
    'GAR3', 'GAR4', 'GAR5', 'GAR6', 'GAR7', 'GAR8', 'GAR9', 'BNR1', 'TRE4', 'TRE5',
    'TRE6', 'TRE7', 'LOGG', 'ICT1', 'ICT2', 'ICT3', 'ICT4', 'ICM1', 'ICM2', 'ICM3',
    'ICM4', 'RKBL', 'RKBS', 'RKBK', 'RBL1', 'RBL2', 'RBL3', 'VASE', 'POT1', 'POT2',
    'POT3', 'PBIT', 'CPS4', 'CPS5', 'CPS6', 'CPB1', 'CPB2', 'CPB3', 'CPB4', 'BDRP',
    'BDSH', 'BDPL', 'CNDL', 'LEF1', 'LEF3', 'LEF2', 'TWTR', 'WLTR', 'BARL', 'SHB1',
    'SHB2', 'BCKT', 'SHRM', 'FBUL', 'FSKL', 'BRTR', 'SUIT', 'BBLL', 'CAND', 'IRON',
    'XMAS', 'CDRN', 'CHNS', 'TST1', 'TST2', 'TST3', 'TST4', 'TST5', 'TST6', 'TST7',
    'TST8', 'TST9', 'TST0', 'TELE', 'TSMK', 'FPCH', 'WFAX', 'FAXE', 'WFHM', 'FHMR',
    'FSRD', 'FSFX', 'CMCE', 'WCSS', 'CSSF', 'WCFM', 'CFLM', 'CFFX', 'CHLY', 'SPIR',
    'MWND', 'WMLG', 'MLNG', 'MLFX', 'MLF2', 'MSTF', 'MSP1', 'MSP2', 'WFR1', 'WFR2',
    'WFR3', 'WCH1', 'WCH2', 'WCH3', 'WMS1', 'WMS2', 'WMS3', 'WPIG', 'WMCS', 'CONE',
    'SHEX', 'BLOD', 'GIBS', 'PLAY', 'FDTH', 'BSKL', 'ICEC', 'CLER', 'MAGE', 'PIGY',
    'CENT', 'CTXD', 'CTFX', 'CTDP', 'DEMN', 'DEMA', 'DEMB', 'DEMC', 'DEMD', 'DEME',
    'DMFX', 'DEM2', 'DMBA', 'DMBB', 'DMBC', 'DMBD', 'DMBE', 'D2FX', 'WRTH', 'WRT2',
    'WRBL', 'MNTR', 'FX12', 'FX13', 'MNSM', 'SSPT', 'SSDV', 'SSXD', 'SSFX', 'BISH',
    'BPFX', 'DRAG', 'DRFX', 'ARM1', 'ARM2', 'ARM3', 'ARM4', 'MAN2', 'MAN3', 'KEY1',
    'KEY2', 'KEY3', 'KEY4', 'KEY5', 'KEY6', 'KEY7', 'KEY8', 'KEY9', 'KEYA', 'KEYB',
    'ETTN', 'ETTB', 'FDMN', 'FDMB', 'ICEY', 'ICPR', 'ICWS', 'SORC', 'SBMP', 'SBS4',
    'SBMB', 'SBS3', 'SBMG', 'SBS1', 'SBS2', 'SBFX', 'RADE', 'WATR', 'KORX', 'ABAT',
    'TNT1', ''
  );

const // Hexen Original mobjinfo
  DO_mobjinfo: array[0..Ord(DO_NUMMOBJTYPES) - 1] of mobjinfo_t = (
  (    // MT_MAPSPOT
    name: 'Map Spot';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9001;                                              // doomednum
    spawnstate: Ord(S_MAPSPOT);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR or MF_NOGRAVITY;          // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MAPSPOTGRAVITY
    name: 'Gravity Map Spot';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9013;                                              // doomednum
    spawnstate: Ord(S_MAPSPOT);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: MF2_DONTDRAW;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREBALL1
    name: 'MT_FIREBALL1';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIREBALL1_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIREBALL1_X1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_FIREBALL);                                // deathsound
    speed: 2 * FRACUNIT;                                          // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARROW
    name: 'MT_ARROW';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ARROW_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ARROW_X1);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 6 * FRACUNIT;                                          // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DART
    name: 'MT_DART';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DART_1);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DART_X1);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 6 * FRACUNIT;                                          // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 2;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POISONDART
    name: 'MT_POISONDART';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_POISONDART_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_POISONDART_X1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 6 * FRACUNIT;                                          // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 2;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_RIPPERBALL
    name: 'MT_RIPPERBALL';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_RIPPERBALL_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_RIPPERBALL_X1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 6 * FRACUNIT;                                          // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 2;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_RIP;                            // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PROJECTILE_BLADE
    name: 'MT_PROJECTILE_BLADE';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_PRJ_BLADE1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_PRJ_BLADE_X1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 6 * FRACUNIT;                                          // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 3;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICESHARD
    name: 'MT_ICESHARD';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICESHARD1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SHARDFXE1_1);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_MAGE_SHARDS_EXPLODE);                     // deathsound
    speed: 25 * FRACUNIT;                                         // speed
    radius: 13 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_ICEDAMAGE;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FLAME_SMALL_TEMP
    name: 'Small Timed Flame';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10500;                                             // doomednum
    spawnstate: Ord(S_FLAME_TSMALL1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FLAME_LARGE_TEMP
    name: 'Large Timed Flame';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10502;                                             // doomednum
    spawnstate: Ord(S_FLAME_TLARGE1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FLAME_SMALL
    name: 'Small Flame';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10501;                                             // doomednum
    spawnstate: Ord(S_FLAME_SMALL1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: MF2_NOTELEPORT or MF2_DONTDRAW;                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FLAME_LARGE
    name: 'Large Flame';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10503;                                             // doomednum
    spawnstate: Ord(S_FLAME_LARGE1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: MF2_NOTELEPORT or MF2_DONTDRAW;                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HEALINGBOTTLE
    name: 'Crystal Vial';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 81;                                                // doomednum
    spawnstate: Ord(S_ITEM_PTN1_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HEALTHFLASK
    name: 'Quartz Flask';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 82;                                                // doomednum
    spawnstate: Ord(S_ARTI_PTN2_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIFLY
    name: 'Wings Of Wrath';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 83;                                                // doomednum
    spawnstate: Ord(S_ARTI_SOAR1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIINVULNERABILITY
    name: 'Icon Of The Defender';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 84;                                                // doomednum
    spawnstate: Ord(S_ARTI_INVU1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SUMMONMAULATOR
    name: 'Dark Servant';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 86;                                                // doomednum
    spawnstate: Ord(S_ARTI_SUMMON);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SUMMON_FX
    name: 'MT_SUMMON_FX';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SUMMON_FX1_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SUMMON_FX2_1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 20 * FRACUNIT;                                         // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_DROPOFF or MF_NOBLOCKMAP;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_THRUSTFLOOR_UP
    name: 'Spike Up';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10091;                                             // doomednum
    spawnstate: Ord(S_THRUSTINIT2_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 128 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_THRUSTFLOOR_DOWN
    name: 'Spike Down';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10090;                                             // doomednum
    spawnstate: Ord(S_THRUSTINIT1_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 128 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP or MF2_DONTDRAW;      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELEPORTOTHER
    name: 'Banishment Device';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10040;                                             // doomednum
    spawnstate: Ord(S_ARTI_TELOTHER1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELOTHER_FX1
    name: 'MT_TELOTHER_FX1';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_TELO_FX1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_TELO_FX9);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 20 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 10001;                                                // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY or MF_NOBLOCKMAP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELOTHER_FX2
    name: 'MT_TELOTHER_FX2';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_TELO_FX2_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_TELO_FX9);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 16 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 10001;                                                // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY or MF_NOBLOCKMAP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELOTHER_FX3
    name: 'MT_TELOTHER_FX3';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_TELO_FX3_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_TELO_FX9);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 16 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 10001;                                                // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY or MF_NOBLOCKMAP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELOTHER_FX4
    name: 'MT_TELOTHER_FX4';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_TELO_FX4_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_TELO_FX9);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 16 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 10001;                                                // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY or MF_NOBLOCKMAP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELOTHER_FX5
    name: 'MT_TELOTHER_FX5';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_TELO_FX5_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_TELO_FX9);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 16 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 10001;                                                // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY or MF_NOBLOCKMAP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRT1
    name: 'MT_DIRT1';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRT1_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DIRT1_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRT2
    name: 'MT_DIRT2';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRT2_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DIRT2_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRT3
    name: 'MT_DIRT3';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRT3_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DIRT3_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRT4
    name: 'MT_DIRT4';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRT4_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DIRT4_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRT5
    name: 'MT_DIRT5';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRT5_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DIRT5_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRT6
    name: 'MT_DIRT6';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRT6_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DIRT6_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DIRTCLUMP
    name: 'MT_DIRTCLUMP';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DIRTCLUMP1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ROCK1
    name: 'MT_ROCK1';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ROCK1_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ROCK1_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ROCK2
    name: 'MT_ROCK2';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ROCK2_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ROCK2_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ROCK3
    name: 'MT_ROCK3';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ROCK3_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ROCK3_D);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FOGSPAWNER
    name: 'For Spawner';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10000;                                             // doomednum
    spawnstate: Ord(S_SPAWNFOG1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR;                          // flags
    flags2: MF2_DONTDRAW or MF2_FLOATBOB;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FOGPATCHS
    name: 'Small Fog Patch';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10001;                                             // doomednum
    spawnstate: Ord(S_FOGPATCHS1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FOGPATCHS0);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: FRACUNIT;                                              // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_FLOAT or MF_NOGRAVITY or MF_SHADOW or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FOGPATCHM
    name: 'Medium Fog Patch';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10002;                                             // doomednum
    spawnstate: Ord(S_FOGPATCHM1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FOGPATCHM0);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: FRACUNIT;                                              // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_FLOAT or MF_NOGRAVITY or MF_SHADOW or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FOGPATCHL
    name: 'Large Fog Patch';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10003;                                             // doomednum
    spawnstate: Ord(S_FOGPATCHL1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FOGPATCHL0);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: FRACUNIT;                                              // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_FLOAT or MF_NOGRAVITY or MF_SHADOW or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_QUAKE_FOCUS
    name: 'MT_QUAKE_FOCUS';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_QUAKE_ACTIVE1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR;                          // flags
    flags2: MF2_DONTDRAW;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD1
    name: 'MT_SGSHARD1';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD1_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD1_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD2
    name: 'MT_SGSHARD2';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD2_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD2_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD3
    name: 'MT_SGSHARD3';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD3_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD3_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD4
    name: 'MT_SGSHARD4';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD4_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD4_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD5
    name: 'MT_SGSHARD5';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD5_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD5_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD6
    name: 'MT_SGSHARD6';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD6_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD6_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD7
    name: 'MT_SGSHARD7';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD7_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD7_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD8
    name: 'MT_SGSHARD8';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD8_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD8_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD9
    name: 'MT_SGSHARD9';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD9_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD9_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SGSHARD0
    name: 'MT_SGSHARD0';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SGSHARD0_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SGSHARD0_D);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIEGG
    name: 'Porkalator';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 30;                                                // doomednum
    spawnstate: Ord(S_ARTI_EGGC1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_EGGFX
    name: 'MT_EGGFX';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_EGGFX1);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(0);                                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_EGGFXI1_1);                                 // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(0);                                           // deathsound
    speed: 18 * FRACUNIT;                                         // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTISUPERHEAL
    name: 'Mystic Urn';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 32;                                                // doomednum
    spawnstate: Ord(S_ARTI_SPHL1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZWINGEDSTATUENOSKULL
    name: 'Yorick''s Statue';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9011;                                              // doomednum
    spawnstate: Ord(S_ZWINGEDSTATUENOSKULL);                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZGEMPEDESTAL
    name: 'Pedestal Of D''Sparil';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9012;                                              // doomednum
    spawnstate: Ord(S_ZGEMPEDESTAL1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 40 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZSKULL
    name: 'Yorick''s Skull';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9002;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZSKULL);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEMBIG
    name: 'Heart Of D''Sparil';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9003;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEMBIG);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEMRED
    name: 'Ruby Planet';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9004;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEMRED);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEMGREEN1
    name: 'Emerald Planet 1';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9005;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEMGREEN1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEMGREEN2
    name: 'Emerald Planet 2';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9009;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEMGREEN2);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEMBLUE1
    name: 'Sapphire Planet 1';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9006;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEMBLUE1);                          // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEMBLUE2
    name: 'Sapphire Planet 2';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9010;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEMBLUE2);                          // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZBOOK1
    name: 'Daemon Codex';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9007;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZBOOK1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZBOOK2
    name: 'Liber Obscura';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9008;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZBOOK2);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZSKULL2
    name: 'MT_ARTIPUZZSKULL2';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9014;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZSKULL2);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZFWEAPON
    name: 'MT_ARTIPUZZFWEAPON';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9015;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZFWEAPON);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZCWEAPON
    name: 'MT_ARTIPUZZCWEAPON';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9016;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZCWEAPON);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZMWEAPON
    name: 'MT_ARTIPUZZMWEAPON';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9017;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZMWEAPON);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEAR
    name: 'Steel Clock Gear';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9018;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEAR_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEAR2
    name: 'Bronze Clock Gear';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9019;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEAR2_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEAR3
    name: 'Steel and Bronze Clock Gear';                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9020;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEAR3_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPUZZGEAR4
    name: 'Bronze and Steel Clock Gear';                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9021;                                              // doomednum
    spawnstate: Ord(S_ARTIPUZZGEAR4_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTITORCH
    name: 'Torch';                                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 33;                                                // doomednum
    spawnstate: Ord(S_ARTI_TRCH1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREBOMB
    name: 'MT_FIREBOMB';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIREBOMB1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_FLECHETTE_EXPLODE);                       // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOGRAVITY or MF_ALTSHADOW;                          // flags
    flags2: MF2_FIREDAMAGE;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTITELEPORT
    name: 'Chaos Device';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 36;                                                // doomednum
    spawnstate: Ord(S_ARTI_ATLP1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARTIPOISONBAG
    name: 'Flechette';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8000;                                              // doomednum
    spawnstate: Ord(S_ARTI_PSBG1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POISONBAG
    name: 'MT_POISONBAG';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_POISONBAG1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOGRAVITY or MF_NOBLOCKMAP;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POISONCLOUD
    name: 'MT_POISONCLOUD';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_POISONCLOUD1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_POISONSHROOM_DEATH);                      // deathsound
    speed: 0;                                                     // speed
    radius: 1;                                                    // radius
    height: 1;                                                    // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOGRAVITY or MF_NOBLOCKMAP or MF_SHADOW or MF_NOCLIP or MF_DROPOFF;// flags
    flags2: MF2_NODMGTHRUST;                                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_THROWINGBOMB
    name: 'MT_THROWINGBOMB';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_THROWINGBOMB1);                             // spawnstate
    spawnhealth: 48;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_FLECHETTE_BOUNCE);                          // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_THROWINGBOMB_X1);                           // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_FLECHETTE_EXPLODE);                       // deathsound
    speed: 12 * FRACUNIT;                                         // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_FLOORBOUNCE or MF2_FIREDAMAGE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SPEEDBOOTS
    name: 'Boots Of Speed';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8002;                                              // doomednum
    spawnstate: Ord(S_ARTI_BOOTS1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BOOSTMANA
    name: 'Crater Of Might';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8003;                                              // doomednum
    spawnstate: Ord(S_ARTI_MANA);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BOOSTARMOR
    name: 'Dragonskin Bracers';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8041;                                              // doomednum
    spawnstate: Ord(S_ARTI_ARMOR1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BLASTRADIUS
    name: 'Disc Of Repulsion';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10110;                                             // doomednum
    spawnstate: Ord(S_ARTI_BLAST1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HEALRADIUS
    name: 'Mystic Ambit Incant';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10120;                                             // doomednum
    spawnstate: Ord(S_ARTI_HEALRAD1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SPLASH
    name: 'MT_SPLASH';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SPLASH1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SPLASHX);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF;             // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV or MF2_CANNOTPUSH;       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SPLASHBASE
    name: 'MT_SPLASHBASE';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SPLASHBASE1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LAVASPLASH
    name: 'MT_LAVASPLASH';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LAVASPLASH1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LAVASMOKE
    name: 'MT_LAVASMOKE';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LAVASMOKE1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SLUDGECHUNK
    name: 'MT_SLUDGECHUNK';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SLUDGECHUNK1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SLUDGECHUNKX);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF;             // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV or MF2_CANNOTPUSH;       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SLUDGESPLASH
    name: 'MT_SLUDGESPLASH';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SLUDGESPLASH1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC0
    name: 'Winged Statue';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 5;                                                 // doomednum
    spawnstate: Ord(S_ZWINGEDSTATUE1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC1
    name: 'Tiny Mossy Rock';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 6;                                                 // doomednum
    spawnstate: Ord(S_ZROCK1_1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC2
    name: 'Small Mossy Rock';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 7;                                                 // doomednum
    spawnstate: Ord(S_ZROCK2_1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC3
    name: 'Medium Mossy Rock';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9;                                                 // doomednum
    spawnstate: Ord(S_ZROCK3_1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC4
    name: 'Big Mossy Rock';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 15;                                                // doomednum
    spawnstate: Ord(S_ZROCK4_1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC5
    name: 'Lit Chandelier';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 17;                                                // doomednum
    spawnstate: Ord(S_ZCHANDELIER1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 60 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPAWNCEILING or MF_NOGRAVITY;                       // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC6
    name: 'Unlit Chandelier';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8063;                                              // doomednum
    spawnstate: Ord(S_ZCHANDELIER_U);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 60 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPAWNCEILING or MF_NOGRAVITY;                       // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC7
    name: 'Dead Tree';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 24;                                                // doomednum
    spawnstate: Ord(S_ZTREEDEAD1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 96 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC8
    name: 'Destructable Dead Tree';                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 25;                                                // doomednum
    spawnstate: Ord(S_ZTREE);                                     // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 128 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TREEDESTRUCTIBLE
    name: 'Leafless Tree';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8062;                                              // doomednum
    spawnstate: Ord(S_ZTREEDESTRUCTIBLE1);                        // spawnstate
    spawnhealth: 70;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZTREEDES_D1);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_TREE_BREAK);                              // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 180 * FRACUNIT;                                       // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC9
    name: 'Mossy Tree 1';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 26;                                                // doomednum
    spawnstate: Ord(S_ZTREESWAMP182_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 150 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC10
    name: 'Mossy Tree 2';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 27;                                                // doomednum
    spawnstate: Ord(S_ZTREESWAMP172_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 120 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC11
    name: 'Burned Tree Stump';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 28;                                                // doomednum
    spawnstate: Ord(S_ZSTUMPBURNED1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC12
    name: 'Bare Tree Stump';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 29;                                                // doomednum
    spawnstate: Ord(S_ZSTUMPBARE1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC13
    name: 'Tree Stump 1';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 37;                                                // doomednum
    spawnstate: Ord(S_ZSTUMPSWAMP1_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC14
    name: 'Tree Stump 2';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 38;                                                // doomednum
    spawnstate: Ord(S_ZSTUMPSWAMP2_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC15
    name: 'Large Mushroom 1';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 39;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMLARGE1_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC16
    name: 'Large Mushroom 2';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 40;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMLARGE2_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC17
    name: 'Medium Mushroom';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 41;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMLARGE3_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC18
    name: 'Small Mushroom 1';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 42;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMSMALL1_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC19
    name: 'Small Mushroom 2';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 44;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMSMALL2_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC20
    name: 'Small Mushroom 3';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 45;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMSMALL3_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC21
    name: 'Small Mushroom 4';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 46;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMSMALL4_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC22
    name: 'Small Mushroom 5';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 47;                                                // doomednum
    spawnstate: Ord(S_ZSHROOMSMALL5_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC23
    name: 'Pillar Stalagmite';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 48;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITEPILLAR1);                        // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 138 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC24
    name: 'Large Stalagmite';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 49;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITELARGE1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 48 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC25
    name: 'Medium Stalagmite';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 50;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITEMEDIUM1);                        // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 40 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC26
    name: 'Small Stalagmite';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 51;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITESMALL1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 36 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC27
    name: ' Large Stalactite';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 52;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITELARGE1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 66 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC28
    name: 'Medium Stalactite';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 56;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITEMEDIUM1);                        // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 50 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC29
    name: 'Small Stalactite';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 57;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITESMALL1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 40 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC30
    name: 'Hanging Moss 1';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 58;                                                // doomednum
    spawnstate: Ord(S_ZMOSSCEILING1_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPAWNCEILING or MF_NOGRAVITY;                       // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC31
    name: 'Hanging Moss 2';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 59;                                                // doomednum
    spawnstate: Ord(S_ZMOSSCEILING2_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 24 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPAWNCEILING or MF_NOGRAVITY;                       // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC32
    name: 'Mossy Dead Tree';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 60;                                                // doomednum
    spawnstate: Ord(S_ZSWAMPVINE1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 52 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC33
    name: 'Impaled Corpse';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 61;                                                // doomednum
    spawnstate: Ord(S_ZCORPSEKABOB1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 92 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC34
    name: 'Sleeping Corpse';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 62;                                                // doomednum
    spawnstate: Ord(S_ZCORPSESLEEPING1);                          // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC35
    name: 'RIP Tombstone';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 63;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONERIP1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 46 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC36
    name: 'Shane Tombstone';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 64;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONESHANE1);                          // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 46 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC37
    name: 'Slimy Tombstone';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 65;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONEBIGCROSS1);                       // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 46 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC38
    name: 'Brian R Tombstone';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 66;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONEBRIANR1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 52 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC39
    name: 'Cross Circle Tombstone';                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 67;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONECROSSCIRCLE1);                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 52 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC40
    name: 'Small Cross Tombstone';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 68;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONESMALLCROSS1);                     // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 46 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC41
    name: 'Brian P Tombstone';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 69;                                                // doomednum
    spawnstate: Ord(S_ZTOMBSTONEBRIANP1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 46 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC42
    name: 'Hanging Corpse';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 71;                                                // doomednum
    spawnstate: Ord(S_CORPSEHANGING_1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 75 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC43
    name: 'Tall Stone Gargoyle';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 72;                                                // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEGREENTALL_1);                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC44
    name: 'Tall Ice Gargoyle';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 73;                                                // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEBLUETALL_1);                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC45
    name: 'Short Stone Gargoyle';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 74;                                                // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEGREENSHORT_1);               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC46
    name: 'Short Ice Gargoyle';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 76;                                                // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEBLUESHORT_1);                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC47
    name: 'Tall Rusty Gargoyle';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8044;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLESTRIPETALL_1);               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC48
    name: 'Tall Dark Lava Gargoyle';                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8045;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEDARKREDTALL_1);              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC49
    name: 'Tall Lava Gargoyle';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8046;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEREDTALL_1);                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC50
    name: 'Tall Bronze Gargoyle';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8047;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLETANTALL_1);                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC51
    name: 'Tall Steel Gargoyle';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8048;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLERUSTTALL_1);                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 108 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC52
    name: 'Short Dark Lava Gargoyle';                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8049;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEDARKREDSHORT_1);             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC53
    name: 'Short Lava Gargoyle';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8050;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLEREDSHORT_1);                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC54
    name: 'Short Bronze Gargoyle';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8051;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLETANSHORT_1);                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC55
    name: 'Short Steel Gargoyle';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8052;                                              // doomednum
    spawnstate: Ord(S_ZSTATUEGARGOYLERUSTSHORT_1);                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 62 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC56
    name: 'Battle Rag Banner';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 77;                                                // doomednum
    spawnstate: Ord(S_ZBANNERTATTERED_1);                         // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 120 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC57
    name: 'Tall Tree 1';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 78;                                                // doomednum
    spawnstate: Ord(S_ZTREELARGE1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZTREELARGE1);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 180 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC58
    name: 'Tall Tree 2';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 79;                                                // doomednum
    spawnstate: Ord(S_ZTREELARGE2);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZTREELARGE2);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 180 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC59
    name: 'Gnarled Tree 1';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 80;                                                // doomednum
    spawnstate: Ord(S_ZTREEGNARLED1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 22 * FRACUNIT;                                        // radius
    height: 100 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC60
    name: 'Gnarled Tree 2';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 87;                                                // doomednum
    spawnstate: Ord(S_ZTREEGNARLED2);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 22 * FRACUNIT;                                        // radius
    height: 100 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC61
    name: 'Log';                                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 88;                                                // doomednum
    spawnstate: Ord(S_ZLOG);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 25 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC62
    name: 'Large Icicle';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 89;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITEICELARGE);                       // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 66 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC63
    name: 'Medium Icicle';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 90;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITEICEMEDIUM);                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 50 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC64
    name: 'Small Icicle';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 91;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITEICESMALL);                       // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC65
    name: 'Tiny Icicle';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 92;                                                // doomednum
    spawnstate: Ord(S_ZSTALACTITEICETINY);                        // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC66
    name: 'Large Ice Spike';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 93;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITEICELARGE);                       // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 66 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC67
    name: 'Medium Ice Spike';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 94;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITEICEMEDIUM);                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 50 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC68
    name: 'Small Ice Spike';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 95;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITEICESMALL);                       // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC69
    name: 'Tiny Ice Spike';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 96;                                                // doomednum
    spawnstate: Ord(S_ZSTALAGMITEICETINY);                        // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC70
    name: 'Big Brown Rock';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 97;                                                // doomednum
    spawnstate: Ord(S_ZROCKBROWN1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 17 * FRACUNIT;                                        // radius
    height: 72 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC71
    name: 'Small Brown Rock ';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 98;                                                // doomednum
    spawnstate: Ord(S_ZROCKBROWN2);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 50 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC72
    name: 'Big Grey Rock';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 99;                                                // doomednum
    spawnstate: Ord(S_ZROCKBLACK);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 40 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC73
    name: 'Large Brick Rubble';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 100;                                               // doomednum
    spawnstate: Ord(S_ZRUBBLE1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC74
    name: 'Small Brick Rubble';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 101;                                               // doomednum
    spawnstate: Ord(S_ZRUBBLE2);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC75
    name: 'Medium Brick Rubble';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 102;                                               // doomednum
    spawnstate: Ord(S_ZRUBBLE3);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC76
    name: 'Pillar With Vase';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 103;                                               // doomednum
    spawnstate: Ord(S_ZVASEPILLAR);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 54 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POTTERY1
    name: 'Tall Pot';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 104;                                               // doomednum
    spawnstate: Ord(S_ZPOTTERY1);                                 // spawnstate
    spawnhealth: 15;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZPOTTERY_EXPLODE);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD or MF_DROPOFF;  // flags
    flags2: MF2_SLIDE or MF2_PUSHABLE or MF2_TELESTOMP or MF2_PASSMOBJ;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POTTERY2
    name: 'Medium Pot';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 105;                                               // doomednum
    spawnstate: Ord(S_ZPOTTERY2);                                 // spawnstate
    spawnhealth: 15;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZPOTTERY_EXPLODE);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 25 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD or MF_DROPOFF;  // flags
    flags2: MF2_SLIDE or MF2_PUSHABLE or MF2_TELESTOMP or MF2_PASSMOBJ;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POTTERY3
    name: 'Short Pot';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 106;                                               // doomednum
    spawnstate: Ord(S_ZPOTTERY3);                                 // spawnstate
    spawnhealth: 15;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZPOTTERY_EXPLODE);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 25 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD or MF_DROPOFF;  // flags
    flags2: MF2_SLIDE or MF2_PUSHABLE or MF2_TELESTOMP or MF2_PASSMOBJ;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_POTTERYBIT1
    name: 'MT_POTTERYBIT1';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_POTTERYBIT_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_POTTERYBIT_EX0);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE;                                            // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC77
    name: 'Lynched Corpse';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 108;                                               // doomednum
    spawnstate: Ord(S_ZCORPSELYNCHED1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 11 * FRACUNIT;                                        // radius
    height: 95 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZLYNCHED_NOHEART
    name: 'Heartless Lynched Corpse';                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 109;                                               // doomednum
    spawnstate: Ord(S_ZCORPSELYNCHED2);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 100 * FRACUNIT;                                       // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC78
    name: 'Sitting Corpse';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 110;                                               // doomednum
    spawnstate: Ord(S_ZCORPSESITTING);                            // spawnstate
    spawnhealth: 30;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZCORPSESITTING_X);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 35 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CORPSEBIT
    name: 'MT_CORPSEBIT';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CORPSEBIT_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: MF2_TELESTOMP;                                        // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CORPSEBLOODDRIP
    name: 'MT_CORPSEBLOODDRIP';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CORPSEBLOODDRIP);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CORPSEBLOODDRIP_X1);                        // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRIP);                                    // deathsound
    speed: 0;                                                     // speed
    radius: FRACUNIT;                                             // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE;                                            // flags
    flags2: MF2_LOGRAV;                                           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BLOODPOOL
    name: 'Pool Of Blood';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 111;                                               // doomednum
    spawnstate: Ord(S_BLOODPOOL);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC79
    name: '3 Lit Candles';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 119;                                               // doomednum
    spawnstate: Ord(S_ZCANDLE1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC80
    name: 'Leaf Spawner';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 113;                                               // doomednum
    spawnstate: Ord(S_ZLEAFSPAWNER);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR;                          // flags
    flags2: MF2_DONTDRAW;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LEAF1
    name: 'MT_LEAF1';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LEAF1_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_LEAF_X1);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE;                           // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LEAF2
    name: 'MT_LEAF2';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LEAF2_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_LEAF_X1);                                   // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE;                           // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZTWINEDTORCH
    name: 'Lit Twined Torch';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 116;                                               // doomednum
    spawnstate: Ord(S_ZTWINEDTORCH_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZTWINEDTORCH_UNLIT
    name: 'Unlit Twined Torch';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 117;                                               // doomednum
    spawnstate: Ord(S_ZTWINEDTORCH_UNLIT);                        // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BRIDGE
    name: 'Glitter Bridge';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 118;                                               // doomednum
    spawnstate: Ord(S_BRIDGE1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 2 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_NOGRAVITY;                              // flags
    flags2: MF2_DONTDRAW;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BRIDGEBALL
    name: 'MT_BRIDGEBALL';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BBALL1);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZWALLTORCH
    name: 'Lit Wall Torch';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 54;                                                // doomednum
    spawnstate: Ord(S_ZWALLTORCH1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZWALLTORCH_UNLIT
    name: 'Unlit Wall Torch';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 55;                                                // doomednum
    spawnstate: Ord(S_ZWALLTORCH_U);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZBARREL
    name: 'Barrel';                                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8100;                                              // doomednum
    spawnstate: Ord(S_ZBARREL1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZSHRUB1
    name: 'Shrub';                                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8101;                                              // doomednum
    spawnstate: Ord(S_ZSHRUB1);                                   // spawnstate
    spawnhealth: 20;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_ZSHRUB1_X1);                                // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZSHRUB1_DIE);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_TREE_EXPLODE);                            // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 24 * FRACUNIT;                                        // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZSHRUB2
    name: 'Shrub 2';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8102;                                              // doomednum
    spawnstate: Ord(S_ZSHRUB2);                                   // spawnstate
    spawnhealth: 10;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_ZSHRUB2_X1);                                // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZSHRUB2_DIE);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_TREE_EXPLODE);                            // deathsound
    speed: 0;                                                     // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 40 * FRACUNIT;                                        // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZBUCKET
    name: 'Hanging Bucket';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8103;                                              // doomednum
    spawnstate: Ord(S_ZBUCKET1);                                  // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 72 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SPAWNCEILING or MF_NOGRAVITY;           // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZPOISONSHROOM
    name: 'Large Mushroom Explodes';                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8104;                                              // doomednum
    spawnstate: Ord(S_ZPOISONSHROOM1);                            // spawnstate
    spawnhealth: 30;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_ZPOISONSHROOM_P1);                           // painstate
    painchance: 255;                                              // painchance
    painsound: Ord(SFX_POISONSHROOM_PAIN);                        // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZPOISONSHROOM_X1);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_POISONSHROOM_DEATH);                      // deathsound
    speed: 0;                                                     // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SHOOTABLE or MF_SOLID or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZFIREBULL
    name: 'Lit Minotaur Statue';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8042;                                              // doomednum
    spawnstate: Ord(S_ZFIREBULL1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 80 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZFIREBULL_UNLIT
    name: 'Unlit Minotaur Statue';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8043;                                              // doomednum
    spawnstate: Ord(S_ZFIREBULL_U);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 80 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIRETHING
    name: 'Skull With Flame';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8060;                                              // doomednum
    spawnstate: Ord(S_ZFIRETHING1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BRASSTORCH
    name: 'Brazier With Flame';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8061;                                              // doomednum
    spawnstate: Ord(S_ZBRASSTORCH1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 35 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZSUITOFARMOR
    name: 'Suit Of Armor';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8064;                                              // doomednum
    spawnstate: Ord(S_ZSUITOFARMOR);                              // spawnstate
    spawnhealth: 60;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZSUITOFARMOR_X1);                           // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_SUITOFARMOR_BREAK);                       // deathsound
    speed: 0;                                                     // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 72 * FRACUNIT;                                        // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZARMORCHUNK
    name: 'MT_ZARMORCHUNK';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ZARMORCHUNK1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: 0;                                                     // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZBELL
    name: 'Bell';                                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8065;                                              // doomednum
    spawnstate: Ord(S_ZBELL);                                     // spawnstate
    spawnhealth: 5;                                               // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZBELL_X1);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_BELLRING);                                // deathsound
    speed: 0;                                                     // speed
    radius: 56 * FRACUNIT;                                        // radius
    height: 120 * FRACUNIT;                                       // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD or MF_NOGRAVITY or MF_SPAWNCEILING;// flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZBLUE_CANDLE
    name: 'Lit Blue Candle';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8066;                                              // doomednum
    spawnstate: Ord(S_ZBLUE_CANDLE1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZIRON_MAIDEN
    name: 'Iron Maiden';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8067;                                              // doomednum
    spawnstate: Ord(S_ZIRON_MAIDEN);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 60 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZXMAS_TREE
    name: 'Evergreen Tree';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8068;                                              // doomednum
    spawnstate: Ord(S_ZXMAS_TREE);                                // spawnstate
    spawnhealth: 20;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_ZXMAS_TREE_X1);                             // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ZXMAS_TREE_DIE);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_TREE_EXPLODE);                            // deathsound
    speed: 0;                                                     // speed
    radius: 11 * FRACUNIT;                                        // radius
    height: 130 * FRACUNIT;                                       // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_NOBLOOD;                // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCAULDRON
    name: 'Lit Cauldron';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8069;                                              // doomednum
    spawnstate: Ord(S_ZCAULDRON1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 26 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCAULDRON_UNLIT
    name: 'Unlit Cauldron';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8070;                                              // doomednum
    spawnstate: Ord(S_ZCAULDRON_U);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 26 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID;                                              // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINBIT32
    name: 'Short Chain';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8071;                                              // doomednum
    spawnstate: Ord(S_ZCHAINBIT32);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINBIT64
    name: 'Long Chain';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8072;                                              // doomednum
    spawnstate: Ord(S_ZCHAINBIT64);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINEND_HEART
    name: 'Hook With Heart';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8073;                                              // doomednum
    spawnstate: Ord(S_ZCHAINEND_HEART);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINEND_HOOK1
    name: 'Chain With Large Hook';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8074;                                              // doomednum
    spawnstate: Ord(S_ZCHAINEND_HOOK1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINEND_HOOK2
    name: 'Chain With Small Hook"';                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8075;                                              // doomednum
    spawnstate: Ord(S_ZCHAINEND_HOOK2);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINEND_SPIKE
    name: 'Chain with Spike Ball';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8076;                                              // doomednum
    spawnstate: Ord(S_ZCHAINEND_SPIKE);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ZCHAINEND_SKULL
    name: 'Hook With Skull';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8077;                                              // doomednum
    spawnstate: Ord(S_ZCHAINEND_SKULL);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 32 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SPAWNCEILING;      // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT1
    name: 'Large Brown Stein';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8500;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT2
    name: 'Small Silver Stein';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8501;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT2);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT3
    name: 'Unlit Candle With Web';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8502;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT3);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT4
    name: 'Unlit Small Gray Candle';                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8503;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT4);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT5
    name: 'Unlit Small Candle';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8504;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT5);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT6
    name: 'Spilled Goblet';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8505;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT6);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT7
    name: 'Tall Goblet';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8506;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT7);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT8
    name: 'Small Goblet';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8507;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT8);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT9
    name: 'Silver Goblet';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8508;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT9);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TABLE_SHIT10
    name: 'Meat Cleaver';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8509;                                              // doomednum
    spawnstate: Ord(S_TABLE_SHIT10);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TFOG
    name: 'MT_TFOG';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_TFOG1);                                     // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MISC81
    name: 'Teleport Smoke';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 140;                                               // doomednum
    spawnstate: Ord(S_TELESMOKE1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_TELEPORTMAN
    name: 'Teleport Landing';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 14;                                                // doomednum
    spawnstate: Ord(S_NULL);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR;                          // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PUNCHPUFF
    name: 'MT_PUNCHPUFF';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_PUNCHPUFF1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_FIGHTER_PUNCH_HITTHING);                    // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_FIGHTER_PUNCH_HITWALL);                  // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FW_AXE
    name: 'Timon''s Axe';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8010;                                              // doomednum
    spawnstate: Ord(S_AXE);                                       // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_AXEPUFF
    name: 'MT_AXEPUFF';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HAMMERPUFF1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_FIGHTER_AXE_HITTHING);                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_FIGHTER_HAMMER_HITWALL);                 // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_AXEPUFF_GLOW
    name: 'MT_AXEPUFF_GLOW';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_AXEPUFF_GLOW1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_FIGHTER_AXE_HITTHING);                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_FIGHTER_HAMMER_HITWALL);                 // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_AXEBLOOD
    name: 'MT_AXEBLOOD';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_AXEBLOOD1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_AXEBLOOD6);                                 // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF;           // flags
    flags2: MF2_NOTELEPORT or MF2_CANNOTPUSH;                     // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FW_HAMMER
    name: 'Hammer Of Retribution';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 123;                                               // doomednum
    spawnstate: Ord(S_HAMM);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HAMMER_MISSILE
    name: 'MT_HAMMER_MISSILE';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HAMMER_MISSILE_1);                          // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_HAMMER_MISSILE_X1);                         // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_FIGHTER_HAMMER_EXPLODE);                  // deathsound
    speed: 25 * FRACUNIT;                                         // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 10;                                                   // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_FIREDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HAMMERPUFF
    name: 'MT_HAMMERPUFF';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HAMMERPUFF1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_FIGHTER_HAMMER_HITTHING);                   // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_FIGHTER_HAMMER_HITWALL);                 // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FSWORD_MISSILE
    name: 'MT_FSWORD_MISSILE';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FSWORD_MISSILE1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FSWORD_MISSILE_X1);                         // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_FIGHTER_SWORD_EXPLODE);                   // deathsound
    speed: 30 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 8;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS;           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FSWORD_FLAME
    name: 'MT_FSWORD_FLAME';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FSWORD_FLAME1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CW_SERPSTAFF
    name: 'Serpent Staff';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10;                                                // doomednum
    spawnstate: Ord(S_CSTAFF);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CSTAFF_MISSILE
    name: 'MT_CSTAFF_MISSILE';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CSTAFF_MISSILE1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CSTAFF_MISSILE_X1);                         // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_CLERIC_CSTAFF_EXPLODE);                   // deathsound
    speed: 22 * FRACUNIT;                                         // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 5;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS;           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CSTAFFPUFF
    name: 'MT_CSTAFFPUFF';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CSTAFFPUFF1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_CLERIC_CSTAFF_HITTHING);                    // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CW_FLAME
    name: 'Firestorm';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8009;                                              // doomednum
    spawnstate: Ord(S_CFLAME1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CFLAMEFLOOR
    name: 'MT_CFLAMEFLOOR';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CFLAMEFLOOR1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FLAMEPUFF
    name: 'MT_FLAMEPUFF';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FLAMEPUFF1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_CLERIC_FLAME_EXPLODE);                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_CLERIC_FLAME_EXPLODE);                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: FRACUNIT;                                             // radius
    height: FRACUNIT;                                             // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FLAMEPUFF2
    name: 'MT_FLAMEPUFF2';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FLAMEPUFF2_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_CLERIC_FLAME_EXPLODE);                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_CLERIC_FLAME_EXPLODE);                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: FRACUNIT;                                             // radius
    height: FRACUNIT;                                             // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CIRCLEFLAME
    name: 'MT_CIRCLEFLAME';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CIRCLE_FLAME1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CIRCLE_FLAME_X1);                           // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_CLERIC_FLAME_CIRCLE);                     // deathsound
    speed: 0;                                                     // speed
    radius: 6 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 2;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CFLAME_MISSILE
    name: 'MT_CFLAME_MISSILE';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CFLAME_MISSILE1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CFLAME_MISSILE_X);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 200 * FRACUNIT;                                        // speed
    radius: 14 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 8;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_DONTDRAW or MF2_FIREDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HOLY_FX
    name: 'MT_HOLY_FX';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HOLY_FX1);                                  // spawnstate
    spawnhealth: 105;                                             // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_HOLY_FX_X1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_SPIRIT_DIE);                              // deathsound
    speed: 12 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 3;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE;// flags
    flags2: MF2_NOTELEPORT or MF2_SEEKERMISSILE or MF2_RIP or MF2_IMPACT or MF2_PCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HOLY_TAIL
    name: 'MT_HOLY_TAIL';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HOLY_TAIL1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: FRACUNIT;                                             // radius
    height: FRACUNIT;                                             // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_NOCLIP or MF_ALTSHADOW;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HOLY_PUFF
    name: 'MT_HOLY_PUFF';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HOLY_PUFF1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HOLY_MISSILE
    name: 'MT_HOLY_MISSILE';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HOLY_MISSILE1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_HOLY_MISSILE_X);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 30 * FRACUNIT;                                         // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_MISSILE;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_HOLY_MISSILE_PUFF
    name: 'MT_HOLY_MISSILE_PUFF';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_HOLY_MISSILE_P1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MWANDPUFF
    name: 'MT_MWANDPUFF';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MWANDPUFF1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: MF2_NOTELEPORT or MF2_CANNOTPUSH or MF2_NODMGTHRUST;  // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MWANDSMOKE
    name: 'MT_MWANDSMOKE';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MWANDSMOKE1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: MF2_NOTELEPORT or MF2_CANNOTPUSH or MF2_NODMGTHRUST;  // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MWAND_MISSILE
    name: 'MT_MWAND_MISSILE';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MWAND_MISSILE1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MWANDPUFF1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 184 * FRACUNIT;                                        // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 2;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_RIP or MF2_IMPACT or MF2_PCROSS or MF2_NODMGTHRUST or MF2_CANNOTPUSH;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MW_LIGHTNING
    name: 'Arc Of Death';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8040;                                              // doomednum
    spawnstate: Ord(S_MW_LIGHTNING1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LIGHTNING_CEILING
    name: 'MT_LIGHTNING_CEILING';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LIGHTNING_CEILING1);                        // spawnstate
    spawnhealth: 144;                                             // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_LIGHTNING_C_X1);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 25 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 40 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 8;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS;           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LIGHTNING_FLOOR
    name: 'MT_LIGHTNING_FLOOR';                                   // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LIGHTNING_FLOOR1);                          // spawnstate
    spawnhealth: 144;                                             // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_LIGHTNING_F_X1);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 25 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 40 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 8;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS;           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_LIGHTNING_ZAP
    name: 'MT_LIGHTNING_ZAP';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_LIGHTNING_ZAP1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_LIGHTNING_ZAP_X8);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 35 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 2;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE or MF_DROPOFF;// flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MSTAFF_FX
    name: 'MT_MSTAFF_FX';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MSTAFF_FX1_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MSTAFF_FX_X1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_MAGE_STAFF_EXPLODE);                      // deathsound
    speed: 20 * FRACUNIT;                                         // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 6;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE or MF2_RIP or MF2_IMPACT or MF2_PCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MSTAFF_FX2
    name: 'MT_MSTAFF_FX2';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MSTAFF_FX2_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MSTAFF_FX2_X1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_MAGE_STAFF_EXPLODE);                      // deathsound
    speed: 17 * FRACUNIT;                                         // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE or MF2_IMPACT or MF2_PCROSS or MF2_SEEKERMISSILE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FW_SWORD1
    name: 'Quietus Piece 1';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 12;                                                // doomednum
    spawnstate: Ord(S_FSWORD1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FW_SWORD2
    name: 'Quietus Piece 2';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 13;                                                // doomednum
    spawnstate: Ord(S_FSWORD2);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FW_SWORD3
    name: 'Quietus Piece 3';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 16;                                                // doomednum
    spawnstate: Ord(S_FSWORD3);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CW_HOLY1
    name: 'Wraithverge Piece 1';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 18;                                                // doomednum
    spawnstate: Ord(S_CHOLY1);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CW_HOLY2
    name: 'Wraithverge Piece 2';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 19;                                                // doomednum
    spawnstate: Ord(S_CHOLY2);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CW_HOLY3
    name: 'Wraithverge Piece 3';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 20;                                                // doomednum
    spawnstate: Ord(S_CHOLY3);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MW_STAFF1
    name: 'BloodScourge Piece 1';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 21;                                                // doomednum
    spawnstate: Ord(S_MSTAFF1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MW_STAFF2
    name: 'BloodScourge Piece 2';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 22;                                                // doomednum
    spawnstate: Ord(S_MSTAFF2);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MW_STAFF3
    name: 'BloodScourge Piece 3';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 23;                                                // doomednum
    spawnstate: Ord(S_MSTAFF3);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SNOUTPUFF
    name: 'MT_SNOUTPUFF';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_PUNCHPUFF1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MW_CONE
    name: 'Frost Shards';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 53;                                                // doomednum
    spawnstate: Ord(S_COS1);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SHARDFX1
    name: 'MT_SHARDFX1';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SHARDFX1_1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SHARDFXE1_1);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_MAGE_SHARDS_EXPLODE);                     // deathsound
    speed: 25 * FRACUNIT;                                         // speed
    radius: 13 * FRACUNIT;                                        // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_ICEDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BLOOD
    name: 'MT_BLOOD';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BLOOD1);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BLOODSPLATTER
    name: 'MT_BLOODSPLATTER';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BLOODSPLATTER1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_BLOODSPLATTERX);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF;             // flags
    flags2: MF2_NOTELEPORT or MF2_CANNOTPUSH;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_GIBS
    name: 'MT_GIBS';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_GIBS1);                                     // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_CORPSE;              // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PLAYER_FIGHTER
    name: 'MT_PLAYER_FIGHTER';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FPLAY);                                     // spawnstate
    spawnhealth: 100;                                             // spawnhealth
    seestate: Ord(S_FPLAY_RUN1);                                  // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 0;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_FPLAY_PAIN);                                 // painstate
    painchance: 255;                                              // painchance
    painsound: Ord(SFX_PLAYER_FIGHTER_PAIN);                      // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_FPLAY_ATK1);                              // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FPLAY_DIE1);                                // deathstate
    xdeathstate: Ord(S_FPLAY_XDIE1);                              // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_DROPOFF or MF_PICKUP or MF_NOTDMATCH;// flags
    flags2: MF2_WINDTHRUST or MF2_FLOORCLIP or MF2_SLIDE or MF2_PASSMOBJ or MF2_TELESTOMP or MF2_PUSHWALL;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BLOODYSKULL
    name: 'MT_BLOODYSKULL';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BLOODYSKULL1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF;                           // flags
    flags2: MF2_LOGRAV or MF2_CANNOTPUSH;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PLAYER_SPEED
    name: 'MT_PLAYER_SPEED';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_PLAYER_SPEED1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_ALTSHADOW;         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICECHUNK
    name: 'MT_ICECHUNK';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICECHUNK1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF;                           // flags
    flags2: MF2_LOGRAV or MF2_CANNOTPUSH or MF2_FLOORCLIP;        // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PLAYER_CLERIC
    name: 'MT_PLAYER_CLERIC';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CPLAY);                                     // spawnstate
    spawnhealth: 100;                                             // spawnhealth
    seestate: Ord(S_CPLAY_RUN1);                                  // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 0;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_CPLAY_PAIN);                                 // painstate
    painchance: 255;                                              // painchance
    painsound: Ord(SFX_PLAYER_CLERIC_PAIN);                       // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_CPLAY_ATK1);                              // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CPLAY_DIE1);                                // deathstate
    xdeathstate: Ord(S_CPLAY_XDIE1);                              // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_DROPOFF or MF_PICKUP or MF_NOTDMATCH;// flags
    flags2: MF2_WINDTHRUST or MF2_FLOORCLIP or MF2_SLIDE or MF2_PASSMOBJ or MF2_TELESTOMP or MF2_PUSHWALL;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PLAYER_MAGE
    name: 'MT_PLAYER_MAGE';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MPLAY);                                     // spawnstate
    spawnhealth: 100;                                             // spawnhealth
    seestate: Ord(S_MPLAY_RUN1);                                  // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 0;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_MPLAY_PAIN);                                 // painstate
    painchance: 255;                                              // painchance
    painsound: Ord(SFX_PLAYER_MAGE_PAIN);                         // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_MPLAY_ATK1);                              // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MPLAY_DIE1);                                // deathstate
    xdeathstate: Ord(S_MPLAY_XDIE1);                              // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_DROPOFF or MF_PICKUP or MF_NOTDMATCH;// flags
    flags2: MF2_WINDTHRUST or MF2_FLOORCLIP or MF2_SLIDE or MF2_PASSMOBJ or MF2_TELESTOMP or MF2_PUSHWALL;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PIGPLAYER
    name: 'MT_PIGPLAYER';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_PIGPLAY);                                   // spawnstate
    spawnhealth: 100;                                             // spawnhealth
    seestate: Ord(S_PIGPLAY_RUN1);                                // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 0;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_PIGPLAY_PAIN);                               // painstate
    painchance: 255;                                              // painchance
    painsound: Ord(SFX_PIG_PAIN);                                 // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_PIGPLAY_ATK1);                            // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_PIG_DIE1);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_PIG_DEATH);                               // deathsound
    speed: 0;                                                     // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 24 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_DROPOFF or MF_NOTDMATCH;// flags
    flags2: MF2_WINDTHRUST or MF2_SLIDE or MF2_PASSMOBJ or MF2_FLOORCLIP or MF2_TELESTOMP or MF2_PUSHWALL;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_PIG
    name: 'MT_PIG';                                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_PIG_LOOK1);                                 // spawnstate
    spawnhealth: 25;                                              // spawnhealth
    seestate: Ord(S_PIG_WALK1);                                   // seestate
    seesound: Ord(SFX_PIG_ACTIVE1);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_PIG_PAIN);                                   // painstate
    painchance: 128;                                              // painchance
    painsound: Ord(SFX_PIG_PAIN);                                 // painsound
    meleestate: Ord(S_PIG_ATK1);                                  // meleestate
    missilestate: Ord(0);                                         // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_PIG_DIE1);                                  // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_PIG_DEATH);                               // deathsound
    speed: 10;                                                    // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 22 * FRACUNIT;                                        // height
    mass: 60;                                                     // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_PIG_ACTIVE1);                            // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_WINDTHRUST or MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CENTAUR
    name: 'Centaur';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 107;                                               // doomednum
    spawnstate: Ord(S_CENTAUR_LOOK1);                             // spawnstate
    spawnhealth: 200;                                             // spawnhealth
    seestate: Ord(S_CENTAUR_WALK1);                               // seestate
    seesound: Ord(SFX_CENTAUR_SIGHT);                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_CENTAUR_ATTACK);                         // attacksound
    painstate: Ord(S_CENTAUR_PAIN1);                              // painstate
    painchance: 135;                                              // painchance
    painsound: Ord(SFX_CENTAUR_PAIN);                             // painsound
    meleestate: Ord(S_CENTAUR_ATK1);                              // meleestate
    missilestate: Ord(0);                                         // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CENTAUR_DEATH1);                            // deathstate
    xdeathstate: Ord(S_CENTAUR_DEATH_X1);                         // xdeathstate
    deathsound: Ord(SFX_CENTAUR_DEATH);                           // deathsound
    speed: 13;                                                    // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 120;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_CENTAUR_ACTIVE);                         // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CENTAURLEADER
    name: 'Slaughtar';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 115;                                               // doomednum
    spawnstate: Ord(S_CENTAUR_LOOK1);                             // spawnstate
    spawnhealth: 250;                                             // spawnhealth
    seestate: Ord(S_CENTAUR_WALK1);                               // seestate
    seesound: Ord(SFX_CENTAUR_SIGHT);                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_CENTAUR_ATTACK);                         // attacksound
    painstate: Ord(S_CENTAUR_PAIN1);                              // painstate
    painchance: 96;                                               // painchance
    painsound: Ord(SFX_CENTAUR_PAIN);                             // painsound
    meleestate: Ord(S_CENTAUR_ATK1);                              // meleestate
    missilestate: Ord(S_CENTAUR_MISSILE1);                        // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CENTAUR_DEATH1);                            // deathstate
    xdeathstate: Ord(S_CENTAUR_DEATH_X1);                         // xdeathstate
    deathsound: Ord(SFX_CENTAUR_DEATH);                           // deathsound
    speed: 10;                                                    // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 120;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_CENTAUR_ACTIVE);                         // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CENTAUR_FX
    name: 'MT_CENTAUR_FX';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CENTAUR_FX1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CENTAUR_FX_X1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_CENTAUR_MISSILE_EXPLODE);                 // deathsound
    speed: 20 * FRACUNIT;                                         // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS;           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CENTAUR_SHIELD
    name: 'MT_CENTAUR_SHIELD';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CENTAUR_SHIELD1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CENTAUR_SHIELD_X1);                         // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_DROPOFF or MF_CORPSE;                               // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CENTAUR_SWORD
    name: 'MT_CENTAUR_SWORD';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CENTAUR_SWORD1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CENTAUR_SWORD_X1);                          // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_DROPOFF or MF_CORPSE;                               // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON
    name: 'Green Chaos Serpent';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 31;                                                // doomednum
    spawnstate: Ord(S_DEMN_LOOK1);                                // spawnstate
    spawnhealth: 250;                                             // spawnhealth
    seestate: Ord(S_DEMN_CHASE1);                                 // seestate
    seesound: Ord(SFX_DEMON_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_DEMON_ATTACK);                           // attacksound
    painstate: Ord(S_DEMN_PAIN1);                                 // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_DEMON_PAIN);                               // painsound
    meleestate: Ord(S_DEMN_ATK1_1);                               // meleestate
    missilestate: Ord(S_DEMN_ATK2_1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMN_DEATH1);                               // deathstate
    xdeathstate: Ord(S_DEMN_XDEATH1);                             // xdeathstate
    deathsound: Ord(SFX_DEMON_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 220;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_DEMON_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMONCHUNK1
    name: 'MT_DEMONCHUNK1';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMONCHUNK1_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMONCHUNK1_4);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMONCHUNK2
    name: 'MT_DEMONCHUNK2';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMONCHUNK2_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMONCHUNK2_4);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMONCHUNK3
    name: 'MT_DEMONCHUNK3';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMONCHUNK3_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMONCHUNK3_4);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMONCHUNK4
    name: 'MT_DEMONCHUNK4';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMONCHUNK4_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMONCHUNK4_4);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMONCHUNK5
    name: 'MT_DEMONCHUNK5';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMONCHUNK5_1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMONCHUNK5_4);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMONFX1
    name: 'MT_DEMONFX1';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMONFX_MOVE1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMONFX_BOOM1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DEMON_MISSILE_EXPLODE);                   // deathsound
    speed: 15 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 5;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_FIREDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2
    name: 'Brown Chaos Serpent';                                  // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8080;                                              // doomednum
    spawnstate: Ord(S_DEMN2_LOOK1);                               // spawnstate
    spawnhealth: 250;                                             // spawnhealth
    seestate: Ord(S_DEMN2_CHASE1);                                // seestate
    seesound: Ord(SFX_DEMON_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_DEMON_ATTACK);                           // attacksound
    painstate: Ord(S_DEMN2_PAIN1);                                // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_DEMON_PAIN);                               // painsound
    meleestate: Ord(S_DEMN2_ATK1_1);                              // meleestate
    missilestate: Ord(S_DEMN2_ATK2_1);                            // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMN2_DEATH1);                              // deathstate
    xdeathstate: Ord(S_DEMN2_XDEATH1);                            // xdeathstate
    deathsound: Ord(SFX_DEMON_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 220;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_DEMON_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2CHUNK1
    name: 'MT_DEMON2CHUNK1';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMON2CHUNK1_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMON2CHUNK1_4);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2CHUNK2
    name: 'MT_DEMON2CHUNK2';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMON2CHUNK2_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMON2CHUNK2_4);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2CHUNK3
    name: 'MT_DEMON2CHUNK3';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMON2CHUNK3_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMON2CHUNK3_4);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2CHUNK4
    name: 'MT_DEMON2CHUNK4';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMON2CHUNK4_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMON2CHUNK4_4);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2CHUNK5
    name: 'MT_DEMON2CHUNK5';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMON2CHUNK5_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMON2CHUNK5_4);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_CORPSE;// flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2FX1
    name: 'MT_DEMON2FX1';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMON2FX_MOVE1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DEMON2FX_BOOM1);                            // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DEMON_MISSILE_EXPLODE);                   // deathsound
    speed: 15 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 5;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE or MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_FIREDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITHB
    name: 'Buried Reiver';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10011;                                             // doomednum
    spawnstate: Ord(S_WRAITH_LOOK1);                              // spawnstate
    spawnhealth: 150;                                             // spawnhealth
    seestate: Ord(S_WRAITH_RAISE1);                               // seestate
    seesound: Ord(SFX_WRAITH_SIGHT);                              // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_WRAITH_ATTACK);                          // attacksound
    painstate: Ord(S_WRAITH_PAIN1);                               // painstate
    painchance: 25;                                               // painchance
    painsound: Ord(SFX_WRAITH_PAIN);                              // painsound
    meleestate: Ord(S_WRAITH_ATK1_1);                             // meleestate
    missilestate: Ord(S_WRAITH_ATK2_1);                           // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_WRAITH_DEATH1_1);                           // deathstate
    xdeathstate: Ord(S_WRAITH_DEATH2_1);                          // xdeathstate
    deathsound: Ord(SFX_WRAITH_DEATH);                            // deathsound
    speed: 11;                                                    // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 68 * FRACUNIT;                                        // height
    mass: 75;                                                     // mass
    damage: 10;                                                   // damage
    activesound: Ord(SFX_WRAITH_ACTIVE);                          // activesound
    flags: MF_DROPOFF or MF_NOGRAVITY or MF_FLOAT or MF_COUNTKILL;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_TELESTOMP or MF2_DONTDRAW;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITH
    name: 'Reiver';                                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 34;                                                // doomednum
    spawnstate: Ord(S_WRAITH_INIT1);                              // spawnstate
    spawnhealth: 150;                                             // spawnhealth
    seestate: Ord(S_WRAITH_CHASE1);                               // seestate
    seesound: Ord(SFX_WRAITH_SIGHT);                              // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_WRAITH_ATTACK);                          // attacksound
    painstate: Ord(S_WRAITH_PAIN1);                               // painstate
    painchance: 25;                                               // painchance
    painsound: Ord(SFX_WRAITH_PAIN);                              // painsound
    meleestate: Ord(S_WRAITH_ATK1_1);                             // meleestate
    missilestate: Ord(S_WRAITH_ATK2_1);                           // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_WRAITH_DEATH1_1);                           // deathstate
    xdeathstate: Ord(S_WRAITH_DEATH2_1);                          // xdeathstate
    deathsound: Ord(SFX_WRAITH_DEATH);                            // deathsound
    speed: 11;                                                    // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 55 * FRACUNIT;                                        // height
    mass: 75;                                                     // mass
    damage: 10;                                                   // damage
    activesound: Ord(SFX_WRAITH_ACTIVE);                          // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_DROPOFF or MF_NOGRAVITY or MF_FLOAT;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITHFX1
    name: 'MT_WRAITHFX1';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_WRTHFX_MOVE1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_WRTHFX_BOOM1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_WRAITH_MISSILE_EXPLODE);                  // deathsound
    speed: 14 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 5;                                                      // mass
    damage: 5;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF or MF_MISSILE;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_FLOORCLIP or MF2_FIREDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITHFX2
    name: 'MT_WRAITHFX2';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_WRTHFX_SIZZLE1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF;                           // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITHFX3
    name: 'MT_WRAITHFX3';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_WRTHFX_DROP1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_WRTHFX_DEAD1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRIP);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITHFX4
    name: 'MT_WRAITHFX4';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_WRTHFX_ADROP1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_WRTHFX_ADEAD1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRIP);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WRAITHFX5
    name: 'MT_WRAITHFX5';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_WRTHFX_BDROP1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_WRTHFX_BDEAD1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRIP);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 2 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 5;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MINOTAUR
    name: 'MT_MINOTAUR';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 9;                                                 // doomednum
    spawnstate: Ord(S_MNTR_SPAWN1);                               // spawnstate
    spawnhealth: 2500;                                            // spawnhealth
    seestate: Ord(S_MNTR_WALK1);                                  // seestate
    seesound: Ord(SFX_MAULATOR_SIGHT);                            // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_MAULATOR_HAMMER_SWING);                  // attacksound
    painstate: Ord(S_MNTR_PAIN1);                                 // painstate
    painchance: 25;                                               // painchance
    painsound: Ord(SFX_MAULATOR_PAIN);                            // painsound
    meleestate: Ord(S_MNTR_ATK1_1);                               // meleestate
    missilestate: Ord(S_MNTR_ATK2_1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MNTR_DIE1);                                 // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_MAULATOR_DEATH);                          // deathsound
    speed: 16;                                                    // speed
    radius: 28 * FRACUNIT;                                        // radius
    height: 100 * FRACUNIT;                                       // height
    mass: 800;                                                    // mass
    damage: 7;                                                    // damage
    activesound: Ord(SFX_MAULATOR_ACTIVE);                        // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_SHADOW; // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MNTRFX1
    name: 'MT_MNTRFX1';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MNTRFX1_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MNTRFXI1_1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 20 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 3;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MNTRFX2
    name: 'MT_MNTRFX2';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MNTRFX2_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MNTRFXI2_1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 14 * FRACUNIT;                                         // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 12 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MNTRFX3
    name: 'MT_MNTRFX3';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MNTRFX3_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(0);                                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MNTRFXI2_1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MNTRSMOKE
    name: 'MT_MNTRSMOKE';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MINOSMOKE1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MNTRSMOKEEXIT
    name: 'MT_MNTRSMOKEEXIT';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_MINOSMOKEX1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENT
    name: 'Stalker';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 121;                                               // doomednum
    spawnstate: Ord(S_SERPENT_LOOK1);                             // spawnstate
    spawnhealth: 90;                                              // spawnhealth
    seestate: Ord(S_SERPENT_SWIM1);                               // seestate
    seesound: Ord(SFX_SERPENT_SIGHT);                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_SERPENT_ATTACK);                         // attacksound
    painstate: Ord(S_SERPENT_PAIN1);                              // painstate
    painchance: 96;                                               // painchance
    painsound: Ord(SFX_SERPENT_PAIN);                             // painsound
    meleestate: Ord(S_SERPENT_SURFACE1);                          // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SERPENT_DIE1);                              // deathstate
    xdeathstate: Ord(S_SERPENT_XDIE1);                            // xdeathstate
    deathsound: Ord(SFX_SERPENT_DEATH);                           // deathsound
    speed: 12;                                                    // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 70 * FRACUNIT;                                        // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_COUNTKILL or MF_NOBLOOD;                // flags
    flags2: MF2_PASSMOBJ or MF2_DONTDRAW or MF2_CANTLEAVEFLOORPIC or MF2_NONSHOOTABLE or MF2_MCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENTLEADER
    name: 'Stalker Boss';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 120;                                               // doomednum
    spawnstate: Ord(S_SERPENT_LOOK1);                             // spawnstate
    spawnhealth: 90;                                              // spawnhealth
    seestate: Ord(S_SERPENT_SWIM1);                               // seestate
    seesound: Ord(SFX_SERPENT_SIGHT);                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_SERPENT_ATTACK);                         // attacksound
    painstate: Ord(S_SERPENT_PAIN1);                              // painstate
    painchance: 96;                                               // painchance
    painsound: Ord(SFX_SERPENT_PAIN);                             // painsound
    meleestate: Ord(S_SERPENT_SURFACE1);                          // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SERPENT_DIE1);                              // deathstate
    xdeathstate: Ord(S_SERPENT_XDIE1);                            // xdeathstate
    deathsound: Ord(SFX_SERPENT_DEATH);                           // deathsound
    speed: 12;                                                    // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 70 * FRACUNIT;                                        // height
    mass: 200;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_COUNTKILL or MF_NOBLOOD;                // flags
    flags2: MF2_PASSMOBJ or MF2_DONTDRAW or MF2_CANTLEAVEFLOORPIC or MF2_NONSHOOTABLE or MF2_MCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENTFX
    name: 'MT_SERPENTFX';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SERPENT_FX1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(0);                                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SERPENT_FX_X1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_SERPENTFX_HIT);                           // deathsound
    speed: 15 * FRACUNIT;                                         // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 4;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENT_HEAD
    name: 'MT_SERPENT_HEAD';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SERPENT_HEAD1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: MF2_LOGRAV;                                           // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENT_GIB1
    name: 'MT_SERPENT_GIB1';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SERPENT_GIB1_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 3 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENT_GIB2
    name: 'MT_SERPENT_GIB2';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SERPENT_GIB2_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 3 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SERPENT_GIB3
    name: 'MT_SERPENT_GIB3';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SERPENT_GIB3_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 3 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BISHOP
    name: 'Dark Bishop';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 114;                                               // doomednum
    spawnstate: Ord(S_BISHOP_LOOK1);                              // spawnstate
    spawnhealth: 130;                                             // spawnhealth
    seestate: Ord(S_BISHOP_WALK1);                                // seestate
    seesound: Ord(SFX_BISHOP_SIGHT);                              // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_BISHOP_ATTACK);                          // attacksound
    painstate: Ord(S_BISHOP_PAIN1);                               // painstate
    painchance: 110;                                              // painchance
    painsound: Ord(SFX_BISHOP_PAIN);                              // painsound
    meleestate: Ord(0);                                           // meleestate
    missilestate: Ord(S_BISHOP_ATK1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_BISHOP_DEATH1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_BISHOP_DEATH);                            // deathsound
    speed: 10;                                                    // speed
    radius: 22 * FRACUNIT;                                        // radius
    height: 65 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_BISHOP_ACTIVE);                          // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_FLOAT or MF_NOGRAVITY or MF_NOBLOOD;// flags
    flags2: MF2_PASSMOBJ or MF2_PUSHWALL or MF2_TELESTOMP;        // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BISHOP_PUFF
    name: 'MT_BISHOP_PUFF';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BISHOP_PUFF1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SHADOW or MF_NOBLOCKMAP or MF_NOGRAVITY;            // flags
    flags2: 0;                                                    // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BISHOPBLUR
    name: 'MT_BISHOPBLUR';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BISHOPBLUR1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BISHOPPAINBLUR
    name: 'MT_BISHOPPAINBLUR';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BISHOPPAINBLUR1);                           // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW;            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BISH_FX
    name: 'MT_BISH_FX';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BISHFX1_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_BISHFXI1_1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_BISHOP_MISSILE_EXPLODE);                  // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_SEEKERMISSILE;                  // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DRAGON
    name: 'Dragon Lich';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 254;                                               // doomednum
    spawnstate: Ord(S_DRAGON_LOOK1);                              // spawnstate
    spawnhealth: 640;                                             // spawnhealth
    seestate: Ord(S_DRAGON_INIT);                                 // seestate
    seesound: Ord(SFX_DRAGON_SIGHT);                              // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_DRAGON_ATTACK);                          // attacksound
    painstate: Ord(S_DRAGON_PAIN1);                               // painstate
    painchance: 128;                                              // painchance
    painsound: Ord(SFX_DRAGON_PAIN);                              // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_DRAGON_ATK1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DRAGON_DEATH1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRAGON_DEATH);                            // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 65 * FRACUNIT;                                        // height
    mass: MAXINT;                                                 // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_DRAGON_ACTIVE);                          // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_FLOAT or MF_NOGRAVITY or MF_NOBLOOD;// flags
    flags2: MF2_PASSMOBJ or MF2_BOSS;                             // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DRAGON_FX
    name: 'MT_DRAGON_FX';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DRAGON_FX1_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_DRAGON_FX1_X1);                             // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRAGON_FIREBALL_EXPLODE);                 // deathsound
    speed: 24 * FRACUNIT;                                         // speed
    radius: 12 * FRACUNIT;                                        // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 6;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE;                     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DRAGON_FX2
    name: 'MT_DRAGON_FX2';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DRAGON_FX2_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRAGON_FIREBALL_EXPLODE);                 // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP;                                         // flags
    flags2: MF2_NOTELEPORT or MF2_FIREDAMAGE or MF2_DONTDRAW;     // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARMOR_1
    name: 'Mesh Armor';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8005;                                              // doomednum
    spawnstate: Ord(S_ARMOR_1);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARMOR_2
    name: 'Falcon Shield';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8006;                                              // doomednum
    spawnstate: Ord(S_ARMOR_2);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARMOR_3
    name: 'Platinum Helm';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8007;                                              // doomednum
    spawnstate: Ord(S_ARMOR_3);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ARMOR_4
    name: 'Amulet Of Warding';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8008;                                              // doomednum
    spawnstate: Ord(S_ARMOR_4);                                   // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL or MF_NOGRAVITY;                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MANA1
    name: 'Blue Mana';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 122;                                               // doomednum
    spawnstate: Ord(S_MANA1_1);                                   // spawnstate
    spawnhealth: 10;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MANA2
    name: 'Green Mana';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 124;                                               // doomednum
    spawnstate: Ord(S_MANA2_1);                                   // spawnstate
    spawnhealth: 10;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MANA3
    name: 'Combine Mana';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8004;                                              // doomednum
    spawnstate: Ord(S_MANA3_1);                                   // spawnstate
    spawnhealth: 20;                                              // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 8 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: MF2_FLOATBOB;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY1
    name: 'Steel Key';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8030;                                              // doomednum
    spawnstate: Ord(S_KEY1);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY2
    name: 'Cave Key';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8031;                                              // doomednum
    spawnstate: Ord(S_KEY2);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY3
    name: 'Axe Key';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8032;                                              // doomednum
    spawnstate: Ord(S_KEY3);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY4
    name: 'Fire Key';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8033;                                              // doomednum
    spawnstate: Ord(S_KEY4);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY5
    name: 'Emerald Key';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8034;                                              // doomednum
    spawnstate: Ord(S_KEY5);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY6
    name: 'Dungeon Key';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8035;                                              // doomednum
    spawnstate: Ord(S_KEY6);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY7
    name: 'Silver Key';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8036;                                              // doomednum
    spawnstate: Ord(S_KEY7);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY8
    name: 'Rusty Key';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8037;                                              // doomednum
    spawnstate: Ord(S_KEY8);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEY9
    name: 'Horn Key';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8038;                                              // doomednum
    spawnstate: Ord(S_KEY9);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEYA
    name: 'Swamp Key';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8039;                                              // doomednum
    spawnstate: Ord(S_KEYA);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KEYB
    name: 'Castle Key';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8200;                                              // doomednum
    spawnstate: Ord(S_KEYB);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 20 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SPECIAL;                                            // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SOUNDWIND
    name: 'MT_SOUNDWIND';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 1410;                                              // doomednum
    spawnstate: Ord(S_SND_WIND1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR;                          // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SOUNDWATERFALL
    name: 'MT_SOUNDWATERFALL';                                    // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 41;                                                // doomednum
    spawnstate: Ord(S_SND_WATERFALL);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR;                          // flags
    flags2: 0;                                                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ETTIN
    name: 'Ettin';                                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10030;                                             // doomednum
    spawnstate: Ord(S_ETTIN_LOOK1);                               // spawnstate
    spawnhealth: 175;                                             // spawnhealth
    seestate: Ord(S_ETTIN_CHASE1);                                // seestate
    seesound: Ord(SFX_ETTIN_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_ETTIN_ATTACK);                           // attacksound
    painstate: Ord(S_ETTIN_PAIN1);                                // painstate
    painchance: 60;                                               // painchance
    painsound: Ord(SFX_ETTIN_PAIN);                               // painsound
    meleestate: Ord(S_ETTIN_ATK1_1);                              // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ETTIN_DEATH1_1);                            // deathstate
    xdeathstate: Ord(S_ETTIN_DEATH2_1);                           // xdeathstate
    deathsound: Ord(SFX_ETTIN_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 25 * FRACUNIT;                                        // radius
    height: 68 * FRACUNIT;                                        // height
    mass: 175;                                                    // mass
    damage: 3;                                                    // damage
    activesound: Ord(SFX_ETTIN_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PUSHWALL or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ETTIN_MACE
    name: 'MT_ETTIN_MACE';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ETTIN_MACE1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ETTIN_MACE5);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_DROPOFF or MF_CORPSE;                               // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON
    name: 'Affrit';                                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10060;                                             // doomednum
    spawnstate: Ord(S_FIRED_SPAWN1);                              // spawnstate
    spawnhealth: 80;                                              // spawnhealth
    seestate: Ord(S_FIRED_LOOK4);                                 // seestate
    seesound: Ord(SFX_FIRED_SPAWN);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_FIRED_PAIN1);                                // painstate
    painchance: 1;                                                // painchance
    painsound: Ord(SFX_FIRED_PAIN);                               // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_FIRED_ATTACK1);                           // missilestate
    crashstate: Ord(S_FIRED_XDEATH1);                             // crashstate
    deathstate: Ord(S_FIRED_DEATH1);                              // deathstate
    xdeathstate: Ord(S_FIRED_XDEATH1);                            // xdeathstate
    deathsound: Ord(SFX_FIRED_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 68 * FRACUNIT;                                        // height
    mass: 75;                                                     // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_FIRED_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_DROPOFF or MF_NOGRAVITY or MF_FLOAT;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_INVULNERABLE or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_SPLOTCH1
    name: 'MT_FIREDEMON_SPLOTCH1';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_CORPSE1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_DROPOFF or MF_CORPSE;                               // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_SPLOTCH2
    name: 'MT_FIREDEMON_SPLOTCH2';                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_CORPSE4);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_DROPOFF or MF_CORPSE;                               // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORCLIP;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_FX1
    name: 'MT_FIREDEMON_FX1';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_RDROP1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIRED_RDEAD1_1);                            // deathstate
    xdeathstate: Ord(S_FIRED_RDEAD1_2);                           // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 16;                                                     // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_FX2
    name: 'MT_FIREDEMON_FX2';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_RDROP2);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIRED_RDEAD2_1);                            // deathstate
    xdeathstate: Ord(S_FIRED_RDEAD2_2);                           // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 16;                                                     // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_FX3
    name: 'MT_FIREDEMON_FX3';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_RDROP3);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIRED_RDEAD3_1);                            // deathstate
    xdeathstate: Ord(S_FIRED_RDEAD3_2);                           // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 16;                                                     // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_FX4
    name: 'MT_FIREDEMON_FX4';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_RDROP4);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIRED_RDEAD4_1);                            // deathstate
    xdeathstate: Ord(S_FIRED_RDEAD4_2);                           // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 16;                                                     // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_FX5
    name: 'MT_FIREDEMON_FX5';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_RDROP5);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIRED_RDEAD5_1);                            // deathstate
    xdeathstate: Ord(S_FIRED_RDEAD5_2);                           // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 16;                                                     // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIREDEMON_FX6
    name: 'MT_FIREDEMON_FX6';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_FIRED_FX6_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIRED_FX6_2);                               // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_FIRED_MISSILE_HIT);                       // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 6 * FRACUNIT;                                         // height
    mass: 15;                                                     // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_DROPOFF or MF_MISSILE;// flags
    flags2: MF2_NOTELEPORT or MF2_IMPACT or MF2_PCROSS or MF2_FLOORCLIP or MF2_FIREDAMAGE;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEGUY
    name: 'Wendigo';                                              // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 8020;                                              // doomednum
    spawnstate: Ord(S_ICEGUY_LOOK);                               // spawnstate
    spawnhealth: 120;                                             // spawnhealth
    seestate: Ord(S_ICEGUY_WALK1);                                // seestate
    seesound: Ord(SFX_ICEGUY_SIGHT);                              // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_ICEGUY_ATTACK);                          // attacksound
    painstate: Ord(S_ICEGUY_PAIN1);                               // painstate
    painchance: 144;                                              // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(0);                                           // meleestate
    missilestate: Ord(S_ICEGUY_ATK1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ICEGUY_DEATH);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 14;                                                    // speed
    radius: 22 * FRACUNIT;                                        // radius
    height: 75 * FRACUNIT;                                        // height
    mass: 150;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_ICEGUY_ACTIVE);                          // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_NOBLOOD;// flags
    flags2: MF2_PASSMOBJ or MF2_PUSHWALL or MF2_ICEDAMAGE or MF2_MCROSS or MF2_TELESTOMP;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEGUY_FX
    name: 'MT_ICEGUY_FX';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICEGUY_FX1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_ICEGUY_FX_X1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_ICEGUY_FX_EXPLODE);                       // deathsound
    speed: 14 * FRACUNIT;                                         // speed
    radius: 8 * FRACUNIT;                                         // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_DROPOFF or MF_NOGRAVITY;// flags
    flags2: MF2_NOTELEPORT or MF2_ICEDAMAGE;                      // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEFX_PUFF
    name: 'MT_ICEFX_PUFF';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICEFX_PUFF1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: FRACUNIT;                                             // radius
    height: FRACUNIT;                                             // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_SHADOW or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    flags2_ex: MF2_EX_DONOTRENDERSHADOW;
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEGUY_FX2
    name: 'MT_ICEGUY_FX2';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICEGUY_FX2_1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 4 * FRACUNIT;                                         // radius
    height: 4 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 1;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_MISSILE;             // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV or MF2_ICEDAMAGE;        // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEGUY_BIT
    name: 'MT_ICEGUY_BIT';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICEGUY_BIT1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: FRACUNIT;                                             // radius
    height: FRACUNIT;                                             // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF;                           // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEGUY_WISP1
    name: 'MT_ICEGUY_WISP1';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICEGUY_WISP1_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ICEGUY_WISP2
    name: 'MT_ICEGUY_WISP2';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ICEGUY_WISP2_1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_FIGHTER_BOSS
    name: 'Zedek';                                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10100;                                             // doomednum
    spawnstate: Ord(S_FIGHTER);                                   // spawnstate
    spawnhealth: 800;                                             // spawnhealth
    seestate: Ord(S_FIGHTER_RUN1);                                // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_FIGHTER_PAIN);                               // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_PLAYER_FIGHTER_PAIN);                      // painsound
    meleestate: Ord(S_FIGHTER_ATK1);                              // meleestate
    missilestate: Ord(S_FIGHTER_ATK1);                            // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_FIGHTER_DIE1);                              // deathstate
    xdeathstate: Ord(S_FIGHTER_XDIE1);                            // xdeathstate
    deathsound: Ord(SFX_PLAYER_FIGHTER_CRAZY_DEATH);              // deathsound
    speed: 25;                                                    // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_TELESTOMP or MF2_PUSHWALL or MF2_MCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CLERIC_BOSS
    name: 'Traductus';                                            // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10101;                                             // doomednum
    spawnstate: Ord(S_CLERIC);                                    // spawnstate
    spawnhealth: 800;                                             // spawnhealth
    seestate: Ord(S_CLERIC_RUN1);                                 // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_CLERIC_PAIN);                                // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_PLAYER_CLERIC_PAIN);                       // painsound
    meleestate: Ord(S_CLERIC_ATK1);                               // meleestate
    missilestate: Ord(S_CLERIC_ATK1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_CLERIC_DIE1);                               // deathstate
    xdeathstate: Ord(S_CLERIC_XDIE1);                             // xdeathstate
    deathsound: Ord(SFX_PLAYER_CLERIC_CRAZY_DEATH);               // deathsound
    speed: 25;                                                    // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_TELESTOMP or MF2_PUSHWALL or MF2_MCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_MAGE_BOSS
    name: 'Menelkir';                                             // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10102;                                             // doomednum
    spawnstate: Ord(S_MAGE);                                      // spawnstate
    spawnhealth: 800;                                             // spawnhealth
    seestate: Ord(S_MAGE_RUN1);                                   // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_MAGE_PAIN);                                  // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_PLAYER_MAGE_PAIN);                         // painsound
    meleestate: Ord(S_MAGE_ATK1);                                 // meleestate
    missilestate: Ord(S_MAGE_ATK1);                               // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_MAGE_DIE1);                                 // deathstate
    xdeathstate: Ord(S_MAGE_XDIE1);                               // xdeathstate
    deathsound: Ord(SFX_PLAYER_MAGE_CRAZY_DEATH);                 // deathsound
    speed: 25;                                                    // speed
    radius: 16 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_TELESTOMP or MF2_PUSHWALL or MF2_MCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCBOSS
    name: 'Heresiarch';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10080;                                             // doomednum
    spawnstate: Ord(S_SORC_SPAWN1);                               // spawnstate
    spawnhealth: 5000;                                            // spawnhealth
    seestate: Ord(S_SORC_WALK1);                                  // seestate
    seesound: Ord(SFX_SORCERER_SIGHT);                            // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_SORC_PAIN1);                                 // painstate
    painchance: 10;                                               // painchance
    painsound: Ord(SFX_SORCERER_PAIN);                            // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_SORC_ATK2_1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORC_DIE1);                                 // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_SORCERER_DEATHSCREAM);                    // deathsound
    speed: 16;                                                    // speed
    radius: 40 * FRACUNIT;                                        // radius
    height: 110 * FRACUNIT;                                       // height
    mass: 500;                                                    // mass
    damage: 9;                                                    // damage
    activesound: Ord(SFX_SORCERER_ACTIVE);                        // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_NOBLOOD;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_PUSHWALL or MF2_BOSS or MF2_MCROSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCBALL1
    name: 'MT_SORCBALL1';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCBALL1_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_SORCERER_BALLBOUNCE);                       // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_SORCBALL1_D1);                               // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORCBALL1_D5);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE;           // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCBALL2
    name: 'MT_SORCBALL2';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCBALL2_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_SORCERER_BALLBOUNCE);                       // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_SORCBALL2_D1);                               // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORCBALL2_D5);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE;           // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCBALL3
    name: 'MT_SORCBALL3';                                         // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCBALL3_1);                               // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_SORCERER_BALLBOUNCE);                       // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_SORCBALL3_D1);                               // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORCBALL3_D5);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 10 * FRACUNIT;                                         // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE;           // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCFX1
    name: 'MT_SORCFX1';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCFX1_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_SORCERER_BALLBOUNCE);                       // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORCFX1_D1);                                // deathstate
    xdeathstate: Ord(S_SORCFX1_D1);                               // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 7 * FRACUNIT;                                          // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE;                           // flags
    flags2: MF2_NOTELEPORT or MF2_FLOORBOUNCE;                    // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCFX2
    name: 'MT_SORCFX2';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCFX2_SPLIT1);                            // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORCFX2T1);                                 // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 15 * FRACUNIT;                                         // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY;                         // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCFX2_T1
    name: 'MT_SORCFX2_T1';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCFX2T1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_ALTSHADOW;         // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCFX3
    name: 'MT_SORCFX3';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCFX3_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_SORCERER_BISHOPSPAWN);                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_BISHMORPH1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 15 * FRACUNIT;                                         // speed
    radius: 22 * FRACUNIT;                                        // radius
    height: 65 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE;                           // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCFX3_EXPLOSION
    name: 'MT_SORCFX3_EXPLOSION';                                 // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCFX3_EXP1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_ALTSHADOW;         // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCFX4
    name: 'MT_SORCFX4';                                           // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCFX4_1);                                 // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_SORCFX4_D1);                                // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_SORCERER_BALLEXPLODE);                    // deathsound
    speed: 12 * FRACUNIT;                                         // speed
    radius: 10 * FRACUNIT;                                        // radius
    height: 10 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_MISSILE or MF_NOGRAVITY;           // flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_SORCSPARK1
    name: 'MT_SORCSPARK1';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_SORCSPARK1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 5 * FRACUNIT;                                         // radius
    height: 5 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF;                           // flags
    flags2: MF2_NOTELEPORT or MF2_LOGRAV;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BLASTEFFECT
    name: 'MT_BLASTEFFECT';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BLASTEFFECT1);                              // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_NOCLIP or MF_ALTSHADOW;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_WATER_DRIP
    name: 'MT_WATER_DRIP';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_WATERDRIP1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DRIP);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 1;                                                      // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_MISSILE;                                            // flags
    flags2: MF2_LOGRAV or MF2_NOTELEPORT;                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX
    name: 'Korax';                                                // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10200;                                             // doomednum
    spawnstate: Ord(S_KORAX_LOOK1);                               // spawnstate
    spawnhealth: 5000;                                            // spawnhealth
    seestate: Ord(S_KORAX_CHASE2);                                // seestate
    seesound: Ord(SFX_KORAX_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_KORAX_ATTACK);                           // attacksound
    painstate: Ord(S_KORAX_PAIN1);                                // painstate
    painchance: 20;                                               // painchance
    painsound: Ord(SFX_KORAX_PAIN);                               // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_KORAX_ATTACK1);                           // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_KORAX_DEATH1);                              // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_KORAX_DEATH);                             // deathsound
    speed: 10;                                                    // speed
    radius: 65 * FRACUNIT;                                        // radius
    height: 115 * FRACUNIT;                                       // height
    mass: 2000;                                                   // mass
    damage: 15;                                                   // damage
    activesound: Ord(SFX_KORAX_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL;              // flags
    flags2: MF2_FLOORCLIP or MF2_PUSHWALL or MF2_MCROSS or MF2_TELESTOMP or MF2_BOSS;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_SPIRIT1
    name: 'MT_KORAX_SPIRIT1';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KSPIRIT_ROAM1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 8 * FRACUNIT;                                          // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_SPIRIT2
    name: 'MT_KORAX_SPIRIT2';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KSPIRIT_ROAM1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 8 * FRACUNIT;                                          // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_SPIRIT3
    name: 'MT_KORAX_SPIRIT3';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KSPIRIT_ROAM1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 8 * FRACUNIT;                                          // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_SPIRIT4
    name: 'MT_KORAX_SPIRIT4';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KSPIRIT_ROAM1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 8 * FRACUNIT;                                          // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_SPIRIT5
    name: 'MT_KORAX_SPIRIT5';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KSPIRIT_ROAM1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 8 * FRACUNIT;                                          // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_SPIRIT6
    name: 'MT_KORAX_SPIRIT6';                                     // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KSPIRIT_ROAM1);                             // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 8 * FRACUNIT;                                          // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_DROPOFF or MF_NOGRAVITY or MF_ALTSHADOW or MF_MISSILE or MF_NOCLIP;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON_MASH
    name: 'MT_DEMON_MASH';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMN_LOOK1);                                // spawnstate
    spawnhealth: 250;                                             // spawnhealth
    seestate: Ord(S_DEMN_CHASE1);                                 // seestate
    seesound: Ord(SFX_DEMON_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_DEMON_ATTACK);                           // attacksound
    painstate: Ord(S_DEMN_PAIN1);                                 // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_DEMON_PAIN);                               // painsound
    meleestate: Ord(S_DEMN_ATK1_1);                               // meleestate
    missilestate: Ord(S_DEMN_ATK2_1);                             // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DEMON_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 220;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_DEMON_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_ALTSHADOW or MF_NOBLOOD;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_MCROSS or MF2_PUSHWALL or MF2_BLASTED;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_DEMON2_MASH
    name: 'MT_DEMON2_MASH';                                       // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_DEMN2_LOOK1);                               // spawnstate
    spawnhealth: 250;                                             // spawnhealth
    seestate: Ord(S_DEMN2_CHASE1);                                // seestate
    seesound: Ord(SFX_DEMON_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_DEMON_ATTACK);                           // attacksound
    painstate: Ord(S_DEMN2_PAIN1);                                // painstate
    painchance: 50;                                               // painchance
    painsound: Ord(SFX_DEMON_PAIN);                               // painsound
    meleestate: Ord(S_DEMN2_ATK1_1);                              // meleestate
    missilestate: Ord(S_DEMN2_ATK2_1);                            // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_DEMON_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 32 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 220;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_DEMON_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_ALTSHADOW or MF_NOBLOOD;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_MCROSS or MF2_PUSHWALL or MF2_BLASTED;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_ETTIN_MASH
    name: 'MT_ETTIN_MASH';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_ETTIN_LOOK1);                               // spawnstate
    spawnhealth: 175;                                             // spawnhealth
    seestate: Ord(S_ETTIN_CHASE1);                                // seestate
    seesound: Ord(SFX_ETTIN_SIGHT);                               // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_ETTIN_ATTACK);                           // attacksound
    painstate: Ord(S_ETTIN_PAIN1);                                // painstate
    painchance: 60;                                               // painchance
    painsound: Ord(SFX_ETTIN_PAIN);                               // painsound
    meleestate: Ord(S_ETTIN_ATK1_1);                              // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_ETTIN_DEATH);                             // deathsound
    speed: 13;                                                    // speed
    radius: 25 * FRACUNIT;                                        // radius
    height: 68 * FRACUNIT;                                        // height
    mass: 175;                                                    // mass
    damage: 3;                                                    // damage
    activesound: Ord(SFX_ETTIN_ACTIVE);                           // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_ALTSHADOW or MF_NOBLOOD;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_MCROSS or MF2_PUSHWALL or MF2_BLASTED;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_CENTAUR_MASH
    name: 'MT_CENTAUR_MASH';                                      // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_CENTAUR_LOOK1);                             // spawnstate
    spawnhealth: 200;                                             // spawnhealth
    seestate: Ord(S_CENTAUR_WALK1);                               // seestate
    seesound: Ord(SFX_CENTAUR_SIGHT);                             // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_CENTAUR_ATTACK);                         // attacksound
    painstate: Ord(S_CENTAUR_PAIN1);                              // painstate
    painchance: 135;                                              // painchance
    painsound: Ord(SFX_CENTAUR_PAIN);                             // painsound
    meleestate: Ord(S_CENTAUR_ATK1);                              // meleestate
    missilestate: Ord(0);                                         // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_CENTAUR_DEATH);                           // deathsound
    speed: 13;                                                    // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 64 * FRACUNIT;                                        // height
    mass: 120;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_CENTAUR_ACTIVE);                         // activesound
    flags: MF_SOLID or MF_SHOOTABLE or MF_COUNTKILL or MF_ALTSHADOW or MF_NOBLOOD;// flags
    flags2: MF2_FLOORCLIP or MF2_PASSMOBJ or MF2_MCROSS or MF2_PUSHWALL or MF2_BLASTED;// flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_KORAX_BOLT
    name: 'MT_KORAX_BOLT';                                        // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_KBOLT1);                                    // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 15 * FRACUNIT;                                        // radius
    height: 35 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE or MF_DROPOFF;// flags
    flags2: MF2_NOTELEPORT;                                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BAT_SPAWNER
    name: 'Bat Spawner';                                          // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: 10225;                                             // doomednum
    spawnstate: Ord(S_SPAWNBATS1);                                // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_NULL);                                      // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 0;                                                     // speed
    radius: 20 * FRACUNIT;                                        // radius
    height: 16 * FRACUNIT;                                        // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOSECTOR or MF_NOGRAVITY;          // flags
    flags2: MF2_DONTDRAW;                                         // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  ),

  (    // MT_BAT
    name: 'MT_BAT';                                               // name
    inheritsfrom: -1;                                             // inheritsfrom
    doomednum: -1;                                                // doomednum
    spawnstate: Ord(S_BAT1);                                      // spawnstate
    spawnhealth: 1000;                                            // spawnhealth
    seestate: Ord(S_NULL);                                        // seestate
    seesound: Ord(SFX_NONE);                                      // seesound
    reactiontime: 8;                                              // reactiontime
    attacksound: Ord(SFX_NONE);                                   // attacksound
    painstate: Ord(S_NULL);                                       // painstate
    painchance: 0;                                                // painchance
    painsound: Ord(SFX_NONE);                                     // painsound
    meleestate: Ord(S_NULL);                                      // meleestate
    missilestate: Ord(S_NULL);                                    // missilestate
    crashstate: Ord(S_NULL);                                      // crashstate
    deathstate: Ord(S_BAT_DEATH);                                 // deathstate
    xdeathstate: Ord(S_NULL);                                     // xdeathstate
    deathsound: Ord(SFX_NONE);                                    // deathsound
    speed: 5 * FRACUNIT;                                          // speed
    radius: 3 * FRACUNIT;                                         // radius
    height: 3 * FRACUNIT;                                         // height
    mass: 100;                                                    // mass
    damage: 0;                                                    // damage
    activesound: Ord(SFX_NONE);                                   // activesound
    flags: MF_NOBLOCKMAP or MF_NOGRAVITY or MF_MISSILE;           // flags
    flags2: MF2_PASSMOBJ or MF2_NOTELEPORT;                       // flags2
    pushfactor: DEFPUSHFACTOR;                                    // pushfactor
    scale: FRACUNIT;                                              // scale
    gravity: FRACUNIT;                                            // gravity
    flags3_ex: 0;                                                 // flags3_ex
    flags4_ex: 0;                                                 // flags4_ex
  )
  
  );

procedure Info_Init(const usethinkers: boolean);
var
  i: integer;
begin
  Info_InitDnLookUp;
  if states = nil then
  begin
    states := malloc(Ord(DO_NUMSTATES) * SizeOf(state_t));
    memcpy(states, @DO_states, Ord(DO_NUMSTATES) * SizeOf(state_t));
  end;

  if sprnames = nil then
  begin
    sprnames := malloc(Ord(DO_NUMSPRITES) * 4 + 4);
    for i := 0 to Ord(DO_NUMSPRITES) - 1 do
      sprnames[i] := Ord(DO_sprnames[i][1]) +
                     Ord(DO_sprnames[i][2]) shl 8 +
                     Ord(DO_sprnames[i][3]) shl 16 +
                     Ord(DO_sprnames[i][4]) shl 24;
    sprnames[Ord(DO_NUMSPRITES)] := 0;
  end;

  if mobjinfo = nil then
  begin
    mobjinfo := malloc(Ord(DO_NUMMOBJTYPES) * SizeOf(mobjinfo_t));
    memcpy(mobjinfo, @DO_mobjinfo, Ord(DO_NUMMOBJTYPES) * SizeOf(mobjinfo_t));
  end;

  if not usethinkers then
  begin
    Info_SaveActions;
    for i := 0 to Ord(DO_NUMSTATES) - 1 do
      states[i].action.acp1 := nil;
    exit;
  end;

  if Info_RestoreActions then
    exit;

  states[Ord(S_FREETARGMOBJ)].action.acp1 := @A_FreeTargMobj;
  states[Ord(S_FLAME_TSMALL3)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TSMALL6)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE2)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE4)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE6)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE8)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE10)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE12)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE14)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_TLARGE16)].action.acp1 := @A_FlameCheck;
  states[Ord(S_FLAME_SDORM2)].action.acp1 := @A_HideThing;
  states[Ord(S_FLAME_SMALL2)].action.acp1 := @A_UnHideThing;
  states[Ord(S_FLAME_LDORM4)].action.acp1 := @A_HideThing;
  states[Ord(S_FLAME_LARGE2)].action.acp1 := @A_UnHideThing;
  states[Ord(S_HIDESPECIAL2)].action.acp1 := @A_RestoreSpecialThing1;
  states[Ord(S_HIDESPECIAL11)].action.acp1 := @A_RestoreSpecialThing2;
  states[Ord(S_DORMANTARTI1_11)].action.acp1 := @A_HideThing;
  states[Ord(S_DORMANTARTI1_12)].action.acp1 := @A_UnHideThing;
  states[Ord(S_DORMANTARTI1_21)].action.acp1 := @A_RestoreArtifact;
  states[Ord(S_DORMANTARTI2_11)].action.acp1 := @A_HideThing;
  states[Ord(S_DORMANTARTI2_12)].action.acp1 := @A_UnHideThing;
  states[Ord(S_DORMANTARTI2_21)].action.acp1 := @A_RestoreArtifact;
  states[Ord(S_DORMANTARTI3_11)].action.acp1 := @A_HideThing;
  states[Ord(S_DORMANTARTI3_12)].action.acp1 := @A_UnHideThing;
  states[Ord(S_DORMANTARTI3_21)].action.acp1 := @A_RestoreArtifact;
  states[Ord(S_SUMMON_FX2_3)].action.acp1 := @A_Summon;
  states[Ord(S_THRUSTINIT2_2)].action.acp1 := @A_ThrustInitUp;
  states[Ord(S_BTHRUSTINIT2_2)].action.acp1 := @A_ThrustInitUp;
  states[Ord(S_THRUSTINIT1_2)].action.acp1 := @A_ThrustInitDn;
  states[Ord(S_BTHRUSTINIT1_2)].action.acp1 := @A_ThrustInitDn;
  states[Ord(S_THRUSTRAISE1)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_THRUSTRAISE2)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_THRUSTRAISE3)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_THRUSTRAISE4)].action.acp1 := @A_ThrustBlock;
  states[Ord(S_BTHRUSTRAISE1)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_BTHRUSTRAISE2)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_BTHRUSTRAISE3)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_BTHRUSTRAISE4)].action.acp1 := @A_ThrustBlock;
  states[Ord(S_THRUSTIMPALE)].action.acp1 := @A_ThrustImpale;
  states[Ord(S_BTHRUSTIMPALE)].action.acp1 := @A_ThrustImpale;
  states[Ord(S_THRUSTRAISE)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_BTHRUSTRAISE)].action.acp1 := @A_ThrustRaise;
  states[Ord(S_THRUSTLOWER)].action.acp1 := @A_ThrustLower;
  states[Ord(S_BTHRUSTLOWER)].action.acp1 := @A_ThrustLower;
  states[Ord(S_TELO_FX3)].action.acp1 := @A_TeloSpawnC;
  states[Ord(S_TELO_FX4)].action.acp1 := @A_TeloSpawnB;
  states[Ord(S_TELO_FX5)].action.acp1 := @A_TeloSpawnA;
  states[Ord(S_TELO_FX6)].action.acp1 := @A_TeloSpawnB;
  states[Ord(S_TELO_FX7)].action.acp1 := @A_TeloSpawnC;
  states[Ord(S_TELO_FX8)].action.acp1 := @A_TeloSpawnD;
  states[Ord(S_TELO_FX2_6)].action.acp1 := @A_CheckTeleRing;
  states[Ord(S_TELO_FX3_6)].action.acp1 := @A_CheckTeleRing;
  states[Ord(S_TELO_FX4_6)].action.acp1 := @A_CheckTeleRing;
  states[Ord(S_TELO_FX5_6)].action.acp1 := @A_CheckTeleRing;
  states[Ord(S_SPAWNFOG1)].action.acp1 := @A_FogSpawn;
  states[Ord(S_FOGPATCHS1)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHS2)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHS3)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHS4)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHS5)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHM1)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHM2)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHM3)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHM4)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHM5)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHL1)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHL2)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHL3)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHL4)].action.acp1 := @A_FogMove;
  states[Ord(S_FOGPATCHL5)].action.acp1 := @A_FogMove;
  states[Ord(S_QUAKE_ACTIVE1)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE2)].action.acp1 := @A_ContMobjSound;
  states[Ord(S_QUAKE_ACTIVE3)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE4)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE5)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE6)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE7)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE8)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE9)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVE0)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEA)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEB)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEC)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVED)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEE)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEF)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEG)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEH)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEI)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEJ)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEK)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEL)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEM)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEN)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEO)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEP)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEQ)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVER)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVES)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVET)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEU)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEV)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEW)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEX)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEY)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACTIVEZ)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT1)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT2)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT3)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT4)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT5)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT6)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT7)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT8)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT9)].action.acp1 := @A_Quake;
  states[Ord(S_QUAKE_ACT0)].action.acp1 := @A_Quake;
  states[Ord(S_FIREBOMB5)].action.acp1 := @A_Scream;
  states[Ord(S_FIREBOMB6)].action.acp1 := @A_Explode;
  states[Ord(S_POISONBAG4)].action.acp1 := @A_PoisonBagInit;
  states[Ord(S_POISONCLOUD2)].action.acp1 := @A_Scream;
  states[Ord(S_POISONCLOUD3)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD4)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD5)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD6)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD7)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD8)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD9)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD10)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD11)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD12)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD13)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD14)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD15)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD16)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD17)].action.acp1 := @A_PoisonBagDamage;
  states[Ord(S_POISONCLOUD18)].action.acp1 := @A_PoisonBagCheck;
  states[Ord(S_THROWINGBOMB1)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB2)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB3)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB4)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB5)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB6)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB7)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB8)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB9)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB10)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB11)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB12)].action.acp1 := @A_CheckThrowBomb;
  states[Ord(S_THROWINGBOMB_X1)].action.acp1 := @A_NoGravity;
  states[Ord(S_THROWINGBOMB_X2)].action.acp1 := @A_Scream;
  states[Ord(S_THROWINGBOMB_X3)].action.acp1 := @A_Explode;
  states[Ord(S_ZTREEDES_D2)].action.acp1 := @A_Scream;
  states[Ord(S_ZTREEDES_X6)].action.acp1 := @A_Explode;
  states[Ord(S_ZPOTTERY_EXPLODE)].action.acp1 := @A_PotteryExplode;
  states[Ord(S_POTTERYBIT_EX0)].action.acp1 := @A_PotteryChooseBit;
  states[Ord(S_POTTERYBIT_EX1_2)].action.acp1 := @A_PotteryCheck;
  states[Ord(S_POTTERYBIT_EX2_2)].action.acp1 := @A_PotteryCheck;
  states[Ord(S_POTTERYBIT_EX3_2)].action.acp1 := @A_PotteryCheck;
  states[Ord(S_POTTERYBIT_EX4_2)].action.acp1 := @A_PotteryCheck;
  states[Ord(S_POTTERYBIT_EX5_2)].action.acp1 := @A_PotteryCheck;
  states[Ord(S_ZCORPSELYNCHED2)].action.acp1 := @A_CorpseBloodDrip;
  states[Ord(S_ZCORPSESITTING_X)].action.acp1 := @A_CorpseExplode;
  states[Ord(S_ZLEAFSPAWNER)].action.acp1 := @A_LeafSpawn;
  states[Ord(S_LEAF1_4)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF1_8)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF1_12)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF1_16)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF_X1)].action.acp1 := @A_LeafCheck;
  states[Ord(S_LEAF2_4)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF2_8)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF2_12)].action.acp1 := @A_LeafThrust;
  states[Ord(S_LEAF2_16)].action.acp1 := @A_LeafThrust;
  states[Ord(S_BRIDGE2)].action.acp1 := @A_BridgeInit;
  states[Ord(S_BBALL2)].action.acp1 := @A_BridgeOrbit;
  states[Ord(S_ZSHRUB1_DIE)].action.acp1 := @A_TreeDeath;
  states[Ord(S_ZSHRUB1_X2)].action.acp1 := @A_Scream;
  states[Ord(S_ZSHRUB2_DIE)].action.acp1 := @A_TreeDeath;
  states[Ord(S_ZSHRUB2_X2)].action.acp1 := @A_Scream;
  states[Ord(S_ZSHRUB2_X3)].action.acp1 := @A_Explode;
  states[Ord(S_ZPOISONSHROOM1)].action.acp1 := @A_PoisonShroom;
  states[Ord(S_ZPOISONSHROOM_P2)].action.acp1 := @A_Pain;
  states[Ord(S_ZPOISONSHROOM_X3)].action.acp1 := @A_PoisonBagInit;
  states[Ord(S_ZSUITOFARMOR_X1)].action.acp1 := @A_SoAExplode;
  states[Ord(S_ZBELL_X1)].action.acp1 := @A_BellReset1;
  states[Ord(S_ZBELL_X4)].action.acp1 := @A_Scream;
  states[Ord(S_ZBELL_X10)].action.acp1 := @A_Scream;
  states[Ord(S_ZBELL_X16)].action.acp1 := @A_Scream;
  states[Ord(S_ZBELL_X22)].action.acp1 := @A_Scream;
  states[Ord(S_ZBELL_X28)].action.acp1 := @A_Scream;
  states[Ord(S_ZBELL_X34)].action.acp1 := @A_Scream;
  states[Ord(S_ZBELL_X47)].action.acp1 := @A_BellReset2;
  states[Ord(S_ZXMAS_TREE_DIE)].action.acp1 := @A_TreeDeath;
  states[Ord(S_ZXMAS_TREE_X2)].action.acp1 := @A_Scream;
  states[Ord(S_ZXMAS_TREE_X4)].action.acp1 := @A_Explode;
  states[Ord(S_ZXMAS_TREE_X8)].action.acp1 := @A_NoBlocking;
  states[Ord(S_LIGHTDONE)].action.acp1 := @A_Light0;
  states[Ord(S_PUNCHREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_PUNCHDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_PUNCHUP)].action.acp1 := @A_Raise;
  states[Ord(S_PUNCHATK1_3)].action.acp1 := @A_FPunchAttack;
  states[Ord(S_PUNCHATK1_5)].action.acp1 := @A_ReFire;
  states[Ord(S_FAXEREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_FAXEUP)].action.acp1 := @A_Raise;
  states[Ord(S_FAXEATK_4)].action.acp1 := @A_FAxeAttack;
  states[Ord(S_FAXEATK_9)].action.acp1 := @A_ReFire;
  states[Ord(S_FAXEREADY_G)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEREADY_G1)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEREADY_G2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEREADY_G3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEREADY_G4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEREADY_G5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FAXEDOWN_G)].action.acp1 := @A_Lower;
  states[Ord(S_FAXEUP_G)].action.acp1 := @A_Raise;
  states[Ord(S_FAXEATK_G4)].action.acp1 := @A_FAxeAttack;
  states[Ord(S_FAXEATK_G9)].action.acp1 := @A_ReFire;
  states[Ord(S_FHAMMERREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FHAMMERDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_FHAMMERUP)].action.acp1 := @A_Raise;
  states[Ord(S_FHAMMERATK_2)].action.acp1 := @A_FHammerAttack;
  states[Ord(S_FHAMMERATK_5)].action.acp1 := @A_FHammerThrow;
  states[Ord(S_HAMMER_MISSILE_2)].action.acp1 := @A_ContMobjSound;
  states[Ord(S_HAMMER_MISSILE_X3)].action.acp1 := @A_Explode;
  states[Ord(S_FSWORDREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY1)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY6)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY7)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY8)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY9)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY10)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDREADY11)].action.acp1 := @A_WeaponReady;
  states[Ord(S_FSWORDDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_FSWORDUP)].action.acp1 := @A_Raise;
  states[Ord(S_FSWORDATK_4)].action.acp1 := @A_FSwordAttack;
  states[Ord(S_FSWORD_MISSILE_X2)].action.acp1 := @A_FSwordFlames;
  states[Ord(S_FSWORD_MISSILE_X3)].action.acp1 := @A_Explode;
  states[Ord(S_CMACEREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CMACEDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_CMACEUP)].action.acp1 := @A_Raise;
  states[Ord(S_CMACEATK_7)].action.acp1 := @A_CMaceAttack;
  states[Ord(S_CMACEATK_12)].action.acp1 := @A_ReFire;
  states[Ord(S_CSTAFFREADY1)].action.acp1 := @A_CStaffInitBlink;
  states[Ord(S_CSTAFFREADY2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY6)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY7)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY8)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFREADY9)].action.acp1 := @A_CStaffCheckBlink;
  states[Ord(S_CSTAFFBLINK1)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK6)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK7)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK8)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK9)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK10)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFBLINK11)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CSTAFFDOWN3)].action.acp1 := @A_Lower;
  states[Ord(S_CSTAFFUP)].action.acp1 := @A_Raise;
  states[Ord(S_CSTAFFATK_1)].action.acp1 := @A_CStaffCheck;
  states[Ord(S_CSTAFFATK_2)].action.acp1 := @A_CStaffAttack;
  states[Ord(S_CSTAFF_MISSILE1)].action.acp1 := @A_CStaffMissileSlither;
  states[Ord(S_CSTAFF_MISSILE2)].action.acp1 := @A_CStaffMissileSlither;
  states[Ord(S_CSTAFF_MISSILE3)].action.acp1 := @A_CStaffMissileSlither;
  states[Ord(S_CSTAFF_MISSILE4)].action.acp1 := @A_CStaffMissileSlither;
  states[Ord(S_CFLAMEREADY1)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY6)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY7)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY8)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY9)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY10)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY11)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEREADY12)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CFLAMEDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_CFLAMEUP)].action.acp1 := @A_Raise;
  states[Ord(S_CFLAMEATK_5)].action.acp1 := @A_CFlameAttack;
  states[Ord(S_CIRCLE_FLAME2)].action.acp1 := @A_CFlameRotate;
  states[Ord(S_CIRCLE_FLAME6)].action.acp1 := @A_CFlameRotate;
  states[Ord(S_CIRCLE_FLAME10)].action.acp1 := @A_CFlameRotate;
  states[Ord(S_CIRCLE_FLAME14)].action.acp1 := @A_CFlameRotate;
  states[Ord(S_CIRCLE_FLAME_X3)].action.acp1 := @A_Explode;
  states[Ord(S_CFLAME_MISSILE2)].action.acp1 := @A_CFlamePuff;
  states[Ord(S_CFLAME_MISSILE_X)].action.acp1 := @A_CFlameMissile;
  states[Ord(S_CHOLYREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CHOLYDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_CHOLYUP)].action.acp1 := @A_Raise;
  states[Ord(S_CHOLYATK_6)].action.acp1 := @A_CHolyAttack;
  states[Ord(S_CHOLYATK_7)].action.acp1 := @A_CHolyPalette;
  states[Ord(S_CHOLYATK_8)].action.acp1 := @A_CHolyPalette;
  states[Ord(S_CHOLYATK_9)].action.acp1 := @A_CHolyPalette;
  states[Ord(S_HOLY_FX1)].action.acp1 := @A_CHolySeek;
  states[Ord(S_HOLY_FX2)].action.acp1 := @A_CHolySeek;
  states[Ord(S_HOLY_FX3)].action.acp1 := @A_CHolySeek;
  states[Ord(S_HOLY_FX4)].action.acp1 := @A_CHolyCheckScream;
  states[Ord(S_HOLY_FX_X2)].action.acp1 := @A_Scream;
  states[Ord(S_HOLY_TAIL1)].action.acp1 := @A_CHolyTail;
  states[Ord(S_HOLY_MISSILE1)].action.acp1 := @A_CHolySpawnPuff;
  states[Ord(S_HOLY_MISSILE2)].action.acp1 := @A_CHolySpawnPuff;
  states[Ord(S_HOLY_MISSILE3)].action.acp1 := @A_CHolySpawnPuff;
  states[Ord(S_HOLY_MISSILE4)].action.acp1 := @A_CHolySpawnPuff;
  states[Ord(S_HOLY_MISSILE_X)].action.acp1 := @A_CHolyAttack2;
  states[Ord(S_MWANDREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MWANDDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_MWANDUP)].action.acp1 := @A_Raise;
  states[Ord(S_MWANDATK_2)].action.acp1 := @A_MWandAttack;
  states[Ord(S_MWANDATK_4)].action.acp1 := @A_ReFire;
  states[Ord(S_MLIGHTNINGREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY6)].action.acp1 := @A_LightningReady;
  states[Ord(S_MLIGHTNINGREADY7)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY8)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY9)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY10)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY11)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY12)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY13)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY14)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY15)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY16)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY17)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY18)].action.acp1 := @A_LightningReady;
  states[Ord(S_MLIGHTNINGREADY19)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY20)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY21)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY22)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY23)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGREADY24)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MLIGHTNINGDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_MLIGHTNINGUP)].action.acp1 := @A_Raise;
  states[Ord(S_MLIGHTNINGATK_3)].action.acp1 := @A_MLightningAttack;
  states[Ord(S_LIGHTNING_CEILING1)].action.acp1 := @A_LightningZap;
  states[Ord(S_LIGHTNING_CEILING2)].action.acp1 := @A_LightningClip;
  states[Ord(S_LIGHTNING_CEILING3)].action.acp1 := @A_LightningClip;
  states[Ord(S_LIGHTNING_CEILING4)].action.acp1 := @A_LightningClip;
  states[Ord(S_LIGHTNING_C_X1)].action.acp1 := @A_LightningRemove;
  states[Ord(S_LIGHTNING_C_X19)].action.acp1 := @A_HideThing;
  states[Ord(S_LIGHTNING_FLOOR1)].action.acp1 := @A_LightningZap;
  states[Ord(S_LIGHTNING_FLOOR2)].action.acp1 := @A_LightningClip;
  states[Ord(S_LIGHTNING_FLOOR3)].action.acp1 := @A_LightningClip;
  states[Ord(S_LIGHTNING_FLOOR4)].action.acp1 := @A_LightningClip;
  states[Ord(S_LIGHTNING_F_X1)].action.acp1 := @A_LightningRemove;
  states[Ord(S_LIGHTNING_F_X15)].action.acp1 := @A_LastZap;
  states[Ord(S_LIGHTNING_F_X19)].action.acp1 := @A_HideThing;
  states[Ord(S_LIGHTNING_ZAP1)].action.acp1 := @A_ZapMimic;
  states[Ord(S_LIGHTNING_ZAP2)].action.acp1 := @A_ZapMimic;
  states[Ord(S_LIGHTNING_ZAP3)].action.acp1 := @A_ZapMimic;
  states[Ord(S_LIGHTNING_ZAP4)].action.acp1 := @A_ZapMimic;
  states[Ord(S_LIGHTNING_ZAP5)].action.acp1 := @A_ZapMimic;
  states[Ord(S_MSTAFFREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY2)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY3)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY4)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY5)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY6)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY7)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY8)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY9)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY10)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY11)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY12)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY13)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY14)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY15)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY16)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY17)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY18)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY19)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY20)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY21)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY22)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY23)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY24)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY25)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY26)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY27)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY28)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY29)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY30)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY31)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY32)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY33)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY34)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFREADY35)].action.acp1 := @A_WeaponReady;
  states[Ord(S_MSTAFFDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_MSTAFFUP)].action.acp1 := @A_Raise;
  states[Ord(S_MSTAFFATK_2)].action.acp1 := @A_MStaffAttack;
  states[Ord(S_MSTAFFATK_3)].action.acp1 := @A_MStaffPalette;
  states[Ord(S_MSTAFFATK_4)].action.acp1 := @A_MStaffPalette;
  states[Ord(S_MSTAFFATK_5)].action.acp1 := @A_MStaffPalette;
  states[Ord(S_MSTAFF_FX1_1)].action.acp1 := @A_MStaffWeave;
  states[Ord(S_MSTAFF_FX1_2)].action.acp1 := @A_MStaffWeave;
  states[Ord(S_MSTAFF_FX1_3)].action.acp1 := @A_MStaffWeave;
  states[Ord(S_MSTAFF_FX1_4)].action.acp1 := @A_MStaffWeave;
  states[Ord(S_MSTAFF_FX1_5)].action.acp1 := @A_MStaffWeave;
  states[Ord(S_MSTAFF_FX1_6)].action.acp1 := @A_MStaffWeave;
  states[Ord(S_MSTAFF_FX_X2)].action.acp1 := @A_Explode;
  states[Ord(S_MSTAFF_FX2_1)].action.acp1 := @A_MStaffTrack;
  states[Ord(S_MSTAFF_FX2_2)].action.acp1 := @A_MStaffTrack;
  states[Ord(S_MSTAFF_FX2_3)].action.acp1 := @A_MStaffTrack;
  states[Ord(S_MSTAFF_FX2_4)].action.acp1 := @A_MStaffTrack;
  states[Ord(S_MSTAFF_FX2_X2)].action.acp1 := @A_Explode;
  states[Ord(S_SNOUTREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_SNOUTDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_SNOUTUP)].action.acp1 := @A_Raise;
  states[Ord(S_SNOUTATK1)].action.acp1 := @A_SnoutAttack;
  states[Ord(S_SNOUTATK2)].action.acp1 := @A_SnoutAttack;
  states[Ord(S_CONEREADY)].action.acp1 := @A_WeaponReady;
  states[Ord(S_CONEDOWN)].action.acp1 := @A_Lower;
  states[Ord(S_CONEUP)].action.acp1 := @A_Raise;
  states[Ord(S_CONEATK1_5)].action.acp1 := @A_FireConePL1;
  states[Ord(S_CONEATK1_8)].action.acp1 := @A_ReFire;
  states[Ord(S_SHARDFX1_2)].action.acp1 := @A_ShedShard;
  states[Ord(S_FPLAY_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_FPLAY_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_FPLAY_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_FPLAY_DIE7)].action.acp1 := @A_AddPlayerCorpse;
  states[Ord(S_FPLAY_XDIE1)].action.acp1 := @A_Scream;
  states[Ord(S_FPLAY_XDIE2)].action.acp1 := @A_SkullPop;
  states[Ord(S_FPLAY_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_FPLAY_XDIE8)].action.acp1 := @A_AddPlayerCorpse;
  states[Ord(S_FPLAY_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_FPLAY_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_PLAY_FDTH4)].action.acp1 := @A_Scream;
  states[Ord(S_PLAY_FDTH15)].action.acp1 := @A_NoBlocking;
  states[Ord(S_PLAY_FDTH19)].action.acp1 := @A_CheckBurnGone;
  states[Ord(S_BLOODYSKULL1)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULL2)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULL3)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULL4)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULL5)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULL6)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULL7)].action.acp1 := @A_CheckSkullFloor;
  states[Ord(S_BLOODYSKULLX1)].action.acp1 := @A_CheckSkullDone;
  states[Ord(S_PLAYER_SPEED2)].action.acp1 := @A_SpeedFade;
  states[Ord(S_ICECHUNK2)].action.acp1 := @A_IceSetTics;
  states[Ord(S_ICECHUNK3)].action.acp1 := @A_IceSetTics;
  states[Ord(S_ICECHUNK4)].action.acp1 := @A_IceSetTics;
  states[Ord(S_ICECHUNK_HEAD)].action.acp1 := @A_IceCheckHeadDone;
  states[Ord(S_CPLAY_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_CPLAY_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_CPLAY_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_CPLAY_DIE9)].action.acp1 := @A_AddPlayerCorpse;
  states[Ord(S_CPLAY_XDIE1)].action.acp1 := @A_Scream;
  states[Ord(S_CPLAY_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_CPLAY_XDIE10)].action.acp1 := @A_AddPlayerCorpse;
  states[Ord(S_CPLAY_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_CPLAY_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_MPLAY_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_MPLAY_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_MPLAY_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_MPLAY_DIE7)].action.acp1 := @A_AddPlayerCorpse;
  states[Ord(S_MPLAY_XDIE1)].action.acp1 := @A_Scream;
  states[Ord(S_MPLAY_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_MPLAY_XDIE9)].action.acp1 := @A_AddPlayerCorpse;
  states[Ord(S_MPLAY_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_MPLAY_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_PIGPLAY_PAIN)].action.acp1 := @A_PigPain;
  states[Ord(S_PIG_LOOK1)].action.acp1 := @A_PigLook;
  states[Ord(S_PIG_WALK1)].action.acp1 := @A_PigChase;
  states[Ord(S_PIG_WALK2)].action.acp1 := @A_PigChase;
  states[Ord(S_PIG_WALK3)].action.acp1 := @A_PigChase;
  states[Ord(S_PIG_WALK4)].action.acp1 := @A_PigChase;
  states[Ord(S_PIG_PAIN)].action.acp1 := @A_PigPain;
  states[Ord(S_PIG_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_PIG_ATK2)].action.acp1 := @A_PigAttack;
  states[Ord(S_PIG_DIE1)].action.acp1 := @A_Scream;
  states[Ord(S_PIG_DIE2)].action.acp1 := @A_NoBlocking;
  states[Ord(S_PIG_DIE3)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_PIG_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_PIG_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_CENTAUR_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_CENTAUR_LOOK2)].action.acp1 := @A_Look;
  states[Ord(S_CENTAUR_WALK1)].action.acp1 := @A_Chase;
  states[Ord(S_CENTAUR_WALK2)].action.acp1 := @A_Chase;
  states[Ord(S_CENTAUR_WALK3)].action.acp1 := @A_Chase;
  states[Ord(S_CENTAUR_WALK4)].action.acp1 := @A_Chase;
  states[Ord(S_CENTAUR_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_CENTAUR_ATK2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_CENTAUR_ATK3)].action.acp1 := @A_CentaurAttack;
  states[Ord(S_CENTAUR_MISSILE1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_CENTAUR_MISSILE2)].action.acp1 := @A_CentaurAttack2;
  states[Ord(S_CENTAUR_MISSILE3)].action.acp1 := @A_FaceTarget;
  states[Ord(S_CENTAUR_MISSILE4)].action.acp1 := @A_CentaurAttack2;
  states[Ord(S_CENTAUR_PAIN1)].action.acp1 := @A_Pain;
  states[Ord(S_CENTAUR_PAIN2)].action.acp1 := @A_SetReflective;
  states[Ord(S_CENTAUR_PAIN3)].action.acp1 := @A_CentaurDefend;
  states[Ord(S_CENTAUR_PAIN4)].action.acp1 := @A_CentaurDefend;
  states[Ord(S_CENTAUR_PAIN5)].action.acp1 := @A_CentaurDefend;
  states[Ord(S_CENTAUR_PAIN6)].action.acp1 := @A_UnSetReflective;
  states[Ord(S_CENTAUR_DEATH2)].action.acp1 := @A_Scream;
  states[Ord(S_CENTAUR_DEATH5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_CENTAUR_DEATH8)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_CENTAUR_DEATH_X2)].action.acp1 := @A_NoBlocking;
  states[Ord(S_CENTAUR_DEATH_X3)].action.acp1 := @A_CentaurDropStuff;
  states[Ord(S_CENTAUR_DEATH_X4)].action.acp1 := @A_Scream;
  states[Ord(S_CENTAUR_DEATH_X5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_CENTAUR_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_CENTAUR_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_CENTAUR_SHIELD1)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SHIELD2)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SHIELD3)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SHIELD4)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SHIELD5)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SHIELD6)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SHIELD_X2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_CENTAUR_SWORD1)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD2)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD3)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD4)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD5)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD6)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD7)].action.acp1 := @A_CheckFloor;
  states[Ord(S_CENTAUR_SWORD_X2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMN_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_DEMN_LOOK2)].action.acp1 := @A_Look;
  states[Ord(S_DEMN_CHASE1)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN_CHASE2)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN_CHASE3)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN_CHASE4)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN_ATK1_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN_ATK1_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN_ATK1_3)].action.acp1 := @A_DemonAttack1;
  states[Ord(S_DEMN_ATK2_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN_ATK2_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN_ATK2_3)].action.acp1 := @A_DemonAttack2;
  states[Ord(S_DEMN_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_DEMN_DEATH3)].action.acp1 := @A_Scream;
  states[Ord(S_DEMN_DEATH4)].action.acp1 := @A_NoBlocking;
  states[Ord(S_DEMN_DEATH5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMN_XDEATH2)].action.acp1 := @A_DemonDeath;
  states[Ord(S_DEMN_XDEATH3)].action.acp1 := @A_Scream;
  states[Ord(S_DEMN_XDEATH4)].action.acp1 := @A_NoBlocking;
  states[Ord(S_DEMN_XDEATH5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMON_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_DEMON_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_DEMONCHUNK1_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMONCHUNK2_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMONCHUNK3_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMONCHUNK4_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMONCHUNK5_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMN2_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_DEMN2_LOOK2)].action.acp1 := @A_Look;
  states[Ord(S_DEMN2_CHASE1)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN2_CHASE2)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN2_CHASE3)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN2_CHASE4)].action.acp1 := @A_Chase;
  states[Ord(S_DEMN2_ATK1_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN2_ATK1_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN2_ATK1_3)].action.acp1 := @A_DemonAttack1;
  states[Ord(S_DEMN2_ATK2_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN2_ATK2_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_DEMN2_ATK2_3)].action.acp1 := @A_DemonAttack2;
  states[Ord(S_DEMN2_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_DEMN2_DEATH3)].action.acp1 := @A_Scream;
  states[Ord(S_DEMN2_DEATH4)].action.acp1 := @A_NoBlocking;
  states[Ord(S_DEMN2_DEATH5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMN2_XDEATH2)].action.acp1 := @A_Demon2Death;
  states[Ord(S_DEMN2_XDEATH3)].action.acp1 := @A_Scream;
  states[Ord(S_DEMN2_XDEATH4)].action.acp1 := @A_NoBlocking;
  states[Ord(S_DEMN2_XDEATH5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMON2CHUNK1_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMON2CHUNK2_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMON2CHUNK3_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_DEMON2CHUNK4_2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_WRAITH_RAISE1)].action.acp1 := @A_WraithRaiseInit;
  states[Ord(S_WRAITH_RAISE2)].action.acp1 := @A_WraithRaise;
  states[Ord(S_WRAITH_RAISE3)].action.acp1 := @A_FaceTarget;
  states[Ord(S_WRAITH_RAISE4)].action.acp1 := @A_WraithRaise;
  states[Ord(S_WRAITH_RAISE5)].action.acp1 := @A_WraithRaise;
  states[Ord(S_WRAITH_INIT2)].action.acp1 := @A_WraithInit;
  states[Ord(S_WRAITH_LOOK1)].action.acp1 := @A_WraithLook;
  states[Ord(S_WRAITH_LOOK2)].action.acp1 := @A_WraithLook;
  states[Ord(S_WRAITH_CHASE1)].action.acp1 := @A_WraithChase;
  states[Ord(S_WRAITH_CHASE2)].action.acp1 := @A_WraithChase;
  states[Ord(S_WRAITH_CHASE3)].action.acp1 := @A_WraithChase;
  states[Ord(S_WRAITH_CHASE4)].action.acp1 := @A_WraithChase;
  states[Ord(S_WRAITH_ATK1_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_WRAITH_ATK1_2)].action.acp1 := @A_WraithFX3;
  states[Ord(S_WRAITH_ATK1_3)].action.acp1 := @A_WraithMelee;
  states[Ord(S_WRAITH_ATK2_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_WRAITH_ATK2_3)].action.acp1 := @A_WraithMissile;
  states[Ord(S_WRAITH_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_WRAITH_DEATH1_2)].action.acp1 := @A_Scream;
  states[Ord(S_WRAITH_DEATH1_5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_WRAITH_DEATH1_6)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_WRAITH_DEATH2_2)].action.acp1 := @A_Scream;
  states[Ord(S_WRAITH_DEATH2_5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_WRAITH_DEATH2_6)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_WRAITH_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_WRAITH_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_WRTHFX_MOVE2)].action.acp1 := @A_WraithFX2;
  states[Ord(S_WRTHFX_BOOM2)].action.acp1 := @A_WraithFX2;
  states[Ord(S_WRTHFX_BOOM4)].action.acp1 := @A_WraithFX2;
  states[Ord(S_WRTHFX_BOOM5)].action.acp1 := @A_WraithFX2;
  states[Ord(S_MNTR_SPAWN2)].action.acp1 := @A_MinotaurFade1;
  states[Ord(S_MNTR_SPAWN3)].action.acp1 := @A_MinotaurFade2;
  states[Ord(S_MNTR_LOOK1)].action.acp1 := @A_MinotaurLook;
  states[Ord(S_MNTR_LOOK2)].action.acp1 := @A_MinotaurLook;
  states[Ord(S_MNTR_WALK1)].action.acp1 := @A_MinotaurChase;
  states[Ord(S_MNTR_WALK2)].action.acp1 := @A_MinotaurChase;
  states[Ord(S_MNTR_WALK3)].action.acp1 := @A_MinotaurChase;
  states[Ord(S_MNTR_WALK4)].action.acp1 := @A_MinotaurChase;
  states[Ord(S_MNTR_ROAM1)].action.acp1 := @A_MinotaurRoam;
  states[Ord(S_MNTR_ROAM2)].action.acp1 := @A_MinotaurRoam;
  states[Ord(S_MNTR_ROAM3)].action.acp1 := @A_MinotaurRoam;
  states[Ord(S_MNTR_ROAM4)].action.acp1 := @A_MinotaurRoam;
  states[Ord(S_MNTR_ATK1_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_MNTR_ATK1_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_MNTR_ATK1_3)].action.acp1 := @A_MinotaurAtk1;
  states[Ord(S_MNTR_ATK2_1)].action.acp1 := @A_MinotaurDecide;
  states[Ord(S_MNTR_ATK2_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_MNTR_ATK2_3)].action.acp1 := @A_MinotaurAtk2;
  states[Ord(S_MNTR_ATK3_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_MNTR_ATK3_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_MNTR_ATK3_3)].action.acp1 := @A_MinotaurAtk3;
  states[Ord(S_MNTR_ATK4_1)].action.acp1 := @A_MinotaurCharge;
  states[Ord(S_MNTR_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_MNTR_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_MNTR_DIE3)].action.acp1 := @A_SmokePuffExit;
  states[Ord(S_MNTR_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_MNTR_DIE7)].action.acp1 := @A_MinotaurFade1;
  states[Ord(S_MNTR_DIE8)].action.acp1 := @A_MinotaurFade0;
  states[Ord(S_MNTRFX2_1)].action.acp1 := @A_MntrFloorFire;
  states[Ord(S_MNTRFXI2_1)].action.acp1 := @A_Explode;
  states[Ord(S_SERPENT_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_SERPENT_SWIM1)].action.acp1 := @A_SerpentChase;
  states[Ord(S_SERPENT_SWIM2)].action.acp1 := @A_SerpentChase;
  states[Ord(S_SERPENT_SWIM3)].action.acp1 := @A_SerpentHumpDecide;
  states[Ord(S_SERPENT_HUMP1)].action.acp1 := @A_SerpentUnHide;
  states[Ord(S_SERPENT_HUMP2)].action.acp1 := @A_SerpentRaiseHump;
  states[Ord(S_SERPENT_HUMP3)].action.acp1 := @A_SerpentRaiseHump;
  states[Ord(S_SERPENT_HUMP4)].action.acp1 := @A_SerpentRaiseHump;
  states[Ord(S_SERPENT_HUMP5)].action.acp1 := @A_SerpentRaiseHump;
  states[Ord(S_SERPENT_HUMP6)].action.acp1 := @A_SerpentRaiseHump;
  states[Ord(S_SERPENT_HUMP10)].action.acp1 := @A_SerpentLowerHump;
  states[Ord(S_SERPENT_HUMP11)].action.acp1 := @A_SerpentLowerHump;
  states[Ord(S_SERPENT_HUMP12)].action.acp1 := @A_SerpentLowerHump;
  states[Ord(S_SERPENT_HUMP13)].action.acp1 := @A_SerpentLowerHump;
  states[Ord(S_SERPENT_HUMP14)].action.acp1 := @A_SerpentLowerHump;
  states[Ord(S_SERPENT_HUMP15)].action.acp1 := @A_SerpentHide;
  states[Ord(S_SERPENT_SURFACE1)].action.acp1 := @A_UnHideThing;
  states[Ord(S_SERPENT_SURFACE2)].action.acp1 := @A_SerpentBirthScream;
  states[Ord(S_SERPENT_SURFACE3)].action.acp1 := @A_SetShootable;
  states[Ord(S_SERPENT_SURFACE5)].action.acp1 := @A_SerpentCheckForAttack;
  states[Ord(S_SERPENT_DIVE4)].action.acp1 := @A_UnSetShootable;
  states[Ord(S_SERPENT_DIVE5)].action.acp1 := @A_SerpentDiveSound;
  states[Ord(S_SERPENT_DIVE10)].action.acp1 := @A_SerpentHide;
  states[Ord(S_SERPENT_WALK1)].action.acp1 := @A_SerpentWalk;
  states[Ord(S_SERPENT_WALK2)].action.acp1 := @A_SerpentWalk;
  states[Ord(S_SERPENT_WALK3)].action.acp1 := @A_SerpentWalk;
  states[Ord(S_SERPENT_WALK4)].action.acp1 := @A_SerpentCheckForAttack;
  states[Ord(S_SERPENT_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_SERPENT_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_SERPENT_ATK2)].action.acp1 := @A_SerpentChooseAttack;
  states[Ord(S_SERPENT_MELEE1)].action.acp1 := @A_SerpentMeleeAttack;
  states[Ord(S_SERPENT_MISSILE1)].action.acp1 := @A_SerpentMissileAttack;
  states[Ord(S_SERPENT_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_SERPENT_DIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_SERPENT_XDIE2)].action.acp1 := @A_SerpentHeadPop;
  states[Ord(S_SERPENT_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_SERPENT_XDIE8)].action.acp1 := @A_SerpentSpawnGibs;
  states[Ord(S_SERPENT_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_SERPENT_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_SERPENT_FX1)].action.acp1 := @A_ContMobjSound;
  states[Ord(S_SERPENT_HEAD1)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD2)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD3)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD4)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD5)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD6)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD7)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_HEAD8)].action.acp1 := @A_SerpentHeadCheck;
  states[Ord(S_SERPENT_GIB1_2)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB1_3)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB1_4)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB1_5)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB1_6)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB1_7)].action.acp1 := @A_DelayGib;
  states[Ord(S_SERPENT_GIB1_8)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB1_9)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB1_10)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB1_11)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB1_12)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB2_2)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB2_3)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB2_4)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB2_5)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB2_6)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB2_7)].action.acp1 := @A_DelayGib;
  states[Ord(S_SERPENT_GIB2_8)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB2_9)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB2_10)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB2_11)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB2_12)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB3_2)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB3_3)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB3_4)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB3_5)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB3_6)].action.acp1 := @A_FloatGib;
  states[Ord(S_SERPENT_GIB3_7)].action.acp1 := @A_DelayGib;
  states[Ord(S_SERPENT_GIB3_8)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB3_9)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB3_10)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB3_11)].action.acp1 := @A_SinkGib;
  states[Ord(S_SERPENT_GIB3_12)].action.acp1 := @A_SinkGib;
  states[Ord(S_BISHOP_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_BISHOP_DECIDE)].action.acp1 := @A_BishopDecide;
  states[Ord(S_BISHOP_BLUR1)].action.acp1 := @A_BishopDoBlur;
  states[Ord(S_BISHOP_BLUR2)].action.acp1 := @A_BishopSpawnBlur;
  states[Ord(S_BISHOP_WALK1)].action.acp1 := @A_Chase;
  states[Ord(S_BISHOP_WALK2)].action.acp1 := @A_BishopChase;
  states[Ord(S_BISHOP_WALK4)].action.acp1 := @A_BishopChase;
  states[Ord(S_BISHOP_WALK5)].action.acp1 := @A_Chase;
  states[Ord(S_BISHOP_WALK6)].action.acp1 := @A_BishopChase;
  states[Ord(S_BISHOP_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_BISHOP_ATK2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_BISHOP_ATK3)].action.acp1 := @A_FaceTarget;
  states[Ord(S_BISHOP_ATK4)].action.acp1 := @A_BishopAttack;
  states[Ord(S_BISHOP_ATK5)].action.acp1 := @A_BishopAttack2;
  states[Ord(S_BISHOP_PAIN1)].action.acp1 := @A_Pain;
  states[Ord(S_BISHOP_PAIN2)].action.acp1 := @A_BishopPainBlur;
  states[Ord(S_BISHOP_PAIN3)].action.acp1 := @A_BishopPainBlur;
  states[Ord(S_BISHOP_PAIN4)].action.acp1 := @A_BishopPainBlur;
  states[Ord(S_BISHOP_DEATH2)].action.acp1 := @A_Scream;
  states[Ord(S_BISHOP_DEATH3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_BISHOP_DEATH4)].action.acp1 := @A_Explode;
  states[Ord(S_BISHOP_DEATH8)].action.acp1 := @A_BishopPuff;
  states[Ord(S_BISHOP_DEATH9)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_BISHOP_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_BISHOP_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_BISHOPBLUR2)].action.acp1 := @A_SetAltShadow;
  states[Ord(S_BISHFX1_1)].action.acp1 := @A_BishopMissileWeave;
  states[Ord(S_BISHFX1_2)].action.acp1 := @A_BishopMissileWeave;
  states[Ord(S_BISHFX1_3)].action.acp1 := @A_BishopMissileWeave;
  states[Ord(S_BISHFX1_4)].action.acp1 := @A_BishopMissileWeave;
  states[Ord(S_BISHFX1_5)].action.acp1 := @A_BishopMissileSeek;
  states[Ord(S_DRAGON_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_DRAGON_INIT3)].action.acp1 := @A_DragonInitFlight;
  states[Ord(S_DRAGON_WALK1)].action.acp1 := @A_DragonFlap;
  states[Ord(S_DRAGON_WALK2)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK3)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK4)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK5)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK6)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK7)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK8)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK9)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK10)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK11)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_WALK12)].action.acp1 := @A_DragonFlight;
  states[Ord(S_DRAGON_ATK1)].action.acp1 := @A_DragonAttack;
  states[Ord(S_DRAGON_PAIN1)].action.acp1 := @A_DragonPain;
  states[Ord(S_DRAGON_DEATH1)].action.acp1 := @A_Scream;
  states[Ord(S_DRAGON_DEATH2)].action.acp1 := @A_NoBlocking;
  states[Ord(S_DRAGON_DEATH4)].action.acp1 := @A_DragonCheckCrash;
  states[Ord(S_DRAGON_FX1_X4)].action.acp1 := @A_DragonFX2;
  states[Ord(S_DRAGON_FX2_2)].action.acp1 := @A_UnHideThing;
  states[Ord(S_DRAGON_FX2_3)].action.acp1 := @A_Scream;
  states[Ord(S_DRAGON_FX2_5)].action.acp1 := @A_Explode;
  states[Ord(S_SND_WIND2)].action.acp1 := @A_ESound;
  states[Ord(S_SND_WATERFALL)].action.acp1 := @A_ESound;
  states[Ord(S_ETTIN_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_ETTIN_LOOK2)].action.acp1 := @A_Look;
  states[Ord(S_ETTIN_CHASE1)].action.acp1 := @A_Chase;
  states[Ord(S_ETTIN_CHASE2)].action.acp1 := @A_Chase;
  states[Ord(S_ETTIN_CHASE3)].action.acp1 := @A_Chase;
  states[Ord(S_ETTIN_CHASE4)].action.acp1 := @A_Chase;
  states[Ord(S_ETTIN_PAIN1)].action.acp1 := @A_Pain;
  states[Ord(S_ETTIN_ATK1_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_ETTIN_ATK1_2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_ETTIN_ATK1_3)].action.acp1 := @A_EttinAttack;
  states[Ord(S_ETTIN_DEATH1_3)].action.acp1 := @A_Scream;
  states[Ord(S_ETTIN_DEATH1_4)].action.acp1 := @A_NoBlocking;
  states[Ord(S_ETTIN_DEATH1_5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_ETTIN_DEATH2_2)].action.acp1 := @A_NoBlocking;
  states[Ord(S_ETTIN_DEATH2_3)].action.acp1 := @A_DropMace;
  states[Ord(S_ETTIN_DEATH2_4)].action.acp1 := @A_Scream;
  states[Ord(S_ETTIN_DEATH2_5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_ETTIN_ICE1)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_ETTIN_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_ETTIN_MACE1)].action.acp1 := @A_CheckFloor;
  states[Ord(S_ETTIN_MACE2)].action.acp1 := @A_CheckFloor;
  states[Ord(S_ETTIN_MACE3)].action.acp1 := @A_CheckFloor;
  states[Ord(S_ETTIN_MACE4)].action.acp1 := @A_CheckFloor;
  states[Ord(S_ETTIN_MACE6)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_FIRED_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_FIRED_LOOK2)].action.acp1 := @A_Look;
  states[Ord(S_FIRED_LOOK3)].action.acp1 := @A_Look;
  states[Ord(S_FIRED_LOOK9)].action.acp1 := @A_FiredRocks;
  states[Ord(S_FIRED_LOOKB)].action.acp1 := @A_UnSetInvulnerable;
  states[Ord(S_FIRED_WALK1)].action.acp1 := @A_FiredChase;
  states[Ord(S_FIRED_WALK2)].action.acp1 := @A_FiredChase;
  states[Ord(S_FIRED_WALK3)].action.acp1 := @A_FiredChase;
  states[Ord(S_FIRED_PAIN1)].action.acp1 := @A_Pain;
  states[Ord(S_FIRED_ATTACK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_FIRED_ATTACK2)].action.acp1 := @A_FiredAttack;
  states[Ord(S_FIRED_ATTACK3)].action.acp1 := @A_FiredAttack;
  states[Ord(S_FIRED_ATTACK4)].action.acp1 := @A_FiredAttack;
  states[Ord(S_FIRED_DEATH1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_FIRED_DEATH2)].action.acp1 := @A_Scream;
  states[Ord(S_FIRED_DEATH3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_FIRED_XDEATH1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_FIRED_XDEATH2)].action.acp1 := @A_NoBlocking;
  states[Ord(S_FIRED_XDEATH3)].action.acp1 := @A_FiredSplotch;
  states[Ord(S_FIRED_ICE1)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_FIRED_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_FIRED_CORPSE2)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_FIRED_CORPSE5)].action.acp1 := @A_QueueCorpse;
  states[Ord(S_FIRED_RDEAD1_1)].action.acp1 := @A_SmBounce;
  states[Ord(S_FIRED_RDEAD2_1)].action.acp1 := @A_SmBounce;
  states[Ord(S_FIRED_RDEAD3_1)].action.acp1 := @A_SmBounce;
  states[Ord(S_FIRED_RDEAD4_1)].action.acp1 := @A_SmBounce;
  states[Ord(S_FIRED_RDEAD5_1)].action.acp1 := @A_SmBounce;
  states[Ord(S_ICEGUY_LOOK)].action.acp1 := @A_IceGuyLook;
  states[Ord(S_ICEGUY_WALK1)].action.acp1 := @A_Chase;
  states[Ord(S_ICEGUY_WALK2)].action.acp1 := @A_IceGuyChase;
  states[Ord(S_ICEGUY_WALK3)].action.acp1 := @A_Chase;
  states[Ord(S_ICEGUY_WALK4)].action.acp1 := @A_Chase;
  states[Ord(S_ICEGUY_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_ICEGUY_ATK2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_ICEGUY_ATK3)].action.acp1 := @A_IceGuyAttack;
  states[Ord(S_ICEGUY_ATK4)].action.acp1 := @A_FaceTarget;
  states[Ord(S_ICEGUY_PAIN1)].action.acp1 := @A_Pain;
  states[Ord(S_ICEGUY_DEATH)].action.acp1 := @A_IceGuyDie;
  states[Ord(S_ICEGUY_FX1)].action.acp1 := @A_IceGuyMissilePuff;
  states[Ord(S_ICEGUY_FX2)].action.acp1 := @A_IceGuyMissilePuff;
  states[Ord(S_ICEGUY_FX3)].action.acp1 := @A_IceGuyMissilePuff;
  states[Ord(S_ICEGUY_FX_X2)].action.acp1 := @A_IceGuyMissileExplode;
  states[Ord(S_FIGHTER2)].action.acp1 := @A_ClassBossHealth;
  states[Ord(S_FIGHTERLOOK)].action.acp1 := @A_Look;
  states[Ord(S_FIGHTER_RUN1)].action.acp1 := @A_FastChase;
  states[Ord(S_FIGHTER_RUN2)].action.acp1 := @A_FastChase;
  states[Ord(S_FIGHTER_RUN3)].action.acp1 := @A_FastChase;
  states[Ord(S_FIGHTER_RUN4)].action.acp1 := @A_FastChase;
  states[Ord(S_FIGHTER_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_FIGHTER_ATK2)].action.acp1 := @A_FighterAttack;
  states[Ord(S_FIGHTER_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_FIGHTER_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_FIGHTER_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_FIGHTER_XDIE1)].action.acp1 := @A_Scream;
  states[Ord(S_FIGHTER_XDIE2)].action.acp1 := @A_SkullPop;
  states[Ord(S_FIGHTER_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_FIGHTER_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_FIGHTER_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_CLERIC2)].action.acp1 := @A_ClassBossHealth;
  states[Ord(S_CLERICLOOK)].action.acp1 := @A_Look;
  states[Ord(S_CLERIC_RUN1)].action.acp1 := @A_FastChase;
  states[Ord(S_CLERIC_RUN2)].action.acp1 := @A_FastChase;
  states[Ord(S_CLERIC_RUN3)].action.acp1 := @A_FastChase;
  states[Ord(S_CLERIC_RUN4)].action.acp1 := @A_FastChase;
  states[Ord(S_CLERIC_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_CLERIC_ATK2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_CLERIC_ATK3)].action.acp1 := @A_ClericAttack;
  states[Ord(S_CLERIC_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_CLERIC_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_CLERIC_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_CLERIC_XDIE1)].action.acp1 := @A_Scream;
  states[Ord(S_CLERIC_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_CLERIC_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_CLERIC_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_MAGE2)].action.acp1 := @A_ClassBossHealth;
  states[Ord(S_MAGELOOK)].action.acp1 := @A_Look;
  states[Ord(S_MAGE_RUN1)].action.acp1 := @A_FastChase;
  states[Ord(S_MAGE_RUN2)].action.acp1 := @A_FastChase;
  states[Ord(S_MAGE_RUN3)].action.acp1 := @A_FastChase;
  states[Ord(S_MAGE_RUN4)].action.acp1 := @A_FastChase;
  states[Ord(S_MAGE_ATK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_MAGE_ATK2)].action.acp1 := @A_MageAttack;
  states[Ord(S_MAGE_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_MAGE_DIE2)].action.acp1 := @A_Scream;
  states[Ord(S_MAGE_DIE5)].action.acp1 := @A_NoBlocking;
  states[Ord(S_MAGE_XDIE1)].action.acp1 := @A_Scream;
  states[Ord(S_MAGE_XDIE3)].action.acp1 := @A_NoBlocking;
  states[Ord(S_MAGE_ICE)].action.acp1 := @A_FreezeDeath;
  states[Ord(S_MAGE_ICE2)].action.acp1 := @A_FreezeDeathChunks;
  states[Ord(S_SORC_SPAWN2)].action.acp1 := @A_SorcSpinBalls;
  states[Ord(S_SORC_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_SORC_WALK1)].action.acp1 := @A_Chase;
  states[Ord(S_SORC_WALK2)].action.acp1 := @A_Chase;
  states[Ord(S_SORC_WALK3)].action.acp1 := @A_Chase;
  states[Ord(S_SORC_WALK4)].action.acp1 := @A_Chase;
  states[Ord(S_SORC_PAIN2)].action.acp1 := @A_Pain;
  states[Ord(S_SORC_ATK2_1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_SORC_ATK2_2)].action.acp1 := @A_SpeedBalls;
  states[Ord(S_SORC_ATK2_3)].action.acp1 := @A_FaceTarget;
  states[Ord(S_SORC_ATTACK2)].action.acp1 := @A_SpawnFizzle;
  states[Ord(S_SORC_ATTACK3)].action.acp1 := @A_FaceTarget;
  states[Ord(S_SORC_ATTACK5)].action.acp1 := @A_SorcBossAttack;
  states[Ord(S_SORC_DIE2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_SORC_DIE3)].action.acp1 := @A_Scream;
  states[Ord(S_SORC_DIED)].action.acp1 := @A_NoBlocking;
  states[Ord(S_SORCBALL1_1)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_2)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_3)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_4)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_5)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_6)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_7)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_8)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_9)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_0)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_A)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_B)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_C)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_D)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_E)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_F)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL1_D1)].action.acp1 := @A_SorcBallPop;
  states[Ord(S_SORCBALL1_D2)].action.acp1 := @A_BounceCheck;
  states[Ord(S_SORCBALL1_D5)].action.acp1 := @A_Explode;
  states[Ord(S_SORCBALL2_1)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_2)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_3)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_4)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_5)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_6)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_7)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_8)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_9)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_0)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_A)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_B)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_C)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_D)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_E)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_F)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL2_D1)].action.acp1 := @A_SorcBallPop;
  states[Ord(S_SORCBALL2_D2)].action.acp1 := @A_BounceCheck;
  states[Ord(S_SORCBALL2_D5)].action.acp1 := @A_Explode;
  states[Ord(S_SORCBALL3_1)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_2)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_3)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_4)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_5)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_6)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_7)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_8)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_9)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_0)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_A)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_B)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_C)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_D)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_E)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_F)].action.acp1 := @A_SorcBallOrbit;
  states[Ord(S_SORCBALL3_D1)].action.acp1 := @A_SorcBallPop;
  states[Ord(S_SORCBALL3_D2)].action.acp1 := @A_BounceCheck;
  states[Ord(S_SORCBALL3_D5)].action.acp1 := @A_Explode;
  states[Ord(S_SORCFX1_2)].action.acp1 := @A_SorcFX1Seek;
  states[Ord(S_SORCFX1_3)].action.acp1 := @A_SorcFX1Seek;
  states[Ord(S_SORCFX1_4)].action.acp1 := @A_SorcFX1Seek;
  states[Ord(S_SORCFX1_D1)].action.acp1 := @A_Explode;
  states[Ord(S_SORCFX2_SPLIT1)].action.acp1 := @A_SorcFX2Split;
  states[Ord(S_SORCFX2_ORBIT1)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT2)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT3)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT4)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT5)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT6)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT7)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT8)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT9)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBIT0)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBITA)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBITB)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBITC)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBITD)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBITE)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_SORCFX2_ORBITF)].action.acp1 := @A_SorcFX2Orbit;
  states[Ord(S_BISHMORPHA)].action.acp1 := @A_SorcererBishopEntry;
  states[Ord(S_BISHMORPHJ)].action.acp1 := @A_SpawnBishop;
  states[Ord(S_SORCFX4_1)].action.acp1 := @A_SorcFX4Check;
  states[Ord(S_SORCFX4_2)].action.acp1 := @A_SorcFX4Check;
  states[Ord(S_SORCFX4_3)].action.acp1 := @A_SorcFX4Check;
  states[Ord(S_SORCFX4_D2)].action.acp1 := @A_Explode;
  states[Ord(S_KORAX_LOOK1)].action.acp1 := @A_Look;
  states[Ord(S_KORAX_CHASE1)].action.acp1 := @A_KoraxStep2;
  states[Ord(S_KORAX_CHASE2)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASE3)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASE4)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASE5)].action.acp1 := @A_KoraxStep;
  states[Ord(S_KORAX_CHASE6)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASE7)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASE8)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASE9)].action.acp1 := @A_KoraxStep2;
  states[Ord(S_KORAX_CHASE0)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASEA)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASEB)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASEC)].action.acp1 := @A_KoraxStep;
  states[Ord(S_KORAX_CHASED)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASEE)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_CHASEF)].action.acp1 := @A_KoraxChase;
  states[Ord(S_KORAX_PAIN1)].action.acp1 := @A_Pain;
  states[Ord(S_KORAX_ATTACK1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_KORAX_ATTACK2)].action.acp1 := @A_KoraxDecide;
  states[Ord(S_KORAX_MISSILE1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_KORAX_MISSILE2)].action.acp1 := @A_KoraxMissile;
  states[Ord(S_KORAX_COMMAND1)].action.acp1 := @A_FaceTarget;
  states[Ord(S_KORAX_COMMAND2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_KORAX_COMMAND3)].action.acp1 := @A_KoraxCommand;
  states[Ord(S_KORAX_DEATH2)].action.acp1 := @A_FaceTarget;
  states[Ord(S_KORAX_DEATH3)].action.acp1 := @A_Scream;
  states[Ord(S_KORAX_DEATH0)].action.acp1 := @A_KoraxBonePop;
  states[Ord(S_KORAX_DEATHA)].action.acp1 := @A_NoBlocking;
  states[Ord(S_KSPIRIT_ROAM1)].action.acp1 := @A_KSpiritRoam;
  states[Ord(S_KSPIRIT_ROAM2)].action.acp1 := @A_KSpiritRoam;
  states[Ord(S_KBOLT2)].action.acp1 := @A_KBoltRaise;
  states[Ord(S_KBOLT3)].action.acp1 := @A_KBolt;
  states[Ord(S_KBOLT4)].action.acp1 := @A_KBolt;
  states[Ord(S_KBOLT5)].action.acp1 := @A_KBolt;
  states[Ord(S_KBOLT6)].action.acp1 := @A_KBolt;
  states[Ord(S_KBOLT7)].action.acp1 := @A_KBolt;
  states[Ord(S_SPAWNBATS2)].action.acp1 := @A_BatSpawnInit;
  states[Ord(S_SPAWNBATS3)].action.acp1 := @A_BatSpawn;
  states[Ord(S_BAT1)].action.acp1 := @A_BatMove;
  states[Ord(S_BAT2)].action.acp1 := @A_BatMove;
  states[Ord(S_BAT3)].action.acp1 := @A_BatMove;

end;

end.

