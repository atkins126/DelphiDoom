/*************************************************************\
	Doom Builder Game Configuration for DelphiHeretic
\*************************************************************/

// This is required to prevent accedential use of a different configuration
type = "Doom Builder 2 Game Configuration";

// This is the title to show for this game
game = "DelphiHeretic";

// This is the simplified game engine/sourceport name
engine = "DelphiHeretic";

// The format interface handles the map data format
formatinterface = "DoomMapSetIO";

// Default lump name for new map
defaultlumpname = "E1M1";

// Default testing parameters
testparameters = "-iwad \"%WP\" -skill \"%S\" -file \"%AP\" \"%F\" -warp %L1 %L2 %NM";
testshortpaths = true;

// Default nodebuilder configurations
defaultsavecompiler = "zennode_normal";
defaulttestcompiler = "zennode_fast";

// Skill levels
skills
{
	include("Includes\\Heretic_misc.cfg", "skills");
}

// When this is set to true, sectors with the same tag will light up when a line is highlighted
linetagindicatesectors = true;

// Special linedefs
soundlinedefflag = 64;	// See linedefflags
singlesidedflag = 1;	// See linedefflags
doublesidedflag = 4;	// See linedefflags
impassableflag = 1;
upperunpeggedflag = 8;
lowerunpeggedflag = 16;

// Door making
makedoortrack = "DOORTRAK";
makedooraction = 1;			// See linedeftypes

// Generalized actions
generalizedlinedefs = false;
generalizedsectors = false;

// Texture loading options
mixtexturesflats = false;
defaulttexturescale = 1.0f;
defaultflatscale = 1.0f;


// Some common settings
include("Includes\\Common.cfg");


// Default flags for first new thing
defaultthingflags
{
	include("Includes\\Doom_misc.cfg", "defaultthingflags");
}


// Texture sources
textures
{
	include("Includes\\Doom_misc.cfg", "textures");
}

// Patch sources
patches
{
	include("Includes\\Doom_misc.cfg", "patches");
}

// Sprite sources
sprites
{
	include("Includes\\Doom_misc.cfg", "sprites");
}

// Flat sources
flats
{
	include("Includes\\Doom_misc.cfg", "flats");
}


/*
GAME DETECT PATTERN
Used to guess the game for which a WAD file is made.

1 = One of these lumps must exist
2 = None of these lumps must exist
3 = All of these lumps must exist
*/

gamedetect
{
	TEXTMAP = 2;
	ENDMAP = 2;
	EXTENDED = 3;
	BEHAVIOR = 2;
	E1M1 = 1; E1M2 = 1; E1M3 = 1; E1M4 = 1; E1M5 = 1; E1M6 = 1; E1M7 = 1; E1M8 = 1; E1M9 = 1;
	E2M1 = 1; E2M2 = 1; E2M3 = 1; E2M4 = 1; E2M5 = 1; E2M6 = 1; E2M7 = 1; E2M8 = 1; E2M9 = 1;
	E3M1 = 1; E3M2 = 1; E3M3 = 1; E3M4 = 1; E3M5 = 1; E3M6 = 1; E3M7 = 1; E3M8 = 1; E3M9 = 1;
	E4M1 = 1; E4M2 = 1; E4M3 = 1; E4M4 = 1; E4M5 = 1; E4M6 = 1; E4M7 = 1; E4M8 = 1; E4M9 = 1;
	E5M1 = 1; E5M2 = 1; E5M3 = 1; E5M4 = 1; E5M5 = 1; E5M6 = 1; E5M7 = 1; E5M8 = 1; E5M9 = 1;
	MAP01 = 2; MAP02 = 2; MAP03 = 2; MAP04 = 2; MAP05 = 2; MAP06 = 2; MAP07 = 2; MAP08 = 2; MAP09 = 2; MAP10 = 2;
	MAP11 = 2; MAP12 = 2; MAP13 = 2; MAP14 = 2; MAP15 = 2; MAP16 = 2; MAP17 = 2; MAP18 = 2; MAP19 = 2; MAP20 = 2;
	MAP21 = 2; MAP22 = 2; MAP23 = 2; MAP24 = 2; MAP25 = 2; MAP26 = 2; MAP27 = 2; MAP28 = 2; MAP29 = 2; MAP30 = 2;
	MAP31 = 2; MAP32 = 2; MAP33 = 2; MAP34 = 2; MAP35 = 2; MAP36 = 2; MAP37 = 2; MAP38 = 2; MAP39 = 2; MAP40 = 2;
	MAP41 = 2;
}


maplumpnames
{
	include("Includes\\Doom_misc.cfg", "doommaplumpnames");
}


// Default sector brightness levels
sectorbrightness
{
	include("Includes\\Doom_misc.cfg", "sectorbrightness");
}


// SECTOR TYPES
sectortypes
{
	include("Includes\\Heretic_sectors.cfg");
}


// LINEDEF FLAGS
linedefflags
{
	include("Includes\\Doom_misc.cfg", "linedefflags");
	512 = "Trigger PascalScript";
	1024 = "No clipping";
}



// LINEDEF ACTIVATIONS
linedefactivations
{
}


// Linedef flags UDMF translation table
// This is needed for copy/paste and prefabs to work properly
// When the UDMF field name is prefixed with ! it is inverted
linedefflagstranslation
{
	include("Includes\\Doom_misc.cfg", "linedefflagstranslation");
	512 = "triggerscripts";
	1024 = "noclipping";
}


// LINEDEF TYPES
linedeftypes
{
	include("Includes\\Heretic_linedefs.cfg");

scroll
{
	title = "Scroll";
	
	142
	{
		title = "Scroll Texture Right";
		prefix = "";
	}

	143
	{
		title = "Scroll Texture Up";
		prefix = "";
	}

	144
	{
		title = "Scroll Texture Down";
		prefix = "";
	}
	
	145
	{
		title = "Scroll Texture Left (fast)";
		prefix = "";
	}

	146
	{
		title = "Scroll Texture Right (fast)";
		prefix = "";
	}

	147
	{
		title = "Scroll Texture Up (fast)";
		prefix = "";
	}

	148
	{
		title = "Scroll Texture Down (fast)";
		prefix = "";
	}
}
translucent
{
	title = "Translucent";
	
	260
	{
		title = "Translucent (Middle Texture)";
		prefix = "";
	}
}

ripple
{	
	title = "Ripple";
	279
	{
		title = "Ripple Tagged Sector Floor";
		prefix = "";
	}
	
	280
	{
		title = "Ripple Tagged Sector Ceiling";
		prefix = "";
	}

}

3dFloors
{
	title = "3dFloor";
	281
	{
		title = "3d Floor Tagged Sector";
		prefix = "";
	}
	
}

ladder
{
	title = "Ladder";
	282
	{
		title = "Ladder Tagged Sector";
		prefix = "";
	}
	
}

rotate
{
	title = "Flat Rotation";
	284
	{
		title = "Rotate Tagged Sector Floor";
		prefix = "";
	}
	285
	{
		title = "Rotate Tagged Sector Ceiling";
		prefix = "";
	}
	
}

slopes
{
	title = "Slopes";
	
	386
	{
		title = "Slope FrontSector Floor To Back/Tagged Sector Height";
		prefix = "";
	}
	
	387
	{
		title = "Slope FrontSector Ceiling To Back/Tagged Sector Height";
		prefix = "";
	}
	
	388
	{
		title = "Slope FrontSector Floor And Ceiling Back/Tagged Sector Height";
		prefix = "";
	}
	
	389
	{
		title = "Slope BackSector Floor To Front/Tagged Sector Height";
		prefix = "";
	}
	
	390
	{
		title = "Slope BackSector Ceiling To Front/Tagged Sector Height";
		prefix = "";
	}
	
	391
	{
		title = "Slope BackSector Floor And Ceiling To Front/Tagged Sector Height";
		prefix = "";
	}

	283
	{
		title = "Slippery on slope descent";
		prefix = "";
	}

}

}


// THING FLAGS
thingflags
{
	include("Includes\\Doom_misc.cfg", "thingflags");
}

// THING FLAGS
thingflags
{
	32 = "On Middle Floor";
	64 = "Not trigger PascalScript";
}

// Thing flags UDMF translation table
// This is needed for copy/paste and prefabs to work properly
// When the UDMF field name is prefixed with ! it is inverted
thingflagstranslation
{
	include("Includes\\Doom_misc.cfg", "thingflagstranslation");
	32 = "onmiddlefloor";
	64 = "!triggerscripts";
}


// Things flags masks
include("Includes\\Doom_misc.cfg", "thingflagsmasks");


// THING TYPES
thingtypes
{
	include("Includes\\Heretic_things.cfg");
easyslope
{
	color = 8;	// Grey
	arrow = 1;
	title = "Easy slopes";
	width = 8;
	sort = 1;
	height = 8;
	hangs = 0;
	blocking = 0;
	
	1150
	{
		title = "Raise floor to angle (1 of 3)";
	}
	1151
	{
		title = "Lower floor to angle (1 of 3)";
	}
	1152
	{
		title = "Raise ceiling to angle (1 of 3)";
	}
	1153
	{
		title = "Lower ceiling to angle (1 of 3)";
	}

	1154
	{
		title = "Vertex raise floor to angle";
	}
	1155
	{
		title = "Vertext lower floor to angle";
	}
	1156
	{
		title = "Vertex raise ceiling to angle";
	}
	1157
	{
		title = "Vertex lower ceiling to angle";
	}
}

easyangle
{
	color = 8;	// Grey
	arrow = 1;
	title = "Easy angle";
	width = 8;
	sort = 1;
	height = 8;
	hangs = 0;
	blocking = 0;
	
	1158
	{
		title = "Rotate floor texture to angle";
	}
	1159
	{
		title = "Rotate ceiling texture to angle";
	}
}

}


// Default thing filters
// (these are not required, just usefull for new users)
thingsfilters
{
	include("Includes\\Doom_misc.cfg", "thingsfilters");
}


// Default texture sets
// (these are not required, but usefull for new users)
texturesets
{
	include("Includes\\Heretic_texturesets.cfg");	
}
