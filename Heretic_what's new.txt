Fixed memory corruption problem in I_ReverseScreen().
Corrected lump name character case for runtime loading.
Fixes to tall texture patches.
Removed limit on intecepts.
Changed traverse order of mobjinfo table.
When an invalid blockmap is detected will build a new one.
Added -blockmap command line parameter. When set it will force to generate blockmap while loading a map.
Easyslope item to easily create slopes.
Support for flats up to 4096x4096 px.
FLATINFO lump with information regarding flat definitions.
Fixed bug in erronous width & height screen dimentions input when the -geom command line parameter is specified.
Fixed bug that did't recornized the '-keyboardmode 2' command line parameter for ESDF movement.
Speed improvements in maps with high number of slopes.
Optimizations to slope rendering in sofware mode.
Corrections to Doom patch detection algorithm.
Now can theoretically handle maps up to 65536x65536 px.
Fixed serious bug while deallocating thinkers.
Fixed problem with dehacked file loading (-deh parameter).
Key bindings can now accept SHIFT & CTRL.
Floor and ceiling texture rotation.
Displays a warning if no player start found.
Screenshot in Save/Load menu.
PascalScript can access keyboard, mouse keys and joystick keys. The feature is intentionally dormant in demo recording/playback and in netgame.
Added Overlay.DrawRect & OverlayDrawRect PascalScript functions. params -> (const ticks: Integer; const red, green, blue: byte; const x1, y1, x2, y2: Integer)
Added overlaydrawrect console command. Usage is overlaydrawrect [ticks] [x1] [y1] [x2] [y2] [red] [green] [blue].
Dynamic slopes controled by PascalScript. (SetFloorSlope & SetCeilingSlope functions)
Added A_CheckFloor & A_CheckCeiling ACTORDEF functions.
Added A_StopSound ACTORDEF function.
Added A_JumpIfTargetOutsideMeleeRange & A_JumpIfTargetInsideMeleeRange ACTORDEF functions.
Added A_JumpIfTracerCloser ACTORDEF function.
Save target & tracer in saved games.
Mass, args and special fields for mobjs.

Version 2.0.5 build 727 - (4/12/2020)
-----------------------
Corrections to ACTORDEF export procedure.
Run earthquake effect code only when needed.
Fixes to 3d floors drawing in software rendering mode.
RandomRange() function in PascalScript.
Support for ANIMDEFS lump.
Prevent crash in lines with invalid sides.
Corrected issues with voxel clipping.
Fixed problems when installed in a directory that it's name contained spaces.
Added -mididevice command line parameter.
Added MF3_EX_BLOODIGNOREDAMAGE mobj flag.
Dehacked export saves the state name as comment.
Dehacked "NEXT FRAME" keyword will accept global state names as value.
Custom ACTORDEF labels can be accessed with [mobjname]::[label] by dehacked fields and other actions involving state names.
Added A_ChangeFlag ACTORDEF function.
Added PrintActordef console command alias for DEH_PrintActordef.
Added SaveActordef console command alias for DEH_SaveActordef.
Small improvements to multithreading tasks.
Corrected dehacked parsing of the "CODEP FRAME" keyword.
Prevent infinite loop for erronous A_Chase() placement.

Version 2.0.5 build 726 - (8/5/2020)
-----------------------
Fixed ACTORDEF parsing fail with RANDOM function.
Fixed typo in camera menu.
Z-buffer warnings are displayed only in debug mode.
Avoid crash in P_RecursiveSound when line has false ML_TWOSIDED flag.
Added A_TraceNearestPlayer() ACTORDEF function.
Ignore illegal characters from content definition lumps.
True 3d collisions for players.
Warning when include file not found in content definition lumps.
Fixed include files depth detection.
Zero mass warning fix.
Added dd_getactordef_xxxx export functions in script DLL.
I_Error in TEvalFunction.Value() function displays function name.
Warning in TEvalFunction.Value() function displays function name.
Fixed FRANDOM parameters parsing.
ACTORDEF parsing improvements.
The engine detects missing sprite frames and displays warning.
Summon and Spawnmobj console commands refuze to work during demo playback/recording and when we have a net game.
Avoid repeating I_Warning messages when a state has errors in parameter list.
Lightmap cast light to slopes.
Fixed interpolation problem: Didn't interpolated player position and angle.

Version 2.0.5 build 725 - (30/3/2020)
-----------------------
Smoother interpolation in uncapped framerate.
Added DEH_PrintActordef command, print current mobjinfo as ACTORDEF declaration.
Added DEH_SaveActordef command, save current mobjinfo as ACTORDEF file definition.
More flexible flags parsing in ACTORDEF lumps. Will recognize +MF_***, +MF_EX_*** etc syntax.
Added MF3_EX_NOMAXMOVE mobj flag, when set it will not limit momx & momy to 30 map units per tic (original behaviour).
Added angle extra parameter to A_ThrustXY ACTORDEF function
States can have random tics in ACTORDEF lumps.

Version 2.0.5 build 724 - (8/3/2020)
-----------------------
Fixed bug that could crash the engine while spawning map things.
Fixed texture cache bug that could crash the engine (texture height was set to zero).
Fixed bug that could crash the engine when MAPS without nodes are stored in continous lumps inside WAD.
Fixed bug while spawning dropped items.
Added FLOORBOUNCE, CEILINGBOUNCE and WALLBOUNCE mobj flags.
Added new ACTORDEF functions to set the new bouncing flags:
 -A_SetFloorBounce
 -A_UnSetFloorBounce
 -A_SetCeilingBounce
 -A_UnSetCeilingBounce
 -A_SetWallBounce
 -A_UnSetWallBounce

Version 2.0.5 build 723 - (19/2/2020)
-----------------------
Added check to avoid crash in linedefs without front side.
Fixes to slope drawing in big maps (software renderer).
Added summon console command.

Version 2.0.5 build 722 - (2/2/2020)
-----------------------
Fixes to uncapped framerate calculation, runs smoother.
Change the interpolateoncapped console variable from the menu (Options/Display/Advanced/Interpolate on capped)
Added interpolateprecise console variable. When true it will try to make more accurate interpolation in uncapped framerate by taking by accound the time needed to render the frame.

Version 2.0.5 build 721 - (31/1/2020)
-----------------------
Added VSpeed and PushFactor fields to the mobjinfo PascalScript runtime class.
New ACTORDEF functions:
  A_Recoil
  A_SetSolid
  A_UnSetSolid
  A_SetFloat
  A_UnSetFloat
  A_SetHealth
  A_ResetTargetHealth
  A_SetTargetHealth
Mouse sensitivity for X & Y mouses axis can be configured thru the menus (Controls/Mouse sensitivity).
Added option for textured menu background.
Added menubackgroundflat console variable.
In multithreading mode the visplanes initialization is done in a separate thread while running the logic to improve performance (software renderer).
Added -keyboardmode command line parameter. Usage is: 
  1) "-keyboardmode ARROWS" -> use arrows to navigate
  2) "-keyboardmode WASD" -> use WASD to navigate
  3) "-keyboardmode ESDF" -> use ESDF to navigate
Key bindings menu to customize keyboard player control.
Menu beautificiations.
Support for DOOMWADPATH & HERETICWADPATH enviroment variables.
Search for installed steam applications to find wad files.
r_drawvoxels console variable is preserved in defaults file.
Openings are dynamically allocated, depending on screen resolution.
Screen resolution can be changed from the menu.
Intermission screens are displayed with correct aspect ratio when the "widescreensupport" console variable is set to true.
Automap fixes: 
 -Marks are displayed correctly. 
 -In OpenGL mode uses hardware acceleration to draw the automap instead of using the same code with software rendering version.
 -Fixed automap grid rotation.
 -Added automapgrid console variable.
 -Automap works correct in cheat modes.
Support for the C-style #include and Pascal-style {$INCLUDE} directives inside all content definition lumps (ACTORDEF, MODELDEF, VOXELDEF?, LIGHTDEF & SNDINFO). Recoursive include calls are not supported. Maximum include depth set to 32.
Added png screenshot format (default). The mirrorjpgsshot console variable is set to false by default. It can be changed from the menu (Options/System)
Fullscreen menu item moved from Options/Display Options/Advanced to Options/Detail/Set Video Mode menu.
Added Ascpect Ratio & Camera menus (Display Options/Advanced).
Fixed bug with string to float convertion when the system's decimal separator was comma.
Will recognize the '+CANPASS' alias for 'PASSMOBJ' flag in ACTORDEF definitions (as well as 'CANPASS').
Will load kvx voxels from pk3/zip/pak files without the kvx extention, if they are placed inside voxels\*. directory
Corrected the behaviour of Actordef keyword "replaces".
In ACTORDEF lumps when a flag specified with the "-" character, it will remove the flag (usefull with inherited objects)
"Funny rotations" generate an I_Warning, not an I_Error.
When entering ENDOOM screen, stops the music.
ENDTEXT screen in OpenGL branch.
Wipe effect in OpenGL branch.
Support for renderstyle ADD & renderstyle SUBTRACT. The new renderstyles can be defined in ACTOR (BEX/ACTORDEF) definitions.
Speed optimizations to 8 bit color mode by using more CPU threads in final step (blit to the screen buffer).
Added new flag MF2_EX_SEEINVISIBLE, when set allows monsters to clearly see invisible player. 
Added the "ACTORALIAS" ACTORDEF command, defines actor name aliases. Usage is: ACTORALIAS name1 name2.
Added the "DEH_PARSE" & "DEH_PARSE_ALL" ACTORDEF commands, will parse the specified dehacked/bex file. Usage is DEH_PARSE/DEH_PARSE_ALL file1 [file2 ....].
Added new actor flag MF2_EX_MISSILEHURTSPECIES, when set, the actor can hurt with missile attack actors of the same species.
Added showmessageboxonmodified console variable. When set to true and a modified game is detected, there will be displayed a messagebox. Default is FALSE.
Added DEH_SaveMobjInfoCSV console command. Save the current mobjinfo table in a csv file.
Fixed music volume control. Now changing the music volume does not affect the sxf volume.
Fixed non working plats & ceilings (thanks to slayermbm - https://www.doomworld.com/forum/topic/98789-fpcdoom-1124117-updated-dec-2-2019/?do=findComment&comment=2050845)
Added showfullhdlogo console variable. When set to true and current display mode is 1920x1080 displays the FullDH logo on TITLE screen. Default is FALSE.
File system will process WAD files inside pk3/zip/pak files.
Will parse GLDEFS lumps/pk3 entries for dynamic light definitions (alongside with LIGHTDEF) if the gldefs_as_lightdef console variable is set to true.
Added scale ACTOR field in ACTORDEF lumps. 
Corrected enemies that continued shooting at you, even when out of sight - reported by slayermbm (https://www.doomworld.com/forum/topic/92113-delphidoom-204720-updated-oct-12-2019/?do=findComment&comment=2051252)
Key bindings for weapon change as suggested by Khorus.
Change OpenGL texture filtering from the menu.
Change the OpenGL voxel optimization method from the menu.
Fixed problems with A_SpawnItem & A_SpawnItemEx actordef functions.
Added A_ScaleVelocity & A_ChangeVelocity ACTORDEF functions.
Added FloatRandom function in parameters of ACTORDEF functions. Usage is FloatRandom(1.5, 2.5) <-- return a float value between 1.5 and 2.5.
Bug fix: Players can now spawned on 3d floors when the "On middle Floor" flag is set.
Bug fix: Solve issue with A_SpawnItem & A_SpawnItemEx in sectors with 3d floors.
Eliminated problems with voxel frames without a corresponding sprite in the wad.
Fixed problem with KVX voxels in software rendering mode.
Eliminated problems with transparent drawing when the software renderer activates dephtbuffer (3d floors).
Changed mirrorjpgsshot console variable default value to false.
Corrected color overflow in renderstyle add (32 bit color software rendering).
Shared or exclusive fullscreen mode (as suggested by @khorus).
Function parameters in ACTORDEF evaluate expressions using C style operators.
  Supported operators:
     +, -, *, /, |, &, ^
  Supported functions:
  // Math Functions
     ABS MIN MAX EXP LOG LOG10 LOG2 CEIL FLOOR ROUND TRUNC INT SQR SQRT FRAC POWER
  // Trigonometry Functions
     SIN COS TAN ASIN ACOS ATAN SINH COSH TANH ATAN2 VECTORANGLE
  // Flow
     IF(bool condition; whentrue; whenfalse) IFF (alias for IF)
  // Random functions
     RAND RANDOM RANDOM2 FLOATRANDOM FRANDOM (alias for FLOATRANDOM) RANDOMPICK FRANDOMPICK SYSRAND(uses random seed from system's clock)
  // Actor position and movement
     X Y Z MOMX VELX MOMY VELY MOMZ VELZ FLOORZ CEILINGZ ANGLE
  // Actor properties
     RADIUS HEIGHT ALPHA HEALTH REACTIONTIME THRESHOLD FASTCHASETICS KEY (Unique mobj key) FLOORCLIP
  // Pascalscript map & world variables (PascalScript communication)
     MAPSTR WORLDSTR MAPINT WORLDINT MAPFLOAT WORLDFLOAT
  // Custom params (Custom integer variables on per instance basis)
     CUSTOMPARAM PARAM TARGETCUSTOMPARAM TARGETPARAM
  // States
     SPAWN SEE MELEE MISSILE PAIN DEATH XDEATH HEAL CRASH RAISE
Added "freeze" console command, freezes the game, stop all thinkers, stop all scripts. Allow only the players to move. It has no effect while demo playback/record.
Added A_JumpIf ACTORDEF function.
Dynamic lights in software rendering (using GLDEFS).
Indivitual entries in the defaults file for OpenGL & software screen size.
Added r_uselightmaps, lightmapcolorintensity and lightwidthfactor console variables.
If an unknown map thing is detected it will not exit with I_Error, it will generate a warning instead and will spawn a questionmark.
Support for MUSINFO lump. 
Added MF2_EX_NOHITFLOOR mobj flag.
Added DONTSPLASH alias for NOHITFLOOR flag.
Added -noactordef command line parameter, when you run with this parameter it will not parse ACTORDEF lumps.
Support for tall sprites.
PUSHFACTOR, SCALE and GRAVITY fields for actor instances. 
 PascalScript new functions:
  - PS_GetActorPushFactor & PS_SetActorPushFactor
  - PS_GetActorScale & PS_SetActorScale
  - PS_GetActorGravity & PS_SetActorGravity
 ACTORDEF evaluates in function parameters the fields pushfactor, scale and gravity.
 ACTORDEF new functions:
  - A_SetPushFactor
  - A_SetScale
  - A_SetGravity
Added r_lightmapfadeoutfunc console variable, change the fadeout function of software dynamic lights (linear, curved, persist and cosine). Can be set from the menu (Options/Display/Advanced/Lightmap).
Added r_bltasync console variable, when true (default) it will blit the frame to the DirectDrawBuffer asynchronously (software renderer). Can be configured from the Menu (Options/Display/Advanced)
Added DEH_SaveStatesCSV and BEX_SaveStatesCSV console commands, save states information to a csv file.
Added DEH_SaveSpritesCSV and BEX_SaveSpritesCSV console commands, save sprite names to a csv file.
Light definitions inside LIGHTDEF lump will overwrite previous light declarations.
Added r_generatespritesfromvoxels console variable. When true (default) it will generate sprites for voxels without a corresponding sprite.
Fixed uncapped framerate glitch in teleporting monsters.
LIGHTDEF lumps now define lights in a per actor basis and not in a per sprite bases. 
Fixed clipping problems on voxels and models in OpenGL mode.
Added r_fakecontrast console variable. When true (default) it will add contrast to perpendicular lines.
Speed optimizations to the upcapped framerate subsystem by processing only the mobjs that the renderer touched.
Texture width is not requiered to be power of 2 (software rendering).
Corrected issues with tall textures in OpenGL rendering.
Added interpolateoncapped console variable. It will smooth display in capped framerate. Default is true.
Fixed glitch in sky drawing, it was ignoring visplanes with 1 px height.
Fixed some glitches with high walls in software rendering.
Dehacked strings will change sprite names. Strings must have length of 4 characters.
Masked textures can have columns without patches.
WASD keyboard preset uses the "E" key for jumping.
Support for tall textures in software rendering.
Added MF2_EX_JUMPUP flag. When set the actor will often (about 92% chance) decide to jump up (up to 56 units) to pursue target. Default for friendly monsters.
Support for extended help screens (HELP01 thru HELP99). See also https://www.doomworld.com/forum/topic/111465-boom-extended-help-screens-an-undocumented-feature/
Automap can now handle big maps without glitches.
Speed optimizations to the OpenGL renderer.
Fixed some glitches of the OpenGL rendering.
Added MF2_EX_DONTBLOCKPLAYER flag, when set a solid object does not block players.

Version 2.0.4 build 720 - (12/10/2019)
-----------------------
Now recornizes kvx voxels inside the VX_START/VX_END namespace.
Added vox_exportlightmap console command (OpenGL version only). Exports the current lightmap into a ddvox voxel.
Limit OpenGL framerate to monitor refresh rate is now preserved and executed correctly from defaults.
Lower memory utilization for OpenGL renderer (visplane declaration does not include the unneeded for the gl renderer visindex arrays).
Added 'CANPASS' alias for 'PASSMOBJ' flag in ACTORDEF definitions.
Added support for slab6 VOX voxels.
Added pushfactor mobjinfo field. It determines how much a PUSHABLE mobj can be pushed. Default is FRACUNIT div 4 (25% of pusher speed)
Added PS_GetMobjInfoPushFactor PascalScript function. Returns the PushFactor of mobjinfo.
Parse SNDINFO & SNDINFO.txt entries from PK3 files.
Fixes to SNDINFO parsing.
A_Jump* mobjinfo functions will check if parameter is a label and jump to it. 
We can now define interval for THINKERs inside ACTORDEF lumps.
We can use PG_UP & PG_DOWN keys in the console to view the previous messages.
Added A_RandomGoto & A_ResetHealth ACTORDEF functions.

Version 2.0.4 build 719 - (19/9/2019)
-----------------------
OpenGL models rendered from external DLL.
Removed the "Draw sky" command from the OpenGL menu. (gl_drawsky console variable still exists)
External PNG textures fixes and loading optimization - fixed problems with later DHTP.
ZLib updated to version 1.2.8
Allow comments (//) inside PK3ENTRY lump.
Corrected problem with trailing spaces inside PK3ENTRY lump.
Small corrections to r_sprites.pas
ACTORDEF functions parameters appear to the DD_IDE tool.
Fake 3d is off by default.
When the -dontsavedefaults is passed to the command line parameters, the defaults file (Heretic32.ini) will not be saved.

Version 2.0.4 build 718 - (13/10/2018)
-----------------------
Paraller vissprite sorting using separate thread.
Fixed rare bug that could crash the engine. The error could occur if multithreading mode was enabled and total spans had never exceeded the number of active threads for flat drawing.

Version 2.0.4 build 717 - (20/9/2018)
-----------------------
CODEPTR keyword in BEX files will recornize ACTORDEF actions with custom parameters.
Fixed bug in A_SubtractCustomParam and A_SubtractTargetCustomParam ACTORDEF functions.
ACTORDEF functions can now access mobj custom params using the appropriate keywords:
  -CustomParam
  -TargetCustomParam
R_SortVisSprites now uses radix sort algorithm when we have more than 1024 vissprites for better performance.
Use multiple cpu cores for HUD drawing.

Version 2.0.4 build 716 - (21/2/2018)
-----------------------
Added PROJECTILE keyword in ACTORDEF content. It sets the MF_NOGRAVITY MF_DROPOFF and MF_MISSILE flags on.
Added new ACTORDEF functions to control PASCALSCRIPT world and map variables:
  -A_SetMapStr
  -A_SetWorldStr
  -A_SetMapInt
  -A_SetWorldInt
  -A_SetMapFloat
  -A_SetWorldFloat
ACTORDEF functions can now access world and map variables using the appropriate keywords:
  -MapStr (for map string variables)
  -MapInt (for map integer variables)
  -MapFloat (for map float variables)
  -WorldStr (for world string variables)
  -WorldInt (for world integer variables)
  -WorldFloat (for world float variables)

Version 2.0.4 build 715 - (18/2/2018)
-----------------------
Corrected demo recording bug. Problem was more likely appeared in version 2.0.3.704.
16 and 32 angles in sprites.
Midi files will not freeze the game input when restarted.
Volume control now works in midi files.
Midi files playback will pause when the game is paused (pause key pressed).
MP3 files playback will pause when the game is paused (pause key pressed).
Will not spawn terrain splashes in case of a bridge of self referencing sectors.
Will read PNG sprites inside WADs, support for "grAb" PNG chunk to determine offsets.
Will also read BMP (bitmaps) sprites inside WADs. 

Version 2.0.4 build 714 - (22/1/2018)
-----------------------
Interpolate sector flag can be controled within PascalScript.
Fixed accuracy of status bar drawing in 8 bit display mode.
Hires lookup tables are calculated using multiple threads if possible.
New icon, that resembles an ancient temple of Delphi archaeological site.
If infinite state cycles detected will exit with I_Error.
Small fixes to the fake3d effect.

Version 2.0.4 build 713 - (12/1/2018)
-----------------------
Menu beautifications.
Option to switch to ESDF keyboard movement.
Now correctly executes console commands on AUTOEXEC lump.
Speed optimizations to the software renderer on maps with big number of drawsegs. (using multiple lists of drawsegs).
Fixed small issues with the multithreaded dephbuffer calculation.

Version 2.0.4 build 712 - (1/1/2018)
-----------------------
Corrections to the screen DPI detection.
Doombuilder configuration files are distributed with the binaries.

Version 2.0.4 build 711 - (31/12/2017)
-----------------------
Fixes to sky drawing (both software and OpenGL mode).
Corrected z-fighting between corpse and dropped item (software renderer).
Multithreading depthbuffer calculation for the software renderer.
Multiple threads for spans drawing.
Multithreading performance improvements in computers with 4 or more CPU threads (software renderer). 
Screen DPI awareness when running in Windows 8.1 or greater.

Version 2.0.4 build 710 - (23/12/2017)
-----------------------
Automatically unset the TWO-SIDED flag for lines without backsector.
Speed optimizations in things rendering (software renderer).

Version 2.0.4 build 708 - (21/12/2017)
-----------------------
Mobjs do not slip while descenting a slopped floor.
Added line special 283, mobjs on tagged sectors will slip if descenting a slope.
Added "Gravity" sector field (controlled by PascalScript).
Added GetSectorGravity & SetSectorGravity PascalScript functions
Added RippleFloor, RippleCeiling and Gravity properties for PascalScript !TSector class.
Added MF2_EX_CANTLEAVEFLOORPIC mobj flag.
Added MF2_EX_JUMPDOWN mobj flag. 
Added MF2_EX_FULLVOLACTIVE MF2_EX_FULLVOLDEATH MF2_EX_FULLVOLSEE MF2_EX_FULLVOLPAIN MF2_EX_FULLVOLATTACK mobj flags
Added GameMap() & GameEpisode() PascalScript functions.
Added GetConsoleStr(), GetConsoleInt() and GetConsoleBool() PascalScript functions.
Corrected glitches when rendering the dynamic lightmap (OpenGL renderer).
Corrected glitches when rendering transparent middle textures (OpenGL renderer).
Corrected T_FireFlicker savegame bug (https://doomwiki.org/wiki/Sector_type_17_is_disabled_after_loading_a_saved_game)
High resolution patches inside HI_START/HI_END namespace (OpenGL renderer).
Presice rw_distance and rw_offset calculation (https://www.doomworld.com/forum/topic/70288-dynamic-wiggletall-sector-fix-for-fixed-point-software-renderer/?do=findComment&comment=1340433)
Visplanes with the same texture now match up far better than before (https://www.doomworld.com/forum/topic/70288-dynamic-wiggletall-sector-fix-for-fixed-point-software-renderer/?do=findComment&comment=1342176)
R_PointToAngle function in rendering replaced with a floating point equivelant to eliminate glitches in huge maps.
Precalculated finesine and finecosine tables replaced with larger and more accurate equivelants (rendering only - not logic).
Added MF2_EX_DONOTRENDERSHADOW mobj flags, when set the mobj do not cast shadow (OpenGL renderer).
Speed optimizations for the software renderer.
Fixed tutti frutti bug for short textures.

Version 2.0.3 build 707 - (12/12/2017)
-----------------------
Fixed full screen title drawing problem when the width resolution was 1920 or 2560.

Version 2.0.3 build 706 - (18/11/2017)
-----------------------
Added new model formats (ddmodel & dmx) for the OpenGL version. These formats can be created with the DD_MODEL tool (https://sourceforge.net/projects/delphidoom-procedural-modeler/).

Version 2.0.3 build 705 - (7/11/2017)
-----------------------
Fixed music pitch problem (as mentioned by RTC_Marine at https://www.doomworld.com/forum/topic/92113-delphidoom-20/?do=findComment&comment=1700485)
Hud drawing speed optimizations in 2560 x 1440 & 3840 x 2160 resolutions.

Version 2.0.3 build 704 - (29/10/2017)
-----------------------
PascalScript can now access DLLs from inside pk3 files. (or WAD files if using PK3ENTRY lump)
Smooth freelooking. Now the engine does not ignore the slight variations in mouse movement (as suggested by  RTC_Marine - https://www.doomworld.com/forum/topic/92113-delphidoom-20/?do=findComment&comment=1700485) 
Internal save/load version updated to version 2.03.
Added A_PlayerMessage mobj function.
Added gl_no_glfinish_hack console variable to avoid with OpenGL slowdown on systems with Intel HD4000 and Windows 10 (default is True).
Will load configuration file (heretic32.ini) of previous versions.

Version 2.0.2 build 703 - (17/10/2017)
-----------------------
Added PCX image external texture support.
A_Gotoxxxxx functions evaluate small expresions in state parameter (addition & substraction of a constant value).
Added AllMissiles method to "Actors" PascalScript variable.
Added mobj functions to control flow depending on map & world variables:
 - A_JumpIfMapStringEqual
 - A_JumpIfMapStringLess
 - A_JumpIfMapStringGreater
 - A_JumpIfMapIntegerEqual
 - A_JumpIfMapIntegerLess
 - A_JumpIfMapIntegerGreater
 - A_JumpIfMapFloatEqual
 - A_JumpIfMapFloatLess
 - A_JumpIfMapFloatGreater
 - A_JumpIfWorldStringEqual
 - A_JumpIfWorldStringLess
 - A_JumpIfWorldStringGreater
 - A_JumpIfWorldIntegerEqual
 - A_JumpIfWorldIntegerLess
 - A_JumpIfWorldIntegerGreater
 - A_JumpIfWorldFloatEqual
 - A_JumpIfWorldFloatLess
 - A_JumpIfWorldFloatGreater
 - A_GoToIfMapStringEqual
 - A_GoToIfMapStringLess
 - A_GoToIfMapStringGreater
 - A_GoToIfMapIntegerEqual
 - A_GoToIfMapIntegerLess
 - A_GoToIfMapIntegerGreater
 - A_GoToIfMapFloatEqual
 - A_GoToIfMapFloatLess
 - A_GoToIfMapFloatGreater
 - A_GoToIfWorldStringEqual
 - A_GoToIfWorldStringLess
 - A_GoToIfWorldStringGreater
 - A_GoToIfWorldIntegerEqual
 - A_GoToIfWorldIntegerLess
 - A_GoToIfWorldIntegerGreater
 - A_GoToIfWorldFloatEqual
 - A_GoToIfWorldFloatLess
 - A_GoToIfWorldFloatGreater
Support for 'TEXTURE3' texture lump.
Added PascalScript function "IsPrime()".
Builds map nodes if missing.

Version 2.0.2 build 702 - (30/8/2017)
-----------------------
Fixed alpha channel in TGA screenshots.
Added keepsavegamename console variable, when true (default) you do not have to re-ender the save game name when overwritting saves.
The mouse sensitivity slider within menus can accept values up to 20.

Version 2.0.1 build 701 - (28/12/2016)
-----------------------
Fixed some glitches of the overlay drawer when screenblocks < 10.
New PascalScript functions, mostly for retrieving information about mobjinfo.

Version 2.0.1 build 700 - (22/12/2016)
-----------------------
Places screenshots inside data\screenshots folder.
Mirror screenshot to jpg format.
General purpose multithreading utilities will use more than 2 logical CPUs if available.
Sound precaching discarted. (was causing problems with memory managment)
Added -cgaX3 command line parameter, starts at 960X600 resolution.
SpawnMobj console command also gets angle as parameter.
Search for ACTORDEF lumps inside PK3/PAK files.
Added support for V5 glnodes.
Visplane hash. 
Added -geom command line parameter. e.g. -geom 800x600
Corrected teleport handling for mobjs with MF2_NOTELEPORT flag.
Added TNTHOM and HOM console commands, to enable/disable HOM detection. (software renderer only)
Added compile, compilescript & pscomp console commands, compiles pss script into bytecode (file input, file output).
Added A_GhostOn mobj function.
Added A_RunScript mobj function.
Added A_Turn5 & A_Turn10 mobj functions.
Added Spawnmobj console command.
THINKER keyword inside ACTORDEF lumps (runs script).
Added -con command line parameter, executes at loadtime a file containing console commands.
Added halt console command, stops executing without endscreen and without end sound.
Added line special 282, create ladder to tagged sectors.
Saved games contain texture and flat names, no texture and flat numbers (SAVEGAMEVERSION = 115).
Added A_Blocking mobj function.
Added MF2_EX_DONRUNSCRIPTS mobj flag.
Added A_DoNotRunScripts & A_DoRunScripts mobj functions.
Added MF2_EX_PRECISESPAWNANGLE mobj flag. (Use precise spawnangle of mapthing to spawn mobj)
Transparent middle textures for linedef (action=260)
Keep sector renderflags in saved games.
Keep linedef renderflags in saved games.
Support for HI_START & HI_END namespace inside WADs.
Bug fix: Now wall drawing uses correct light level in 32 bit color software rendering mode.
Maximum number of general purpose threads increased to 16.
Added TNT1 sprite for use with custom actor definitions.
Added line special 281, create 3d middle floor to tagged sector(s).
More accurate fake3d effect.
Added line specials 386, 387, 388, 389, 390 & 391, create sloped sectors.
Teleport zoom effect.
Added getworldvar & getmapvar console commands. Display pascal script world and map variables.
Added setworldvar & setmapvar console commands. Set pascal script world and map variables.
Will use PK3ENTRY lump inside a wad file to define long filename aliases for other wad lumps.
Added MF2_EX_CUSTOMDROPITEM mobj flag. When set, the specified instance of the mobj drops a custom dropitem
Added A_SetDropItem & A_SetDefaultDropItem mobj functions.
Added A_TargetDropItem & A_DefaultTargetDropItem mobj functions.
Added overlaydrawtextleft, overlaydrawtextright, overlaydrawtextcenter, overlaydrawpixel and overlayputpixel console commands.
Added A_GlobalEarthQuake mobj function.
Corrected voxel scale in software rendering mode. 

Version 1.1.6 build 605 - (29/8/2016)
-----------------------
Fixes to the textured automap.

Version 1.1.6 build 600 - (31/12/2015)
-----------------------
When setblocks = 10 viewwidth does not pad div 8.
Unlimited buffer when recordifng demos.
Fake3d fixes.
Added excludewidescreenplayersprites console variable, will not apply widescreen correction to player sprites.
Software renderer speed optimizations.
Added doadjustmissingtextures console command, adjust missing upper/lower textures on demand, regardless the value of adjustmissingtextures console variable.
Bug fix, now displays the correct translation of sprites in OpenGL mode.
Fixed transparency in 8 bit color mode.
Fixed cachehit command stats when not using external textures.
Menu drawing speed optimizations.
Multithreading utilities (mt_utils.pas).
Improvements to interpolation subsystem.
Added custom parameters to mobjs ([parameter name(string)] - [value(integer)], eg inventory). 
Added A_SetCustomParam, A_AddCustomParam, A_SubtractCustomParam mobj functions.
Added A_SetTargetCustomParam, A_AddTargetCustomParam, A_SubtractTargetCustomParam mobj functions.
Added A_JumpIfCustomParam, A_JumpIfCustomParamLess, A_JumpIfCustomParamGreater mobj functions.
Added A_JumpIfTargetCustomParam, A_JumpIfTargetCustomParamLess, A_JumpIfTargetCustomParamGreater mobj functions.
Corrected automap aspect ratio in OpenGL mode.
Textured automap.
Added texturedautomap console variable.
Will attempt to load UDMF maps.
Fixed automap drawing when r_interpolate variable is true.
Fixed voxel loading bug in software mode when using multithreading functions.
Added MF2_EX_NODAMAGE mobj flag.
Added A_SetNoDamage & A_UnSetNoDamage mobj functions.

Version 1.1.5 build 581 - (22/5/2013)
-----------------------
Small fixes to voxel support.

Version 1.1.5 build 580 - (22/5/2013)
-----------------------------------
Added -fullhd, -vga and -svga command line parameters.
Added force_numwallrenderingthreads_8bit and force_numwallrenderingthreads_32bit console variables, set the number of threads to create for wall rendering.
Loads wad and pk3/pak files from command line without -file and -pakfile
Default miditempo changed to 160
Executes all console commands inside wad lumps with the "AUTOEXEC"name.
Maximum visplanes increased to 8192.
Added line specials 279 & 280, create ripple effect to tagged sectors floor or/and ceiling.
Added -cga command line parameter.
Corrected bug with mouse sensivity in different screen resolutions.
Replaced old zone memory allocation.
Removed limit on number of visprites, now they are allocated dynamically.
R_SortVisSprites now uses quicksort for better performance.
Corrected bug of IDFA cheat, was giving all weapons even on shareware.
Added precisescalefromglobalangle console variable, when true uses more precise calculations in software rendering.
Added MF2_EX_FRIGHTENED mobj flag.
Added A_SetFrightened and A_UnSetFrightened mobj functions.
Changed menu font.
New fake3d algorythm, better 3d emulation and faster in software rendering mode.
The idmypos cheat shows also the z coordinate.
Added blancbeforerender command line parameter, blanc screen before render.
Support for voxels in OpenGL rendering mode.
Added gl_renderwireframe console variable.
Added vx_maxoptimizerpasscount console variable, indicates how many passes at max the voxel mesh optimizer makes. Default is 0 (=use FastOptimize method for acceptable results and good performance)
Support for voxels in software rendering mode, still needs work.

--------------------------------------
version 1.1.4.551 (Released 19/3/2013)
-----------------
Fixed wav chunks reading bug.
Added A_RemoveSelf  mobj function.
Chase camera positioning improvements.
FastMM memory manager upgrated to version 4.99.
Corrected stencil sky rendering in OpenGL mode.
Zlib updated to version 1.2.5
Added autoadjustmissingtextures console variable, when true try to "guess" and correct missing textures.
Autoloads required pak/pk3 files inside AUTOLOAD wad lump.
Faster loading when -devparm is defined.
Added A_GoTo, A_GoToIfCloser, A_GoToIfHealthLower mobj functions.
DLIGHTSDRAWRANGE and SHADOWSDRAWRANGE increased to 2048 * FRACUNIT.
Fixed disapearing sprites with transparency < 50% in OpenGL mode. 
Doesn't try to spawn DoomBuilder 3D Editing mode camera (doomednum=32000).
'TEXT' keyword in dehacked files works now with music.
Great speed optimizations in 8 bit color software mode (fps incresed 10-15%).
Supports the Heretic Wide Area Beta (levels e1m1 - e1m3). (http://www.doomworld.com/idgames/index.php?id=14154)
Added A_ConsoleCommand mobj function.
Turbo scale limited to 200%
Added modelmapping console command to determine which models are present. (OpenGL version only)
Added optimizedcolumnrendering console variable, when true (default) uses optimized method for column rendering
Fixed ascpect ratio when using widscreen monitors.
Added allowhidetails console variable.
Added widescreen,widescreensupport console variables.
Added forcedaspect console variable to set custom aspect ratio.
Added pngtransparentcolor and pngtransparentcolor2 console variables.
Added optimizedthingsrendering console variable, when true (default) uses optimized method while rendering sprites
Multithreading column rendering.
Added assumecommontranspantcolors console variable, when true assumes x0FFFF, x0FF00FF and x0FFFF00 as transparency indicators in png images.

--------------------------------------
version 1.1.3.500 (Released 20/1/2012)
--------------------------------------
Displays Disk Buzy icon for 4 ticks instead of 4 frames.
Fixed ENDOOM bug witch causing menu to respond during ending game while playing a demo. 
Changed SKEL cheat to idskek due to problems with WASD key compination for moving
Fixed Medusa Effect Bug.
Added displayresolution alias for "detaillevel" console variable.
WAD lumps hash indexing for better performance. (using djb2 hash function)
Fixed bug that didn't recornized mf2_ex flags inside ACTORDEF lumps
Added A_FadeOut10, A_FadeOut20, A_FadeOut30, A_FadeIn10, A_FadeIn20, A_FadeIn30 mobj functions.
Added A_SpawnItemEx and A_RandomMissile mobj functions.
Fixed transparency HUD in OpenGL mode.
Added support for GL_FRIENDLY nodes (OpenGL version). 
Automatically loads *.GWA files if autoloadgwafiles console variable is set to true. (OpenGL version). 
Suspend interpolation for teleporting objects.
Added giveallkeys and idkeys console commands alias for skel and idskel.
Fixed sprite drawing bug in OpenGL mode when looking up/down.
Hash Indexing of external PAK/PK3/ZIP files.
Added debugsound console command alias for noise cheat.
Default miditempo changed to 128.
Added support for dynamic lights, using LIGHTDEF lump.
Precaclulate OpenGL display lists for floors and ceilings if possible.
Fixed sky rendering problems in OpenGL mode.
New simplified blocklinks handling mechanism.
Added gl_stencilsky conslole variable.
Corrected some issues in OpenGL rendering.
Added support for MD2 models (OpenGL only).
Check for LIGHTDEF lumps inside PAK/PK3 files. (First parse all LIGHTDEF entries and then all LIGHTDEF.txt entries)
Added gl_drawmodels console variable.
Added gl_smoothmodelmovement console variable.
Dynamic lightmap implementation.
Added gl_uselightmaps console variable.
Added gl_precachemodeltextures console variable.
OpenGL UI speed optimizations.
Custom lighttables in OpenGL using GLGAMMA lump.
New external texture format named (using .material extension) to combine at load time with user defined parameters more than one external textures into one.
Added simple shadows.
Added gl_drawshadows console command.

Changes from version 0.1.6.44
-----------------------------
Added jpeg external textures support.
Maximum display resolution increased to 2048x1536.
Fixed zip library memory leak.
Keyboard movement can be changed from <arrows> movement to <WASD> movement.
Added keyboardmode console command.

Changes from 0.1.5.38
---------------------
Added criticalcpupriority console variable.
Corrected chace camera view.
Added usetransparentsprites, dontusetransparentsprites, uselightboost and dontuselightboost command line parameters.
Added lightboostfactor command line parameter.
Added chasecamera and nochasecamera command line parameters.
Corrected bug that drawn the player sprites in black color when starting with -warp parameter.
Corrected menu flashes.
Added ENDTEXT support (displays end screen).
Added displayendscreen console variable.
Added displaydiskbuzyicon console variable.

Changes from 0.1.4.19
---------------------
Fixed FOG spawning while teleporting.
Changed position of flight and weapon level2 icons.
Fixed end episode bug: Now displays the end text.
Corrected status bar health display when health > 100.
Fixed crash while typing massacre console command before game start.
Added easy launcher to control the most common tasks.
Displays disk buzy icon.
Fixed problem with statusbar display in automap when setblocks was 12.
Corrected main menu graphic position.
Corrected random pain sound when MF_EX_RANDOMPAINSOUND flag is set.
Draws the "Advisory warning".
Added -internalgamedef command line parameter to ignore GAMEDEF lump inside DHSYSTEM.WAD.
Added game files menu.
Added menu_gamefiles console command.
Allows ';' for comment in SNDINFO lumps.
Corrected weapon positioning to be identical to original game.
Changed console font.
Automap zoom in and screenblocks change can also work with the '+' key in numeric keyboard.
Added listcmds console command.
Added noise cheat and noise console command.
Chace camera view.
Added chasecamera console variable.
Added chasecamera_viewxy console variable.
Added chasecamera_viewz console variable.
Fixed random monsters spawning in shareware version of the game.
Corrected small sky bug in Ultra Detail with zaxisshift.

Changes from 0.1.3.14
---------------------
Fixed crashes while ending level. (thanks Robert)
Added gimme console command.
Corrected automap marks rotation.
Added skel and ponce console commands.
Added skel and ponce cheats.
Added engage console command.
Fixed music problems in some levels.
Does not use external textures for title screens if useexternaltextures variable is set to false.
Correctly identifies game directories for external textures and mp3 music.
Corrected display of flight and weapon level2 icons.
Fixed movement in low friction sectors.
Fixed bug that crashed the game when loading non standard flats inside wads.
Fixed water, lava and sludge terrain behaviour.
Fixed sound problems in help screens.
Fixed player flying movement.

Changes from 0.1.2.12
---------------------
Fixed quicken cheat.
Fixed iddqd cheat.
Fixed health > 100 issue.

------------------------------------
Added automap background display.
Added DHSYSTEM.WAD system wad.
Added automap rotation.
